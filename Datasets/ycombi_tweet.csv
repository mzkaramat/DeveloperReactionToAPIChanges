created_at,title,post
2018-07-05T10:39:40.000Z,Show HN: Generate your og:images automatically,"Hello Hacker-Newsers!<p>I’m Armin, co-maker of Placid. We deliver Social Images as a Service: Placid lets you generate nice Share Images for Twitter and Facebook via our API. (And more Social Image Formats soon!)<p>Here’s how it works:<p>1) Choose a preset design from our library.<p>2) Customize your template with default values for colors, text, photos &#x2F; logos.<p>3) Integrate the meta tags into your project.<p>4) Change parameters of the Image URL in the meta tag to dynamically fill elements of the template. You can f.ex. generate your blog article’s title on to the image or fill a browser window with a screenshot of a website.<p>We started building Placid as a tool to automate Social Image Generation for our own projects and we figured it’s something that other people could use too. For now, we concentrated on providing Meta Images, but we’re already testing Placid for other use cases, like generated Pinterest Images. So we’ll soon add:<p>* An editor to create templates from scratch (and with custom Image Dimensions)<p>* More options to customize Presets<p>* More Presets (also for Instagram Posts and Stories, Pinterest Pins, Facebook Posts,..)<p>We’d love your feedback and suggestions for missing features or preset options :)<p>Armin"
2018-07-05T05:34:26.000Z,Itty Bitty: Sites contained within their own links,"I don&#x27;t follow. I have a Twitter profile. If someone else shares racist stuff on their Twitter profile, is it &quot;on my domain?&quot;<p>In any case, I&#x27;m skeptical that you would ever use this for a blog because the links are immutable. You&#x27;d have to either change your homepage every time you updated your blog, or you&#x27;d have to dynamically render your homepage in Javascript by querying another server - and if you&#x27;re gonna do that, what&#x27;s the point? Just host your own stuff then.<p>What this gives you is a way to share static content where your entire app&#x2F;page can be distributed in the url with extremely minimal server interaction. There&#x27;s no risk of malware or vandalism because there&#x27;s nothing actually being hosted - the URL <i>is</i> the data. When you share it with someone you know exactly what they&#x27;re going to see when they click on it.<p>I can think of a lot of uses I might have for this; even just minor things like sharing quick lists with family members. Updating the URL whenever I changed something would be annoying, but the benefits might outweigh the drawbacks.<p><i>Edit: Are you talking about domain forwarding? I could see how that would be problematic. It didn&#x27;t occur me because I&#x27;m not sure what the advantage would be. I don&#x27;t think I&#x27;ve ever been in a situation where it was too cumbersome for me to host static content somewhere, but not too cumbersome for me to buy a domain and edit its config whenever I published content.</i>"
2018-07-03T01:29:50.000Z,Tim Berners-Lee’s Solid is a platform designed to re-decentralize the web,"There are two closely intertwined but separate issues: centralization and governance.<p>Current web technology typically sees one entity controlling the data; if you sign up for a website, your data goes in their database.  That&#x27;s due to the common stack we all build on: some form of API&#x2F;web server, some form of SQL&#x2F;NoSQL database, some form of client.  If we had a world where developers could simply and freely implement services on top of a <i>different</i> paradigm, we&#x27;d stop having to worry about big central entities like Facebook, Google, your local computer store, whoever -- being able to sell your data.  They simply wouldn&#x27;t have it.  I&#x27;m not sure what that paradigm is, but IPFS, Secure Scuttlebutt, Solid, the Dat Project etc. are all interesting takes on what a solution to that problem might look like.<p>At the other end of the spectrum is governance, which is something sorely lacking, and allows these misinformation campaigns to spread so freely.  Do we still have to worry about governance in a world where we own our own data?  Yes, probably, if the surge of illegal and genuinely nasty content like Child Pornography on the new big distributed networks (eg. ZeroNet) is any indicator.  Censorship is a spectrum, and while I can appreciate sticking to the view that free speech is best for all, there are some behaviours which society has mostly agreed are objectionable.<p>The current paradigm of each social service provider essentially being a self-determining fiefdom isn&#x27;t too dissimilar to how humaity&#x27;s always done things, I guess (for instance, different pubs&#x2F;bars will have differing clienteles and degrees of socially acceptable behaviour), except for the scale -- which unfortunately probably does merit a change in how our current major sites are run (YouTube and Twitter in particular seem like they&#x27;ve been gamed incredibly well by cynical parties).  I don&#x27;t know how we solve this problem, but better technical underpinnings might make this a simpler problem to solve.  Independently, however, I note that there are places like <a href=""https:&#x2F;&#x2F;social.coop"" rel=""nofollow"">https:&#x2F;&#x2F;social.coop</a> where they&#x27;re trying to take that problem on head-first.<p>It will be interesting to see what the next few years of the internet look like.  My hope is that we see some of the people interested in this problem start focussing on normal people instead of other techies; suggesting to my friends that they move to Secure Scuttlebutt is pretty hard, as the majority of them really only use their phones (or tablets).<p>Personally, I think something that tied together messaging and an event invitation&#x2F;calendaring system would take a <i>massive</i> knock out of the people who are only hanging onto Facebook for those two things, but that&#x27;s still a techy view of &quot;kill centralisation&quot; and not a social view of &quot;how does that new platform get governed?&quot;."
2018-06-25T08:14:35.000Z,Migrating from Jekyll to Hugo,"Thanks for sharing this. Fascinating!<p>I&#x27;m a big fan of serving content APIs as static assets like you are doing here. Especially good for content which changes infrequently (a few times a day rather than many times a minute).<p>Static site generators typically make it simple to publish a structured data view like a JSON or XML feed of content alongside content pages as HTML (such a bonus!), but it is interesting to see that you&#x27;ve separated the API generation entirely as a Hugo build. (presumably for compile speed?)<p>I work at Netlify and am something of a JAMstack enthusiast. I&#x27;d love to learn more about the experience of designing and building this. If you&#x27;d be interested in doing more of a write up, or just sharing any of the learnings from along the way, I&#x27;d love to chat.<p>(<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;philhawksworth"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;philhawksworth</a>)"
2018-05-27T10:26:52.000Z,Comparing the C FFI overhead in various programming languages,"Go does not use the C stack, so calling into C requires setting up a C stack, trampolining from the Go context to the C context, making the call and coming back.<p>As a result, while cgo is easy to use:<p>1. calling a C function from Go is ~100 times more expensive than calling a Go function from Go — or was a few years back anyway this may have improved a bit since: <a href=""https:&#x2F;&#x2F;www.cockroachlabs.com&#x2F;blog&#x2F;the-cost-and-complexity-of-cgo&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.cockroachlabs.com&#x2F;blog&#x2F;the-cost-and-complexity-o...</a><p>2. and using cgo has semantics impact on the entire program: <a href=""https:&#x2F;&#x2F;dave.cheney.net&#x2F;2016&#x2F;01&#x2F;18&#x2F;cgo-is-not-go"" rel=""nofollow"">https:&#x2F;&#x2F;dave.cheney.net&#x2F;2016&#x2F;01&#x2F;18&#x2F;cgo-is-not-go</a><p>This is why Go libraries generally don&#x27;t wrap native libraries and go software only calls into C when they really have no other choice, and&#x2F;or have very &quot;coalesced&quot; APIs available (a single function call doing a lot of work whereas languages like Python are happy with making lots of very small calls to C).<p>And why Go itself does not use the platform-provided standard libraries and performs syscalls directly, breaking any time those syscalls change[0] — which is not that rare because linux is the only platforms where raw syscalls are the kernel&#x27;s API, on most other systems the libc is the platform&#x27;s API. And even on linux it breaks from time to time[1] because Go doesn&#x27;t want to link to libc but still wants to benefit from vdso[2].<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;issues&#x2F;16606"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;issues&#x2F;16606</a><p>[1] <a href=""https:&#x2F;&#x2F;marcan.st&#x2F;2017&#x2F;12&#x2F;debugging-an-evil-go-runtime-bug&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;marcan.st&#x2F;2017&#x2F;12&#x2F;debugging-an-evil-go-runtime-bug&#x2F;</a><p>[2] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;bcantrill&#x2F;status&#x2F;774290166164754433?lang=en"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;bcantrill&#x2F;status&#x2F;774290166164754433?lang...</a>"
2018-05-16T17:51:56.000Z,Premium Account Activity API,"This might not be an area people want to discuss, but at this price does it make a grey market API competitor viable? Meaning first party API access is seen as preferable because HTML scraping is unreliable and therefore necessitates a full time staff of individuals to respond to site changes.<p>But if the price is high enough, couldn&#x27;t a third party operating out of another part of the world undercut them using scraping, a dedicated team, and a clean API? Twitter may have technical remedies but it is unlikely they&#x27;d have legal ones outside of the US and a few Western countries.<p>Official APIs Vs. &quot;pirate&quot; APIs haven&#x27;t really been a major issue until now because companies simply weren&#x27;t charging enough to make the alternative cost effective. Is that going to change with pricing strategies like this one?"
2018-05-16T17:44:15.000Z,Premium Account Activity API,"It seems like they&#x27;re waiting for enterprise pricing: <a href=""https:&#x2F;&#x2F;techcrunch.com&#x2F;2018&#x2F;05&#x2F;15&#x2F;tweetbot-3-arrives-with-a-new-look-and-a-reprieve-from-twitters-api-changes&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;techcrunch.com&#x2F;2018&#x2F;05&#x2F;15&#x2F;tweetbot-3-arrives-with-a-...</a><p>I&#x27;d pay $10&#x2F;month for Tweetbot. It is an ad-free twitter experience after all."
2018-05-14T23:30:19.000Z,Favstar will shut down as a result of Twitter’s API changes for data streams,"There was a point in time, around 5 years ago more or less, when third party twitter clients were driving a fair amount of innovation in desktop UI, particularly on OSX. As a mentor I&#x27;d even ask if my mentee would want to learn to code by pulling some stuff out of Twitter and putting it in their own design on their own webpage. There was a lot of hope and promise back then, and Twitter was giving a voice to people in harsh regimes as their other modes of contact were being shut down (like with Arab Spring). They looked like they were on the up and up.<p>I don&#x27;t think moves like this solve Twitter&#x27;s existential abuse problem, which I believe has far more to do with their 140 characters and unsolicited heckling than it does anything else. It turns your whole reality into gossip and this gossip overpowers any semblance of rational or reasoned discourse. It&#x27;s intensely toxic and shutting off an API and some client apps changes nothing about that."
2018-05-09T02:59:56.000Z,Google Duplex: An AI System for Accomplishing Real World Tasks Over the Phone,"One time, a giant tech company staffed by geniuses released a super-useful tool that saw massive adoption. 10 years later that tool became technical debt.<p>Wait, it was way less than 10 years.<p>I&#x27;m talking about Google Realtime. Or reader? Or buzz?<p>No, wait, I&#x27;m talking about aggressive Twitter API deprecation&#x2F;removal.<p>Wait, nevermind, I&#x27;m talking about Facebook.<p>You get the idea. What&#x27;s revolutionary today sometimes becomes the substrate for future innovation. Sometimes it gets cast by the wayside, even in the face of significant &quot;user&quot; (developer) popularity.<p>That&#x27;s not proof of negativity; just realism. Negativity would be &quot;no new innovation will ever get traction&quot;. Optimism would be &quot;all new technologies will change the world&quot; (c.f. <a href=""https:&#x2F;&#x2F;www.npmjs.com&#x2F;browse&#x2F;depended"" rel=""nofollow"">https:&#x2F;&#x2F;www.npmjs.com&#x2F;browse&#x2F;depended</a>). This is neither."
2018-05-03T06:14:09.000Z,Proton Native – React Native for the desktop,"&gt; I&#x27;m aware of that–that&#x27;s why I said it is possible that you can do it from JavaScript. What I&#x27;m saying is that the JavaScript layer generally causes issues like this, because UINavigationController only works in specific cases. For example, scrolling only works if you&#x27;re a singular top-level scroll view. Getting the titles to animate only works if you don&#x27;t try to modify it after the fact. Putting a button in the navigation bar&#x27;s title view just makes it mess up when it runs its first layout pass. A lot of frameworks end up doing this, or making it very easy for this to occur, so you end up with &quot;broken&quot; navigation of the likes seen in that GIF. Of course, it&#x27;s not unusable, so those who aren&#x27;t as familiar with how it should work don&#x27;t notice the difference.<p>Most of those issues that you bring up with UINavigationController are, while annoying, not actually _that_ common in apps, and people run into them at the native level too - it&#x27;s not entirely a JS issue. Provided you&#x27;re not doing anything too against the grain (which the Wix API more or less protects novice users from doing), you&#x27;re unlikely to experience too many issues and it functions as an almost completely indistinguishable UINavigationController experience for pretty much everyone.<p>As an aside, if React Native would fix TouchableOpacity to follow platform convention, most people would have difficulty detecting RN apps.<p>&gt; I&#x27;m surprised you haven&#x27;t drawn the cynical conclusion from this: that I&#x27;m desperately trying to keep my skills relevant in a world where they&#x27;re being increasingly obsoleted...<p>I didn&#x27;t draw that conclusion, you&#x27;re correct - but had it been the case, I really wouldn&#x27;t have blamed you. I prefer writing [UI|App]Kit day to day and I&#x27;d hate to not be able to. I&#x27;m more than capable in... just about any programming ecosystem, but they&#x27;re simply not as enjoyable for reasons that are tough to put into words.<p>&gt;Wait, are you really telling me to stop &quot;putting down&quot; non-native projects?<p>No, not at all. I put down Qt all the time myself, but then again, how do you define native? ;)<p>My point here is that coming into these threads and saying that people should be building native iOS&#x2F;macOS&#x2F;etc is a bit of a rough sell, given how nuanced actually developing at the native level for those platforms is (e.g, most people wouldn&#x27;t know that a UITableView section header is really a grouped row in NSTableView - AppKit is woefully undocumented and cobweb filled in 2018). Apple needs to get their shit together, and maybe that&#x27;s what Marzipan or whatever is - in fact, I really hope it is.<p>Until then, there&#x27;s simply no compelling reason to build native [UI|App]Kit when the writing is on the walls. Instead of fighting this battle, people need to complain (loudly, very loudly) to Apple. Electron &amp; co are not taking over because they&#x27;re inherently better as an approach, but because native platforms are literally just rolling over.<p>&gt;it&#x27;s developers who need to realize that the user is important<p>This is idealism, and I applaud you for it, but it&#x27;s honestly misplaced (and I wish it wasn&#x27;t). The user is only important _when you actually have users_. For most apps these days, time to market and getting it out the door trumps whatever perceived native benefits there are.<p>I personally build for quality in my projects because it&#x27;s what I want representing me, and that&#x27;s sadly about the only justifiable reason these days.<p>&gt;Sorry, I&#x27;m not on Twitter, so I&#x27;m not aware of what you&#x27;re talking about here. Could you provide more context?<p>Was a bunch of hubbub recently over this article (<a href=""http:&#x2F;&#x2F;inessential.com&#x2F;2018&#x2F;04&#x2F;25&#x2F;youre_practically_a_mac_developer"" rel=""nofollow"">http:&#x2F;&#x2F;inessential.com&#x2F;2018&#x2F;04&#x2F;25&#x2F;youre_practically_a_mac_de...</a>), where it boiled down to Xcode&#x2F;Apple-ecosystem developers decrying alternative approaches (Electron, RN, etc), and more or less saying that it should be easy to just reuse the same stuff for a Mac app. The argument that most non-Xcode&#x2F;Apple-ecosystem devs made was that Apple:<p>- Really, really sucks when it comes to Mac&#x2F;AppKit documentation these days, and discoverability in comparison to the likes of JS and such is nowhere near the same.<p>- Live reload &gt; compile and run, Swift playgrounds aren&#x27;t a solution.<p>- [Almost any JS unit testing framework] &gt; Unit testing in Xcode<p>The tl;dr = Apple is getting off relatively easily for not keeping their dev environments competitive, and people complaining about Electron &amp; co making inroads should really be complaining at Apple for neglecting this stuff. I tend to agree, as noted earlier... and, hell, it&#x27;s not even limited to the above points.<p>For example:<p>- Why the hell are the Apple forums not scrapped and dumped into a hosted StackExchange? It&#x27;s 2018.<p>- Why the hell is Radar still a black hole of information? There are better ways to do this nowadays.<p>- Why the hell is so much of Cocoa &amp; AppKit completely un-Google-able? Half the time you try to find something, you wind up in an archived email thread from the early 2000s. There is no way a new developer is going to put up with this crap in 2018. Shit, if it wasn&#x27;t for NSHipster transcribing WWDC videos we&#x27;d still be sitting there watching video content just to understand a programming ecosystem.<p>- Why the hell does every Cocoa&#x2F;AppKit dev put all their stuff on Twitter these days? They&#x27;re just as responsible as Apple at this point. The JS community documents the everloving bajeezus out of their projects, whereas the only mention you&#x27;d find about, say, NSCollectionView frame&#x2F;bounds change notifications is on Twitter. Nothing from Twitter is easily found in Google.<p>- This list could go on - e.g, why the hell are we _still_ dealing with Cells in AppKit for things like a TextField? We got rid of them for NSTableView, fix the rest already.<p>What&#x27;s really painful about all of this is also that Apple is clearly capable of doing better - Swift alone is a massive improvement in how they&#x27;ve communicated, built, and shipped a developer oriented product. People not holding them accountable and instead expecting the developer community to bend over backwards and build for an aging platform is insanity, especially when this is the most valuable company in the world that we&#x27;re discussing.<p>* = Edits are formatting attempts, because... well, this is another platform that could modernize a bit."
2018-04-27T11:06:23.000Z,"Two Koreas Agree to End War This Year, Pursue Denuclearization","From the Guardian, which can&#x27;t be accused of being a Trump lover:<p>&gt; This system of indoctrination and propaganda complicates any official announcement of the Trump meeting. An ideological framework must be devised to explain the talks with the enemy; and regardless of how they are presented, there is an uncomfortable margin for the “infallible” leader to be seen to fail in his aims.<p>&gt; Trump is a volatile opponent who telegraphed his impatience even before the two men fixed a place to talk, warning he would walk away if he thought the preparations weren’t going anywhere.<p>&gt; But this unpredictability is the reason there are talks at all. Trump’s barrage of verbal and Twitter attacks on North Koreans – which have been reported there – led Pyongyang to question if it was, for the first time in a generation, facing a US president willing to attack them, experts say.<p>&gt; Officials there have long calculated that no US president would risk lives in Seoul with an attack on the North. But under Trump that is no longer a safe assumption, says Andrei Lankov, professor of Korean Studies at Kookmin University.<p>&gt; Kim, like his predecessors, has proved adept at manipulating regional and world powers into providing aid and political support while offering little in return. Now Kim may at last be forced into making real changes to stave off looming political and economic crises.<p><a href=""https:&#x2F;&#x2F;www.theguardian.com&#x2F;world&#x2F;2018&#x2F;apr&#x2F;20&#x2F;north-korea-pyongyang-kim-jong-un-donald-trump"" rel=""nofollow"">https:&#x2F;&#x2F;www.theguardian.com&#x2F;world&#x2F;2018&#x2F;apr&#x2F;20&#x2F;north-korea-py...</a>"
2018-04-23T14:10:44.000Z,A helpful view on blockchain from Union Square Ventures,"Amazon is too big of an example. But look at Filecoin. They are trying to create a competitor to S3 -- a decentralized file storage service. Today, that is much more expensive and slower than Amazon&#x27;s offering. But with all of the scaling solutions in the pipeline (sharding, alternative consensus algorithms like dPOS, sidechains, etc.), perhaps that will change. And I don&#x27;t see why that couldn&#x27;t be forked, in the same way that BCH forked from BTC.<p>Here&#x27;s another example. Peepeth.com is creating a decentralized twitter, with IPFS for storage and indexing on the Ethereum blockchain. Since all that storage is open and public, the creater of peepeth.com is trying to build a business based on his front-end. People can freely create alternate front-ends or apps, and leverage the existing open database of tweets without being limited by Twitter&#x27;s policy whims regarding its API."
2018-04-12T13:38:02.000Z,Alternatives to Reddit?,"How long do you think the API will continue to exist? All of Reddit’s recent moves have shown me they finally realized that much of the DNA of the site (no account verification required, “questionable” speech being semi-tolerated, a dense UX that’s hard to cram ads into, portability, etc.) are what’s preventing them from monetizing. And they’re trying to monetize.<p>This is <i>exactly</i> the transformation Twitter went through. They changed the UX to make it more advertiser friendly, and when people started using alternate clients to get around it, they cut off the API.<p>Frankly I think the community will hate it but because it’s really hard to move millions of individual communities, Reddit likely won’t lose too many users."
2018-04-11T11:27:20.000Z,Python 2 will be replaced with Python 3 in the next RHEL major release,"No that&#x27;s just how IT works.<p>Your games don&#x27;t work in windows XP anymore. Actually, your USB3 mouse doesn&#x27;t work on windows 7 out of the box.<p>Centos have LTS, but still EOL.<p>Ubuntu init system was changed to upstart. Then to systemd. Also gnome, then unity, then with new menu&#x2F;notif&#x2F;systray semantics, then back to gnome (but shell), and soon wayland. It breaks a lot of things.<p>Firefox new addons don&#x27;t work with some addons from last year.<p>NodeJS had 3 incompatible forks in it&#x27;s short life.<p>Twitter and Facebook API breaks every sunday.<p>JS frameworks are just madness.<p>Python break compat, ONCE.<p>Once since 1990.<p>Also gave 10 years to migrate.<p>In our industry, that&#x27;s not bad at all.<p>And the community hold. We worked. We wrote tools, doc, blog posts. We were there all the way. We have incredible libs like python-future to help.<p>And if any of that is not enough, well, Anaconda Continuum will be happy to do business with you.<p>It&#x27;s how it is."
2018-04-07T11:17:19.000Z,Find your Twitter friends on Mastodon,"Excellent service, just what I needed! I’ve been looking at Mastodon for a long while now, but with the recent API changes at Twitter, it’s just the right time to make the switch."
2018-04-05T14:50:09.000Z,“Did We Create This Monster?” How Twitter Turned Toxic,"Im trying to pinpoint when it started going wrong. I think it was when they changed the third party API usages etc which lead to solutions by others being cut off - they had to do everything themselves.<p>But I also think it was the move towards threads and conversations. For a few years Twitter was mostly one directional . You would post your status, similar to how you would update your instant messaging away status. Twitter became a way to follow everyone&#x27;s posts. Threads didn&#x27;t exist and replying was not built in.<p>After these two changes the company became blind drunk with growth and celebrity. Oprah moment."
2018-04-04T21:32:06.000Z,An Update on Our Plans to Restrict Data Access on Facebook,"&quot;Today, however, the company [Facebook] announced sweeping changes to many of its most prominent APIs, restricting developer access in a number of crucial ways.<p>Soon after, Tinder users started noting on Twitter that they had been kicked off the dating app and couldn&#x27;t log back on, as those who used <i>Facebook Login</i> were caught in an infinite loop that appears to be related to an unknown bug.<p>Since <i>you need a Facebook account to log into Tinder</i>, this bug has potentially affected Tinder&#x27;s entire user base.<p>...<p>Tinder has responded in a tweet, &quot;A technical issue is preventing users from logging into Tinder. We apologize for the inconvenience and are working to have everyone swiping again soon.&quot;<p>Source:<p><a href=""https:&#x2F;&#x2F;www.theverge.com&#x2F;2018&#x2F;4&#x2F;4&#x2F;17200034&#x2F;facebook-broke-tinder-down-privacy-api-fixes"" rel=""nofollow"">https:&#x2F;&#x2F;www.theverge.com&#x2F;2018&#x2F;4&#x2F;4&#x2F;17200034&#x2F;facebook-broke-ti...</a>"
2018-04-03T20:23:32.000Z,Why I Moved Back from Gradle to Maven,"Yo, new Gradle developer experience lead here. I fully empathize that it&#x27;s much too difficult to wrap one&#x27;s head around Gradle, so I want to share some things you might find interesting:<p>* The Gradle Kotlin DSL, which is nearing production-readiness, substantially improves the assistance&#x2F;docs one gets through the IDE.<p>* However, the Kotlin DSL does not help with the large API surface and understanding of Gradle concepts, so I have been working on improved docs and best practices for the past few months.<p>* However, most folks don&#x27;t or won&#x27;t read docs, so additional tools will help users opt-in to strictness and quality checks that enforce best practices through the tool.<p>Even with all that, one can think of build tools like languages: one tool will never be able to suit all needs or projects. However, I intend the broaden the audience for Gradle by making it more accessible to a wider audience.<p>I&#x27;d love your help. My Twitter DMs are open @eriwen. DM me the 1 specific thing you would change about Gradle if you could.<p>[EDIT]: Fixed the formatting of the bullet points."
2018-03-30T04:22:48.000Z,React v16.3.0: New lifecycles and context API,"&gt; From the outside, having seen Fiber slated for release in 16.0.0 and, being pushed back to an unknown 16.x release, and then being pushed back to 17.0.0, it seems like you had not anticipated the extent to which the core React API had to be changed to enable the async renderer.<p>&quot;fiber&quot; was the code name for the rewrite that was released as version 16. Async rendering is a feature that we&#x27;ve been working on adding- (which the &quot;fiber&quot; rewrite was done to support). We&#x27;ve known that would take some time, mostly due to the fact that we want to gradually migrate old apps (as much as possible). :)<p>We&#x27;re also working on other cool, related efforts- like a compiler (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;trueadm&#x2F;status&#x2F;944908776896978946"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;trueadm&#x2F;status&#x2F;944908776896978946</a>) and proper built-in support for async-data, dubbed &quot;suspense&quot; (<a href=""https:&#x2F;&#x2F;reactjs.org&#x2F;blog&#x2F;2018&#x2F;03&#x2F;01&#x2F;sneak-peek-beyond-react-16.html"" rel=""nofollow"">https:&#x2F;&#x2F;reactjs.org&#x2F;blog&#x2F;2018&#x2F;03&#x2F;01&#x2F;sneak-peek-beyond-react-...</a>)."
2018-03-14T00:37:05.000Z,Reddit and the Struggle to Detoxify the Internet,"“I honestly cannot see how one can see the incident, and cannot see a problem with thousands of posters telling an African American woman that she&#x27;s an ape.”<p>Let me clarify. Obviously, thousands of people calling someone an ape is a problem. But one that is easily avoided by disabling twitter replies to your account. So it’s not a problem for anyone that it happens to.<p>So when I say “I don’t think this is a problem” I mean that it’s not a problem that can’t currently be solved and not worthy of trying to stop the thousand assholes.<p>It’s not blaming the victim to point out that if you change a setting you save them from pain. It’s not Leslie Jones fault at all that people are jerks. But maybe she didn’t know how to configure twitter. If so, wouldn’t it be a shame that if no one wanted to help her learn for fear of victim blaming?<p>I equate this as worrying if people are sitting in their living room gossiping about you and saying mean things. Somehow you have the magic ability to listen in. You do and are upset. Certainly you can try to make those people stop being jerks. Or you can stop listening. Or maybe do both.<p>The problems seem solvable if your goal is to not encounter jerks harassing you online. Since you can filter them out. If your goal is to not have jerks, then definitely not solvable. But that’s a stupid problem to solve through authority. The way you solve jerks is through love and education."
2018-03-07T11:28:51.000Z,Show HN: Retweet disabler/enabler,"Twitter&#x27;s API permission levels are really coarse grained [0]. I assume it needs write access in order to change the timeline, but some more detail from the author would be nice.<p>[0] <a href=""https:&#x2F;&#x2F;developer.twitter.com&#x2F;en&#x2F;docs&#x2F;basics&#x2F;authentication&#x2F;overview&#x2F;application-permission-model"" rel=""nofollow"">https:&#x2F;&#x2F;developer.twitter.com&#x2F;en&#x2F;docs&#x2F;basics&#x2F;authentication&#x2F;...</a>"
2018-02-28T21:42:22.000Z,Ask HN: Successful one-person online businesses?,"I built a fully automated self-service Instagram publishing system, no private API hacks or such, but instead, by completely automating lots of Android phones (OCR, pattern recognition, etc.). Mainly offered this to small businesses and friends. Took off due to Instagram’s popularity and made six figures after a while. Now contemplating to shut down, as Instagram has opened up publishing access to hand-picked partners.<p>A second business focused solely on Twitter analytics. Was about to shut that down years ago when Twitter suddenly offered free analytics, but it barely changed sign-up rates, so I kept it going.<p>On good days, I answer one or two emails, that’s it. The occasional one-week-of-hell when things go sideways
mixed in every few months, of course.<p>Now looking for the next project."
2018-02-26T21:31:01.000Z,AMP: the missing controversy,"Here&#x27;s another way for you to understand the problem.<p>Here&#x27;s my page: <a href=""https:&#x2F;&#x2F;dmitriid.com&#x2F;blog&#x2F;2016&#x2F;10&#x2F;javascript-tools&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;dmitriid.com&#x2F;blog&#x2F;2016&#x2F;10&#x2F;javascript-tools&#x2F;</a><p>It&#x27;s <i>prerendered</i> (via a static site generator). In total, it loads 692 KB (I din&#x27;t do anything to optimize it, the images are quite large etc.). It loads from a small server, and images are loaded from Twitter, meme.com etc.<p>Here&#x27;s an AMP page: <a href=""https:&#x2F;&#x2F;www.google.se&#x2F;amp&#x2F;s&#x2F;www.usmagazine.com&#x2F;celebrity-news&#x2F;pictures&#x2F;justin-timberlake-jimmy-fallons-bromance-through-the-years&#x2F;amp&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.google.se&#x2F;amp&#x2F;s&#x2F;www.usmagazine.com&#x2F;celebrity-new...</a><p>It loads a whopping 2.9 MB [1], and keeps loading as you scroll down. If you open it from Google&#x27;s search, it opens <i>instantly</i>. Because parts of it were already preloaded on the search page. <i>And</i> the page itself (including almost all images) is served by a ridiculously powerful geographically distributed CDN.<p>So, questions&#x2F;hints<p>1. How is that fair to people who actually build their pages and host them on their servers?<p>2. What is open about this web?<p>3. How will Web Packaging solve this issue if I can&#x27;t afford to build a geographically-distributed CDN on par with Google&#x27;s for my own cache?<p>---<p>[1] It actually changes on every reload. The lowest number I&#x27;ve seen is 1.6 MB, but then, in a second or two, it starts loading additional stuff, going up to at least 2.2 MB<p>So much for &quot;small APM pages&quot;. Actually, as I&#x27;m clicking around, rarely is a page below 1 MB. Even for pages that are not that different from mine: only images and text."
2018-02-20T19:06:58.000Z,Twitter and the Internet War,"I am not a coder by any means, but I am a heavy social media user and know a lot about politics, sociology, psych, organizing, health, comms---and I admit, until I read this thread, I liked this article because it gave me a better reason for all the screw ups, beyond, &quot;The Executives are dithering and have no business skills and social skills.&quot; Or the theory &quot;The Executives do nothing because they don&#x27;t care if women and vulnerable people die.&quot; Which is far more disturbing....it can&#x27;t be true, even if it <i>feels</i> true.
I would give anything if they&#x27;d listen to users who have been around awhile. So few people worked there and also used it at the same time. (And users longingly miss the Fail Whale logo...)
As a user (250,000+ tweets) under a pseudonym, twitter has incredible uses, things Facebook and other platforms didn&#x27;t do, because they were so closed and hard to search. They created echo Chambers, because you could only see people you already knew or were slightly connected too. Or worse, your mom or mother-in-law could find you. Twitter was so open--if I want to discuss philosophy or Japanese food or an MRI result, 24&#x2F;7 I just search and people who love that are there. And pseudonyms had to exist, because thousands of people in real life have the same name. (just like the rest of the Internet back then and yes, now too) They thought people would just post status updates like, hey eating lunch, but we did way way more. They made it 140 chars with 20 chars reserved for names because many people had expensive tiny data plans, but could update by text message; allowing a much wider demographic to use it, and across multiple countries, even low tech ones with limited access. 
The most critical piece tho is that users invented everything good about twitter (Sorry creators--but we did). TW allowed some html symbols, so a user put an @ in front of a user name to reply, and it worked! Users also invented hashtags, the first one was for organizing BarCamp--which was kind of a conference not about alcohol and the original manual RT, and MT for modified tweet, and commenting on top of  someone&#x27;s tweet, or at the end of it and we figured out how to shrink long urls to post links. bit.ly had no purpose til then, and many users became Developers and got full access to the API and we crowdsourced hundreds of changes and ideas, from pictures to videos to emoji to gifs to analytics, to accessible apps for people with vision, hearing, speech issues. All while making lots and lots of jokes.
They didn&#x27;t start out with a heavy respect for pseudonyms, and privacy, and free speech--but TW learned it fast after the Green Iran Revolution, and after many patient users wanted to keep privacy because they had rare diseases, and mental health issues, and parents of kids with autism and speech issues took to it and found each other and felt less alone. It was less complicated than blogging and writing long stories on laptops after events happened. I could do everything from live tweeting a doctor&#x27;s appt to an ER visit and get reactions from friends who could tell me what to ask. 
We still tweet everything from recipes to exact instructions on how to ride a bike, how to organize groups like #occupy to crowd sourcing Flu symptoms and rashes, to who is watching what TV show and how cool it is to watch live sports &quot;together&quot; even for people who can&#x27;t leave the house that night and meet.
Weekly hour long Chats take place under special hashtags like #hcsm for Health Care Social Media or #meded for medical education. (doctors and science fans and academics found twitter and they debate articles, techniques, crowdsource diagnoses)
Police and emergency responders and good Samaritans have used it to (swear to god, it&#x27;s true) befriend people who sound troubled or suicidal and validate their pain and sadness and find them help.
It is to this day, the only platform I know that allows people from many different areas to find like-minded people and to bring together people across multiple subject areas.
Nothing else does it quite the same way. Especially with the ridiculous algorithms other platforms use."
2018-01-11T00:35:52.000Z,Courts: Violating a Website’s Terms of Service Is Not a Crime,"I dunno about that.. controlling access to your server is much more important today because tech is ubiquitous, and a big target for bad actors. In the old days very few people would know enough and care enough to reverse engineer your protocol.. when a service has billions of users and valuable data, that changes.<p>If Twitter did not have an API key, they would spend 2x the money on absorbing &amp; defending against DDoSes and security vulnerabilities. That cost would get passed on to us with frequent outages and many more ads in our feeds. Or a leak of someones DMs."
2018-01-02T19:40:49.000Z,Ask HN: Freelancer? Seeking freelancer? (January 2018),"SEEKING WORK - Philadelphia, but primarily remote<p>Fullstack Ruby on Rails developer. Attentive to UI&#x2F;UX as well as back end simplicity and maintainability. I&#x27;ve contributed to a number of OSS projects and have created some of my own (such as cloudspeq, for distributed test suit execution)<p>Skillsets: Ruby, Ruby on Rails, Rspec, Capybara, Testing, Mobile Optimization, Delightful Design, Semantic Markup, Design, HTML5, CSS3, SCSS, javascript, highcharts, Jquery, handlebars, GA, Documentation, bootstrap, Dad Jokes, AWS, Stripe, Heroku, Git, QA, Elastic Search, Digital Ocean, Cordova, Linux, Nagios, Automation, Copywriting<p>Recent work Projects:<p><pre><code>    * Due diligence Investigation &amp; reporting for acquisition by large national sports league of startup
    * Major refactor of app &amp; test suite when changing has_one to has_many for users &amp; clubs of boating reservation system
    * Coupon generation, restriction and generation for an uber-like startup for home services
    * pixel-perfect redesign of B2B ecommerce store
    * Documentation of system architecture, troubleshooting steps, and aggregation of important information; development of EOP&#x27;s &amp; SOP&#x27;s to ensure resiliency of operation
    * Created robust B2B API using JWT and slate docs with custom nested nav
</code></pre>
Recent personal projects:<p><pre><code>    * FULA: Automated Cryptocurrency trading and robust backtesting platform, utilizing various Technical Analysis techniques &amp; calculations. 
    * WillYou DidYou(http:&#x2F;&#x2F;willyoudidyou.com): Two brothers offering cognitive and behavioral change propellant
    * MyCryptoHQ(http:&#x2F;&#x2F;www.mycryptohq.com): a place to manage everything about your crypto portfolio. Integrations with youtube, reddit, coinmarketcap and cryptowat.ch
</code></pre>
Lets talk about your project and what your needs are.<p>Rate: ~$95&#x2F;hr<p><pre><code>   Contact me: r.railsdev@ruru.name
   LinkedIn: https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;russjennings7&#x2F;
   Github: http:&#x2F;&#x2F;github.com&#x2F;meesterdude
   twitter: http:&#x2F;&#x2F;twitter.com&#x2F;meesterfox</code></pre>"
2017-12-22T16:48:59.000Z,"Show HN: Open Paperless – Scan, index, and archive paper documents","For those wondering about the relationship between Mayan EDMS, Paperless and Open Paperless here is a story line summary of the saga.<p>Roberto Rosario (the creator of Mayan) is a very well known name in the Django, Python, document management, maker, hacking, open health and open source in the goverment circles.<p>- <a href=""https:&#x2F;&#x2F;speakerdeck.com&#x2F;siloraptor"" rel=""nofollow"">https:&#x2F;&#x2F;speakerdeck.com&#x2F;siloraptor</a>
- <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Roberto_Rosario"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Roberto_Rosario</a>
- <a href=""https:&#x2F;&#x2F;www.pycon.it&#x2F;conference&#x2F;p&#x2F;roberto-rosario"" rel=""nofollow"">https:&#x2F;&#x2F;www.pycon.it&#x2F;conference&#x2F;p&#x2F;roberto-rosario</a>
- <a href=""http:&#x2F;&#x2F;pyvideo.org&#x2F;djangocon-us-2014&#x2F;liberation-and-modernization-of-government-legacy.html"" rel=""nofollow"">http:&#x2F;&#x2F;pyvideo.org&#x2F;djangocon-us-2014&#x2F;liberation-and-moderniz...</a>
- <a href=""https:&#x2F;&#x2F;cpucadviceletters.org&#x2F;login&#x2F;?next=&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;cpucadviceletters.org&#x2F;login&#x2F;?next=&#x2F;</a>
- <a href=""https:&#x2F;&#x2F;twit.tv&#x2F;shows&#x2F;floss-weekly&#x2F;episodes&#x2F;253"" rel=""nofollow"">https:&#x2F;&#x2F;twit.tv&#x2F;shows&#x2F;floss-weekly&#x2F;episodes&#x2F;253</a>
- <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mayan_(software)"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mayan_(software)</a>
- <a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rubzEAojf-k"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rubzEAojf-k</a><p>Mayan EDMS was initially released in February 3, 2011 (Wikipedia and git log). 
In June 2015, Roberto gave a workshop in DjangoCon named From zero to paperless with Mayan EDMS (<a href=""https:&#x2F;&#x2F;archive.is&#x2F;FDpYS"" rel=""nofollow"">https:&#x2F;&#x2F;archive.is&#x2F;FDpYS</a>). Daniel Quinn (the creator of Paperless) also attended and presented at the same DjangoCon event (<a href=""https:&#x2F;&#x2F;vimeo.com&#x2F;135907408"" rel=""nofollow"">https:&#x2F;&#x2F;vimeo.com&#x2F;135907408</a>) and 6 months later after working on it for several months (Daniel&#x27;s own words), he released Paperless on December 20, 2015 (<a href=""https:&#x2F;&#x2F;github.com&#x2F;danielquinn&#x2F;paperless&#x2F;commits&#x2F;master?after=af4623e60563f5e4328e87ec8027f79804f8d08a+559"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;danielquinn&#x2F;paperless&#x2F;commits&#x2F;master?afte...</a>). By January 24, 2016, Paperless had &quot;exploded in popularity&quot; (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;691242822431830016"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;691242822431830016</a>).<p>Both projects used Python, Django, same Django 3rd party apps like DjangoSuit, same document consumer model, same OCR engine, REST API, among other things. On the surface it appeared that Paperless was a copy of Mayan EDMS concepts and implementations without giving credit or mention. Many additions were planned for Paperless that were features and implementations already in Mayan (<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;selfhosted&#x2F;comments&#x2F;44mh88&#x2F;scan_index_and_archive_all_of_your_paper_documents&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;selfhosted&#x2F;comments&#x2F;44mh88&#x2F;scan_ind...</a>).<p>A separate point of contention was that the name &quot;Paperless&quot; had been in use by other projects much earlier that Daniel&#x27;s Paperless (<a href=""https:&#x2F;&#x2F;github.com&#x2F;search?utf8=%E2%9C%93&amp;q=paperless&amp;type="" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;search?utf8=%E2%9C%93&amp;q=paperless&amp;type=</a>). Since there is no trademark on the name or description, other projects appeared with the same name and description (<a href=""https:&#x2F;&#x2F;github.com&#x2F;lrnt&#x2F;paperless"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lrnt&#x2F;paperless</a>).<p>On March 15, 2016, Daniel presented Paperless at CodeNode (<a href=""https:&#x2F;&#x2F;skillsmatter.com&#x2F;skillscasts&#x2F;7843-intro-to-paperless"" rel=""nofollow"">https:&#x2F;&#x2F;skillsmatter.com&#x2F;skillscasts&#x2F;7843-intro-to-paperless</a>).<p>It was Daniel&#x27;s February 27, 2016 tweet suggesting to be paid to work on Paperless that sparked the animosity between the users of the two projects (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;703629488932970500"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;703629488932970500</a>).<p>Many heated debates ensued. Even then, the main critique of Paperless remained technical, but lack of maturity and implemenation was described by one Reddit users as: &quot;I&#x27;ve looked into paperless and it currently lacks a lot of...nearly well everything. Maybe in a year or two&quot; (<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;linux&#x2F;comments&#x2F;6m9evn&#x2F;want_to_go_paperless_looking_for_dms&#x2F;dk1cjz0&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;linux&#x2F;comments&#x2F;6m9evn&#x2F;want_to_go_pa...</a>)<p>On April 9, 2016, Daniel added a reference to Mayan to the documentation of Paperless (<a href=""https:&#x2F;&#x2F;github.com&#x2F;danielquinn&#x2F;paperless&#x2F;commit&#x2F;674d54ec38783b02350c1371bdf0f412dd765ef0#diff-88b99bb28683bd5b7e3a204826ead112"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;danielquinn&#x2F;paperless&#x2F;commit&#x2F;674d54ec3878...</a>).<p>On April 17, 2016, Daniel posted on his old twitter account: &quot;It looks like my idea for Paperless wasn&#x27;t all that unique. This other project uses a lot of the same tools: <a href=""http:&#x2F;&#x2F;www.mayan-edms.com&quot;"" rel=""nofollow"">http:&#x2F;&#x2F;www.mayan-edms.com&quot;</a> (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;721726208606646272"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;721726208606646272</a>).<p>On April 14, 2017, Daniel Quinn posted in his blog a summary of his experiences at DjangoCon Europe 2017 where he mentions meeting Roberto in person. He describes Roberto as a &quot;rival geek&quot; in what appears to be jest and uses positive adjectives to describe Roberto in the rest of the post. (<a href=""https:&#x2F;&#x2F;danielquinn.org&#x2F;blog&#x2F;djangocon-2017&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;danielquinn.org&#x2F;blog&#x2F;djangocon-2017&#x2F;</a>)<p>On April 16, 2017 Daniel posted a tweet mentioning the popularity Paperless (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;853701257051205632"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;danielagquinn&#x2F;status&#x2F;853701257051205632</a>).<p>The last release of Paperless is made on Sep 9, 2017.<p>On Oct 18, 2017 Daniel posted: &quot;I changed my Twitter name! This isn&#x27;t me any more, so if you&#x27;re looking for me, you should keep head over to @danielagquinn.&quot;  (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;searchingfortao&#x2F;status&#x2F;920778623715610624"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;searchingfortao&#x2F;status&#x2F;92077862371561062...</a>). Only 7 commits have been made to Paperless since with the last commit happening on Novermber 5, 2017.<p>On December 18, 2017 a user named &quot;zhoubear&quot; anounced on Reddit&#x27;s selfhoted &quot;Open Paperless: Scan, index, and archive all of your paper documents&quot; (<a href=""https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;selfhosted&#x2F;comments&#x2F;7kjocg&#x2F;scan_index_and_archive_all_of_your_paper_documents&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;selfhosted&#x2F;comments&#x2F;7kjocg&#x2F;scan_ind...</a>). It turned out that Open Paperless was a forked Mayan EDMS with cosmetic changes but with copyrights changed and no attribution to Mayan EDMS. After a much heated debate, copyrights and attributions were restored and the project&#x27;s description has been updated to show that it is a new front end for Mayan among other usability changes meant for home users.<p>In 4 days, Open Paperless has surpassed Mayan EDMS in popularity on Github.<p>No posts or comments from Roberto can be found in reference of Paperless or Open Paperless.<p><a href=""https:&#x2F;&#x2F;twitter.com&#x2F;search?q=paperless%20from%3Asearchingfortao&amp;src=typd"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;search?q=paperless%20from%3Asearchingfor...</a>"
2017-11-11T04:53:53.000Z,The Case for RSS,"Maybe 7 years ago I built a service that would track links from your Twitter feed, mainly because I was posting links I found interesting and wanted a way to refer back to them later.<p>I intended to have it track all links from people you follow too, to give a curated list of links, but Twitter was aggressively making changes to restrict their API so this became impossible."
2017-10-28T21:12:19.000Z,I Watched All of the Chrome Dev Summit 2017 Videos,"&gt; create a property<p>This is a criticism of Objects, not Web Components, and most framework&#x2F;component libraries out there assists in creating properties that can be observed, from Ember to Angular to Polymer. That Web Components don&#x27;t solve a problem that applies to the whole of JavaScript, but Web Components libraries do, does not seem like a very serious criticism to me.<p>&gt; and an attribute<p>Adding an attribute name to `observedAttributes` and listening for the change in `attributeChanged` callback is not very onerous, and similar to frameworks that have attributes callbacks. How else do you propose listening to an attribute? Regardless, and again, libraries help do this small bit for you, and combine it with a property for a single, declarative property&#x2F;attribute definition.<p>&gt; and a custom event<p>&quot;Defining&quot; a custom event is as simple as firing it, and since they&#x27;re standard DOM events, if you find the CustomEvent&#x2F;dispatchEvent API too difficult to use, you could write or use a small helper. I&#x27;m not totally sure what it would do, since those APIs are so simple. And yet again, libraries like Polymer include firing events when properties change as a declarative option, to make it even simpler.<p>I know you have a major axe to grind with Web Components on Twitter. I&#x27;m not sure what set you off about them, and I know I won&#x27;t change your mind. I only responded for other readers here."
2017-10-24T14:21:21.000Z,"Show HN: Hypewatching – crowdsourced, geolocated trends around the world","&gt;Maybe Twitter API<p>Perhaps it has changed since I used it last, but Twitter&#x27;s API will give you a very limited amount of data unless you&#x27;re prepared to fork over the big bucks."
2017-10-08T18:57:24.000Z,Redux Connector – Connect to redux state from within your JSX,"A lot of people seem to be re-discovering and re-inventing this approach, due to the recent discussions in the React community about the use of &quot;render props&quot; as an alternative to Higher-Order Components.  It&#x27;s interesting to note that this is actually how React-Redux worked originally [0], but it was changed to be a HOC later.<p>There&#x27;s other recent examples at [1] and [2].  Dan Abramov&#x27;s tweet at [3] describes why React-Redux changed from a render prop to a HOC in the first place, and there&#x27;s another good Twitter discussion thread at [4] (where Michael Jackson points out that this is suddenly a really popular thing to try).<p>Glancing at the source code for this implementation, I&#x27;m actually rather concerned about its performance.  It looks like it calls `connect()` _inside_ of a functional component.  That means that every time React re-renders the parent functional component, `connect()` will generate a new HOC component, React will see that it&#x27;s a different component type being rendered (because the new HOC is not the same as the old HOC), and the entire child component tree will be thrown away by the reconciliation process.  This does not seem like a very performant approach.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;reactjs&#x2F;react-redux&#x2F;tree&#x2F;11adf721fbb3f5548c6e5f6b4999835d41807850#deprecated-api"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;reactjs&#x2F;react-redux&#x2F;tree&#x2F;11adf721fbb3f554...</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;jsonnull&#x2F;redux-render"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;jsonnull&#x2F;redux-render</a><p>[2] <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@gott&#x2F;connecting-react-component-to-redux-store-with-render-callback-53fd044bb42b"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@gott&#x2F;connecting-react-component-to-redux...</a><p>[3] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;dan_abramov&#x2F;status&#x2F;913712295594926080"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;dan_abramov&#x2F;status&#x2F;913712295594926080</a><p>[4] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;mjackson&#x2F;status&#x2F;915335846324092930"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;mjackson&#x2F;status&#x2F;915335846324092930</a>"
2017-10-02T18:41:53.000Z,Ask HN: Freelancer? Seeking freelancer? (October 2017),"SEEKING WORK | Location: San Francisco | Remote: OK | Work Type: 1099 Contractor &#x2F; W2 Contractor or Full-time (in that order).<p>Hi,<p>I&#x27;m Shiva, a Senior C# .Net Engineer &amp; Solutions Architect with over 20 years experience, primarily on the Microsoft Stack and Open Stack. I also have over 15 years experience FinTech (see below)<p>I&#x27;m a fast learner, easy-going, pay attention to details, and have excellent written and verbal communications. I change words and phrases in my communication and presentations keeping the target audience in mind ( i.e. highly technical vs business &#x2F; end users )<p>Tech Stack: C#, .NET, ASP.NET, MVC, Web API, Bloomberg API, SQL Server, SSRS, SSIS, Entity Framework, Dapper, Sqlite, JQuery, VB.NET, Visual Basic, VBA, Twitter Bootstrap, SiteCore, JSON, REST API<p>Verticals: Banking and Financial Services, Capital Markets including Hedge Funds, Prime Brokerages, and Asset Management Firms.<p>Info:<p>* Resume: <a href=""https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;0B3VXJj8hyKTAbUJyUTQtMmR5d0U&#x2F;view?usp=sharing"" rel=""nofollow"">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;0B3VXJj8hyKTAbUJyUTQtMmR5d0U...</a><p>* StackOverflow: <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;325521&#x2F;shiva?tab=profile"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;users&#x2F;325521&#x2F;shiva?tab=profile</a><p>* Github: <a href=""https:&#x2F;&#x2F;github.com&#x2F;theShiva"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;theShiva</a><p>* Open Source Contribution: <a href=""https:&#x2F;&#x2F;github.com&#x2F;InstaSharp&#x2F;InstaSharp"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;InstaSharp&#x2F;InstaSharp</a>  – An Instagram API Client ( C# )<p>* LinkedIn: <a href=""https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;theshiva&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;theshiva&#x2F;</a><p>* Contact: alohashiva [at] gmail [.] com"
2017-10-02T12:12:09.000Z,Does Even Mark Zuckerberg Know What Facebook Is?,"For the record: What Facebook is and wants to be is actually an <i>enforceable personal relations layer</i> on top of the web stack.<p>Uber agrees to send in my name a “Pay me £7.23 for that shared ride” to my Facebook friends, but not to people for whom I can’t prove I know well enough. Tinder shows shared relations with strangers. That is a powerful web of features unlocked thanks to this. That’s why building an API was such a key early change of what Facebook was.<p>Typically, Twitter does something similar to Facebook on the surface (a news feed) but is not planning on serving as an authentication layer, so they do a lot less to address grievers, inauthentic accounts and lately, unwanted political influence.<p>The News Feed was the first key feature, built internally and it boosted the business model that Facebook has started leveraging: targeted advertising. But neither the News Feed, not advertising is the core of Facebook — no more than ads are at the core of Google.<p>Google wants to leverage artificial intelligence to organise the world’s information. That your friends matter to you and that you trust them more, and that you want computers to tell who they are is what’s at the core of Facebook; the recent pivot to communities is clearly in that line: you also trust and are willing to help people that you might not have met before because you belong to certain groups, communities.<p>Ads are a simple and effective way to finance both projects. Because management had to place ad-focused people high up, they took over a bit of the attention, but leaders at both companies know to focus on the end-goal.<p>I can easily imagine Facebook making more money from transaction fee, or distributing 3D-content; I can imagine Google making more money similarly (typically, CPA is kind of that). Both have tried, and the results were underwhelming, and will most likely try again."
2017-09-15T15:01:37.000Z,A lingering farewell to the username,If they do (I haven&#x27;t verified if you&#x27;re right) then that&#x27;s an implementation issue. Twitters API returns rich information about every mention that shows they very well could store an association to the internal user id if they want to.<p>But it may very well be for good reason. E.g. lets say an account is taken over by someone who changes the account into something suitably offensive after obtaining a lot of mentions. It would seem that treating a change as basically &quot;this is a new account now&quot; is the safest alternative in some respects.
2017-08-22T15:43:40.000Z,Firefox planning to anonymously collect browsing data,"I tried to be unbiased in the submission title and it&#x27;s probably late enough that this will be buried, but here are some my thoughts:<p>&gt; They don&#x27;t plan on collecting URLs, just (eTLD+1).<p>This is true as of right now, but can change at any time in the future. From the post:<p>&gt; What we plan to do now is run an opt-out SHIELD study [6] to validate our
implementation of RAPPOR. This study will collect the value for users’ home
page (eTLD+1) for a randomly selected group of our release population<p>This test consists of collecting domains, indeed, but that doesn&#x27;t say anything about what will happen in the future.<p>&gt;  Note: &quot;planning&quot; means &quot;reaching out for feedback about&quot;.<p>Planning means planning. Today they&#x27;re reaching for feedback, and the plans might change or not.<p>&gt; Hello, Redditors...<p>This is my fault, I suppose, for posting the link here :). Many of the angry comments are uninformed, but the users, educated or not, are stakeholders here and Mozilla should be prepared for the fallout. There have been situations in the past (Pocket, Google Analytics) where well-formulated feedback from users was raedily dismissed.<p>&gt; One recurring ask from the Firefox product teams is the ability to collect more sensitive data, like top sites users visit and how features perform on specific sites. Currently we can collect this data when the user opts in [...].<p>Does anyone know what this is about? Telemetry? Because I <i>will</i> disable it if so.<p>&gt; Allow Firefox to install and run studies<p>This is from the Nightly settings page but is pointing to <a href=""https:&#x2F;&#x2F;support.mozilla.org&#x2F;en-US&#x2F;kb&#x2F;shield"" rel=""nofollow"">https:&#x2F;&#x2F;support.mozilla.org&#x2F;en-US&#x2F;kb&#x2F;shield</a>, which doesn&#x27;t exist (yet?). For anyone interested, there&#x27;s a wiki page about them <a href=""https:&#x2F;&#x2F;wiki.mozilla.org&#x2F;Firefox&#x2F;Shield&#x2F;Shield_Studies"" rel=""nofollow"">https:&#x2F;&#x2F;wiki.mozilla.org&#x2F;Firefox&#x2F;Shield&#x2F;Shield_Studies</a>.<p>&gt; What we plan to do now is run an opt-out SHIELD study [6] to validate our implementation of RAPPOR.<p>This still sounds bad enough to forever poison &quot;SHIELD&quot; for me. It&#x27;s also terribly named because it doesn&#x27;t &quot;protect&quot; anyone.<p>&gt; No telemetry, no data collection.<p>Without telemetry it would be almost impossible for the developers to figure out what works or not, and what&#x27;s fast or not in Firefox. There&#x27;s a whole spectrum here from &quot;no telemetry&quot; to &quot;creepy&quot;. Please don&#x27;t ignore this.<p>&gt; Now they are killing Privacy.<p>Please try to get informed. A Mozilla employee in this thread (alexrs95) posted a series of tweets about what&#x27;s being proposed: <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;Alexrs95&#x2F;status&#x2F;896366072240144385"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;Alexrs95&#x2F;status&#x2F;896366072240144385</a>. It&#x27;s short enough, so please read at least that before complaining.<p>&gt; What&#x27;s your favorite open-source browser?<p>Firefox :).<p>&gt;  I&#x27;ve removed all URLs from about:config and replaced them with localhost (search for &quot;http&quot;). This should help with privacy-related issues as long as no API endpoint is hardcoded.<p>Beware of SHIELD, as Mozilla may still have the ability to push extensions to the browser.<p>&gt; He said there are math theorem to prove that it&#x27;s sufficiently anonymize.<p>I&#x27;ve not dug deep enough into the RAPPOR paper, but they do consider in passing the possibility of an attacker that has access to <i>all</i> of the collected data (think <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;National_security_letter"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;National_security_letter</a>).<p>&gt; Everyone else<p>Please be kind.<p>EDIT: Looks like this post might have been pushed back from the front page by a moderator. I&#x27;m not sure I&#x27;m fine with that."
2017-08-16T14:05:20.000Z,I Befriended My Instagram Hacker,"The hackers could be creating an API auth token after getting the first password.  So you change the password, but the auth token is still valid.  They can&#x27;t use the normal Twitter interface, but they can do whatever the API lets them do...send tweets, etc."
2017-08-14T06:26:53.000Z,Founder Friendly,"The &quot;ecosystem&quot; was on the path to destroying the company. The 3rd party Twitter clients had huge chunks of the Twitter userbase - back in 2010-2011, 20% of Twitter users used EchoFon, 11% used TweetDeck, etc.<p>If they had let the system continue, one of the clients could have gotten enough market share that they could have simply changed the backend to their own app, and none of the users would have batted an eye. Or Facebook could have bought up 2-3 of them quietly then forced Twitter to sell on the cheap.<p>It&#x27;s easy to romanticize the wild-west period of Twitter&#x27;s API being completely open for all use cases. However, it was, from a strategic perspective, extremely dangerous to the company&#x27;s future - there&#x27;s a reason why companies now know to build walled gardens."
2017-07-30T14:48:37.000Z,Benchmarks of PHP 7.2 Beta: PHP Is Still Getting Faster,"I&#x27;ve been using PHP for many years now and I was very close to switch to NodeJS or Go a couple years ago until I discovered Laravel. That changed my view of PHP completely and it improved my code quality and potential by a 10x factor at least.
I think that what Taylor Otwell has done in the last years with Laravel and with its ecosystem has been really underestimated. Not just for Laravel that is an excellent framework in my opinion, but especially with all the other products and libraries that he built along the way.
It covers all the needs I had in building my last few SaaS products and it made my life soooo much easier.<p>A few examples:<p>Forge and Envoyer: setup and manage your VPS in a breeze and deploy your code with zero downtime.<p>Spark: create a SaaS product in literally a matter of minutes without having to care about all the boilerplates<p>Echo: real time notification across multiple channels (mail, Pusher, Slack, etc.)<p>Passport: OAuth2 API server as easy as it can be<p>Scout: Redis&#x2F;Algolia search with just a couple of lines of code<p>Dusk: test your app easily both for unit and browser testing<p>Cashier: payments with Stripe and Braintree in a breeze (both for one time payment and recurring ones)<p>Socialite: OAuth for all kind of services (Facebook, Twitter, Google, ...)<p>And beside all this, there is the excellent Laracasts by Jeffrey Way that made me learn not just Laravel but PHP and JS in general in a really great way.<p>And I could go on talking with the great and simple queueing system, the perfect integration with VueJS that I love as well, ...<p>As you can see I&#x27;m a big big fan of Laravel in general and I hope that it will become popular in HN especially over time."
2017-07-24T12:52:45.000Z,"Android Killed Windows Phone, Not Apple","I used to have Windows Phone up until 2012, and can tell you that the Hubs things did not really work as intended, as changes to the Twitter&#x2F;FB&#x2F;whathaveyou API usually broke functionality.<p>I especially remember FB messages taking hours to arrive sometimes...at its fastest there would be a delay of several minutes. So much for &quot;instant messaging&quot;. At least back then you could still access messages in the browser.<p>Blackberry also implemented the Hubs feature in its BB10 and Android devices, but again functionality is pretty limited, by design. IM is a big business, and the companies behind it aren&#x27;t interested in your using them outside of their own app, as you&#x27;d be deprived of using &quot;innovations&quot; like Stories, GIF addons and emoji packs."
2017-07-18T00:26:44.000Z,Women engineers get real about the worst sexism they’ve experienced at work,"We have to be careful to identify genuine sexist behavior, and call it out, but also acknowledge that not every bad experience for a woman is based on sexism. Not every bad experience for a gay man is because of homophobia.<p>I have worked as a programmer for 25 years and I can assure every woman out there that men often treat other men very badly. I have seen programmers go ape shit because someone changed their code. Deliberately criticize another&#x27;s work in front of a group in order to undermine them. Men play politics and undercut other men to boost their own reputation and career chances.<p>Some of the twitter comments identify sexist situations but some look to me like a man being a douche for reasons that might have nothing to do with sexism. We do not want to develop a culture where any comment to a woman&#x2F;gay is always interpreted as sexism&#x2F;homophobia. Let&#x27;s not allow the pendulum to swing from one extreme to the other."
2017-07-17T02:53:07.000Z,Ask HN: What tasks do you automate?,"I am not a programmer, but I&#x27;ve automated a few things in my life.<p>I self publish graphic novels. I have a script that runs on a directory full of page files and outputs a CSV in the format InDesign expects. I wrote it after manually editing a CSV and leaving a page out, and not noticing that until I had an advance copy in my hands and 400 more waiting to be shipped from the printer. That was an expensive learning experience.<p>I like to rotate my monitor portrait mode sometimes, but hate trying to rotate the Wacom tablet&#x27;s settings as well. So I have a script that does this all in one go. It used to try to keep track of separate desktop backgrounds for landscape and portrait mode, but this stopped working right, so I took that part out.<p>I have a bunch of LIFX bulbs in my apartment. The one near the foyer changes color based on the rain forecast and the current temperature, to give me an idea of how to dress when going out, thanks to a little Python script I keep running on my computer. Someday I&#x27;ll move it to the Raspberry Pi sitting in a drawer.<p>I recently built a Twitter bot that tweets a random card from the Tarot deck I drew. I&#x27;ve been trying to extend it to talk to Mastodon as well but have been getting &quot;request too large&quot; errors from the API when trying to send the images. Someday I&#x27;ll spin up a private Mastodon instance and figure out what&#x27;s going on. Maybe. Until then it sits on a free Heroku account, tweeting a card and an image of its text about once a day.<p>And does building a custom Wordpress theme that lets me post individual pages of my comics, and show them a whole chapter at a time, count as &quot;automation&quot;? It sure has saved me a lot of hassle."
2017-06-15T22:08:37.000Z,"Why we should teach kids actual programming, not Scratch, etc.","I agree with what you say.<p>I went to a British Secondary School, and am just about to leave Sixth Form - I took computer science at both levels.<p>The trouble is - again, at both levels - there are few teachers who understand the topic. Scratch and the like are easy to learn for more or less anyone, and teachers can teach it easily. I know that in some cases CS teachers are IT teachers who took on the extra subject.<p>With like Python, unless the teacher has actually written a decent amount of it then they&#x27;re going to struggle to teach it well. If they&#x27;ve never properly programmed, they will also struggle to point out that &quot;Twitter has an API that you may want to use to analyse tweet contents&quot;, for instance.<p>I&#x27;d just like to reiterate that I <i>am not</i> disagreeing with you, I would very much love a curriculum change. I just think that the lack of qualified teachers needs to be addressed as well."
2017-06-10T18:03:55.000Z,"Netflix: Container Scheduling, Execution and Integration with AWS (2016) [video]","Note: I&#x27;m the one in the video, an original engineer on Titus, and now the product&#x2F;hiring manager of the Titus team at Netflix. Also, I do not actively monitor hacker news, so it is unlikely that I&#x27;ll follow-on to this conversation (@aspyker on Twitter is an easier way to reach me).<p>Is Titus Open Source Yet? No.<p>Why?<p>Reason #1: When we created Titus, we married the back end of a container execution engine (Titan) with the front end of a scheduling system for stream processing (Mantis). We have a goal at the time to stabilize existing usage at Netflix. We didn&#x27;t have a goal of removing all code from both sides that wasn&#x27;t needed after the marriage. We wanted to clean this up before releasing in open source as we would have to spend more time telling people what to ignore in the codebase that is no longer used in Titus. We also didn&#x27;t have time to create proper interfaces that separate Titus from other important operational systems at Netflix. We have recently been re-implementing the engine to have clean interfaces with minimal code.<p>Reason #2: When Titus was created it had a user API that grew during initial usage in batch applications. Given the number of clients using this API, it was hard to change it without impacting users. Compounding this, we added service application support without thinking much about making the API well designed. We have recently been working on a new API that was designed to handle both use cases. This API is currently being adjusted based on internal feedback.<p>Reason #3: The space of container management platforms is truly a crowded space. There are many other great options out there. When we eventually open source Titus, we hope it is clear why Titus is unique in this space specifically for &quot;all-in&quot; Amazon EC2 customers, for NetflixOSS cloud platform adopters (those who use Spinnaker, Eureka, etc.), and supporting the level of complexity we do (VPC IP per container, GPU&#x27;s, complex fleet and capacity management, etc.). Finally, showing how at scale production battle hardened Titus is. We realize even with these differences, we&#x27;ll spend a consider amount of time justifying these points to those who look at the space more generally. We would prefer to not spend any time &quot;marketing&quot; our differences.<p>Reason #4: Our main focus at Netflix is to service Netflix developers providing the easiest to use and most reliable service. Open source is something that is valuable to us with regards to potential external contributions as well hiring and retention of the best engineering talent in the world. This value, while significant, isn&#x27;t as important as providing our internal Netflix value. As a part time responsibility I help open source at Netflix. Therefore, I am also aware that doing open source well (like NetflixOSS Spinnaker as a shining example) requires more investment for teams than posting the code to github. Our team is small today and we do not believe we can make Titus open source as great as we&#x27;d want it to be. That said, we&#x27;re growing (did I mention I&#x27;m the hiring manager - <a href=""https:&#x2F;&#x2F;jobs.netflix.com&#x2F;jobs&#x2F;862432"" rel=""nofollow"">https:&#x2F;&#x2F;jobs.netflix.com&#x2F;jobs&#x2F;862432</a>) every day and can see the value of changing this equation.<p>I am truly honored that someone would great a whole website to ask for Titus. <a href=""https:&#x2F;&#x2F;www.istitusopensourceyet.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.istitusopensourceyet.com&#x2F;</a> made me laugh last night and decide to write this response today. We appreciate your excitement for our container management technology and Netflix open source. As we continue to evaluate this space, we&#x27;d love to find other AWS users who are also using the Netflix cloud platform and Spinnaker to consider partnership."
2017-06-09T02:21:54.000Z,"Ask HN: What are we doing about Facebook, Google, and the closed internet?","I have been attempting this for sometime with:<p><a href=""http:&#x2F;&#x2F;hyperlinkserver.com&#x2F;webdesigning&#x2F;tomorrow&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;hyperlinkserver.com&#x2F;webdesigning&#x2F;tomorrow&#x2F;</a><p>I have had multiple developers quit and don&#x27;t have the $80k budget quoted by Gigster.<p>Concept:  in the same way you might register a username&#x2F;handle on ig&#x2F;twitter a user registers a new domain (or &quot;connects&quot; a domain the user already owns).<p>Using Enom API we also offer &quot;branded&quot; email and private registration, and in the background the name records are automatically pointed to their &quot;tomorrowbook page&quot;.  By logging into tomorrowbook the user can use the &quot;text tool&quot; to add posts to their website, basic website analytics, and ability to customize their follow&#x2F;like buttons...also access the tomorrowbook email client for their branded email, not unlike a social messaging tool only open bc it works on email protocol.<p>Obviously the explanation above changes just a little for users who own domains with 3rd party registrars and&#x2F;or using 3rd party hosting.<p>How can HN help?  If there are any developers who can get the Enom API out of sandbox and fully functional where my other developers have quit."
2017-06-05T10:52:12.000Z,Ask HN: Why Use Social Media Logins?,"As a &quot;user&quot;, I love logging in with social media. How awesome is it that I can just click a button and be logged in instantly? No worrying about setting up a password, at least, for most websites. I used to not trust it, but after becoming a developer and learning: it is just grabbing an email or a name is not too bad. Though sometimes, it may grab more than that, such as your friends list, etc. Somehow, that became okay and no one cares.<p>As a &quot;developer&quot;, things are quite different. There are a few libraries of code on Github and you can find examples across the Internet. For the most part, these examples do work after you have set up some API backend on the social media platforms themselves.<p>Code would almost seem straightforward. However, it is not always the case, especially, when a social media platform is ever-changing.  For example, last week, someone released a new product on Hacker News and went about his way, only to realize, that people were attempting to login to Facebook, which recently upgraded from SDK 4 to SDK 5. Massive changes occurred. How embarrassing to go live, only for one of your social media buttons not to work? It&#x27;s not his fault, but it&#x27;s Facebook who updated their code so older versions no longer work. Most developers are trying to focus on their own code and make sure it works. Now they have to worry about potential users being unable to access the front door?<p>When I went to update Facebook SDK 4 to SDK 5 on one of my own platforms, using Facebook&#x27;s very example that they provided. I couldn&#x27;t get it to work. I ended up removing Facebook from my registration and login screen. The three that remained were Google, Twitter, and LinkedIn.<p>After some careful testing with these three, they work for the most part, except occasionally, if someone logs into Google, and then tries to login again real fast, such as your code not remembering them and keeping them logged in, Google&#x27;s token expires and it won&#x27;t auto-generate a new one, and it creates a problem, an error that you can&#x27;t even catch, so your users are exposed to seeing that error.<p>Twitter, too, seems to have some issues. Using the examples you can easily find on the Internet, and I&#x27;m no genius when it comes to this stuff, but I managed to copy some code, put it together, and make it work with my database, this would also come with problems: It keeps looping and acquiring a new oauth token without ever going back to my website with the information.  After spending nearly an hour trying to figure out what the problem was and scouring the Internet with very few answers, I gave up. So Twitter has now been removed.<p>LinkedIn is my last resort, but to offer only one option: is it better at all?<p>The purpose of social media logins was to making logging in easier, but none of these social media platforms have beginner or even novice developers in mind. If any of the code was to change while your web application is live, than you are screwed, trying to come up with a patch for it. Lest, you might not even find out until someone actually reports it that your Facebook, Twitter, LinkedIn, or Google login isn&#x27;t working. How would you know otherwise, since you probably might only use one or none?<p>I sought to find out: Do we really need to use social media logins? In this day and age, it is supposedly expected. For the most part, researching claims, there is a 60% usage of social media login buttons. But are they necessary? I came across another article from a developer at MailChimp which makes a great point about social logins: while people use them, if people like your application or find it useful, they are going to register and login with a username or email address, regardless of whether you have social media or not.<p>Here is the article: <a href=""https:&#x2F;&#x2F;blog.mailchimp.com&#x2F;social-login-buttons-arent-worth-it&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.mailchimp.com&#x2F;social-login-buttons-arent-worth-...</a><p>Navigating to MailChimp&#x27;s registration and login page: there is no social media presence.<p>So I know there are some attempts at making life easier for developers out there, such as Hybridauth Social Login PHP Library ( <a href=""https:&#x2F;&#x2F;hybridauth.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;hybridauth.github.io&#x2F;</a> ), which may do a good job, but I&#x27;ve not used it yet.  There are also other non-free solutions out there in which you pay for a script or a web company to handle it all for you. This too, might be good, but why? Why isn&#x27;t it easier for developers to set up social media buttons?<p>Maybe it is security concerns or whatever, but you would think that as large as these social media platforms are, they&#x27;d be better at giving you the email and username or whatever you need.. and making it easier. After all, it is technically free branding for them that you put on your website.<p>Anyone else struggle with social media login or just give up completely or maybe you found a really easy solution that grants you peace of mind?"
2017-05-27T09:03:52.000Z,Security of BIOS/UEFI System Firmware from Attacker and Defender Perspectives,"Seeing slides in BIOS-UEFI-Security.6-Mitigations.pdf that imply that there&#x27;s critical crypto being done in SMM mode makes me feel unfathomable hopelessness. The whole x86_64 platform security model (which includes all the privilege levels and the corresponding access control mechanisms) is one hell of an overgrown clusterfuck that could not be <i>more</i> hostile to formal verification.<p>There&#x27;s lots of wantonly convoluted stuff going on -- a random example is the access control mechanism for the PCH&#x27;s GPIOs (search &quot;GPIO registers lockdown&quot;, in quotes). This isn&#x27;t, of course, implemented with a register which contains bitfields determining which privilege level can write to which sets of registers. That would be too simple. The GPIO Lockdown-Enable bit <i>can</i> [sic] be changed by the same software that the lockdown mechanism is meant to deny access to! This seems like utter pointlessness -- what use is an access control mechanism if the agent being restricted can change the parameters of the mechanism willy-nilly -- but Intel has a solution! Changing the lockdown-enable bit triggers an SMI and shunts control to SMM mode, which is, naturally, expected to include code that figures out that this bit should not be disabled, and is to flip it back on (and return from the interrupt, having trashed the caches a bit).<p>This is, of course, a pathologically needless level of complexity -- in the ARM world, we have registers with silly names like &quot;NSACR&quot; that higher-privileged execution modes can set to restrict access to certain resources. There&#x27;s certainly no BIOS-OEM-provided code that needs to exist and be correct in order to implement such a basic task. In the end, this level of access-control is equivalent to a bloody Boolean operation or two, for heaven&#x27;s sake! All the CPU needs to do is to decode the instruction, realise it&#x27;s a potentially-privileged instruction, decode what the instruction tries to modify, look up in a table which register holds the relevant permissions bitfield, and do the relevant boolean operation between that register&#x27;s contents and an appropriate bitmask, and fault depending on the result. Since there&#x27;s an extremely close match between the properties that needs to hold (the truth table of all combinations of &quot;privilege level <i>x</i> can modify resource <i>y</i> iff bit <i>n</i> in register <i>z</i> is set&quot;) and the mechanism that enforces it, it&#x27;s easy to reason about this scheme and not difficult to either prove an implementation correct (or find counterexamples).<p>Meanwhile, the &quot;wake up SMM and hope it&#x27;ll countermands the illegal write&quot; scheme depends on a lot more machinery. How does it work on a multi-core&#x2F;multi-socket platform? How does this mechanism interact with the caches or the memory model? Is it possible to set up a race condition where the illegal write ends up going through uncountermanded because SMM mode can be made to not see the register in an illegal state? This is orders of magnitude of orders of magnitude more complex than analysing a lookup-table and a bitmask -- we need to understand the semantics of memory reads&#x2F;writes, of caching, of mode switches to SMM and the SMI interrupt, and how all of this clusterfuck is affected by the fact that there&#x27;s <i>multiple cores</i> in our system. LANGSEC people will call this a &quot;shotgun parser&quot; -- when input data checking &#x2F; recognition is interspersed with processing logic.<p>Even if all of this miraculously works and there&#x27;s literally no way that all the cores working together can send an illegal write that SMM code won&#x27;t countermand -- there&#x27;s still the issue of making sure that the specific SMM blob that our BIOS OEM wrote cooperates properly with this. Indeed, making BIOS OEMs implement these sorts of convoluted and critical mechanisms and expecting them to get all of them perfectly right requires a level of optimism that doesn&#x27;t yet exist. The situation has devolved to the point that there is literally a tool called &quot;chipsec&quot; that lets you test for the presence of a handful of well-known security-critical things (from time to time someone discovers a new one, of course, UEFI&#x2F;ACPI and the x86_64 privilege model is too complex for people to be sure that we found all the issues) that UEFI programmers are <i>notorious</i> for messing up. That this tool needs to exist is shameful. Of course, the security of the x86_64 platform doesn&#x27;t just depend on a bunch of magic access control registers being set right, there&#x27;s Turing-complete code that needs to be implemented by the BIOS OEM (and runs in the most privileged execution mode that isn&#x27;t Intel&#x27;s &quot;management processor&quot;) that is <i>security-critical</i>, and, well, it&#x27;s hard to prove that arbitrary Turing-complete code behaves correctly.<p>The auxiliary CPU mode (SMM) initially meant to hide APM and emulate PS&#x2F;2 mice in 90s-era computers is now <i>critical</i> to platform security, and does dangerous stuff like crypto and handling pointers from UEFI &#x2F; the OS. Every few months someone I follow on Twitter finds some new way to trick some widely-deployed SMM code into writing to a memory region it shouldn&#x27;t, it&#x27;s quite depressing. Great. Another pointless defender&#x2F;attacker arms race that the defenders could decisively win had Intel thrown away the spitefully complex intricacies of SMM and the x86 security model and replaced it with a clean, formal-verification-friendly set of privilege levels whose correct operation doesn&#x27;t depend on platform firmware code. Even AArch64 is less broken when it comes to this."
2017-04-08T05:11:01.000Z,React v15.5.0,"I agree, I am really concerned about this change.  But unfortunatly I do not think my feedback via twitter was well taken: <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;wesleytodd&#x2F;status&#x2F;850550711804989440"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;wesleytodd&#x2F;status&#x2F;850550711804989440</a><p>EDIT: I should add, that I didn&#x27;t want to say that I completely disagree with the change to remvoe this api entirely on twitter to the maintainers.  I am sure they get enough crap from people."
2017-04-06T17:36:30.000Z,New APIs to power customer engagement in Direct Messages,"Twitter also did something that I find particularly interesting: they somehow convinced developers that you needed them to bless your app and provide APIs to build a client that accesses their service, even though those credentials must be distributed <i>to the public with your client</i>. To people like me who are old enough to have dealt with AOL, the idea that developers are willing to buy into this fiction is absolutely insane: if the official Twitter client can do it, then so can your client, and there is nothing Twitter can do to stop you that doesn&#x27;t also break their client (which they are generally <i>less</i> willing to do than change their API on short notice!).<p>As far as I can tell the only thing that enforces this is what should amount to an antitrust level of collusion between the mega-companies to restrict access to products (via services such as the Apple App Store) that do things that the other mega-companies dislike, as it is in all of their best interests to maintain this same fiction. The reality is that client-side API keys are totally meaningless and make no sense: in an attempt to believe they make sense some developers then start to believe other crazy things like &quot;if I compile a token into my program other people can&#x27;t read it as it is compiled&quot; or to insist &quot;there must be some way to encrypt my binary to make sure that other people can&#x27;t get my API key&quot;, but this kind of broken thought only happens due to a broken premise :&#x2F;.<p>(That said, it isn&#x27;t 100% clear to me that if someone released a true Twitter client Apple would remove it, so if someone disagrees with that premise I am all ears: that is simply the only theoretical mechanism I can see that would seem to enforce this, and I feel like I have heard of this happening before, but AFAIK the random apps in the App Store for abusing Tindr are all based on reverse engineering the true API for the service, but it is also possible that Apple cares less about helping Tindr or that Tindr has a different internal mentality and culture surrounding this kind of thing; or it could even be the case that these now have been removed and I haven&#x27;t noticed yet as I don&#x27;t really pay much attention to track them, or even that I am wrong and they are somehow more indirect in their implementation.)"
2017-04-06T17:19:50.000Z,Twitter's New APIs,"As much as I agree with you, I wonder if the changes in leadership at the company since then might mean a different direction. Reading their blog posts, it seems like a &quot;reboot&quot; of sorts.<p>I am in the camp that still thinks Twitter is an important tool: both as a communication medium, as well as a competitor to Facebook&#x2F;Snapchat&#x2F;etc. Whether or not this vision for the API platform plays out as history repeating itself, or as a way for Twitter to continue to grow - remains to be seen. But I definitely root for them to try and try again when they fail.<p>To OPs point, definitely tread lightly at first, and don&#x27;t bet your whole company on Twitter&#x27;s APIs. I&#x27;m excited to see where this goes."
2017-04-06T16:19:01.000Z,Twitter's New APIs,"This is a good move, in a series of good moves recently, by the slowly-becoming-irrelevant service.<p>I <i>want</i> to get excited by this API change, I really do. But I can&#x27;t help but quash my own shower-thoughts about what I could do with this API, because what&#x27;s to say they let their 3rd-party devs down again?[0]<p>[0] - <a href=""http:&#x2F;&#x2F;www.theverge.com&#x2F;2012&#x2F;8&#x2F;23&#x2F;3263481&#x2F;twitter-api-third-party-developers"" rel=""nofollow"">http:&#x2F;&#x2F;www.theverge.com&#x2F;2012&#x2F;8&#x2F;23&#x2F;3263481&#x2F;twitter-api-third-...</a>"
2017-04-03T06:48:56.000Z,Men Without Work,"I want to make it perfectly clear...I am NOT in any way trying to avoid my personal responsibility in this painful experience. My primary crime was being <i>careless</i>, and I am sure paying one hell of a price for it.  Living in this shelter trying to find work with no clothes, even after I supposedly paid my debt to society, sure feels like I’m nowhere near done with the punishment.<p>What is deeply maddening, however, is the fact that the police violated my liberties and right to be protected from unreasonable search and seizure.  It was an open and shut case according to my public defender and the whole thing was recorded on his body cam, but I quickly realized that <i>I would have spend significantly more time in jail waiting for a trial to beat it then I would by taking a &quot;deal&quot; where the case was dropped to a misdemeanor.</i><p>At the core of it, my inability to create loving relationships at this point in my life, the kind that could have helped me bail out in time to not to lose my job, handicaps me in a big way, and surely is a driver of my substance use as well.  I have learned a great deal about addiction in my 35 years of using and there is little doubt that the core cause of my use is relationship-based dysfunction.<p>And yes...I can and do handle meth as I use it almost exactly like caffeine.  I worked for 10 months here in Vegas and my boss never even knew I had moved here from Florida...that describes perfectly how little I changed my daily routine.<p>In that time, I built Facebook and Twitter bots using the latest APIs, decoded and reimplemented an online version of a very complex standalone Medispan pharmaceutical drug database schema, designed&#x2F;implemented a high-performance PHP MVC framework (and much the code for the actual applications), and designed&#x2F;implemented a seamless, secure API interface for our Ionic 2 mobile app.  Also wrote a standalone subscription-based cart and billing module using the Stripe API.<p>Oh and I am most proud of the Fastlane integration for the Ionic apps that I personally developed (thank God for the cognitive enhancement for this!) the MS and OSX server scripts to totally automate the creation and submission of 100s of branded mobile apps for all our pharmacy clients.  Last I heard, our competition hired two PhD Computer Science professors to attempt to catch up as we totally blew by them with the systems I designed.<p>But I fully expect no one to believe me, because, of course, “drug addicts” such as myself are simply worthless pieces of shit that have no place in society besides, perhaps, working as minimum wage laborers.<p>This is the life I live.  I don’t recommend it."
2017-03-01T06:47:00.000Z,Ask HN: How would you turn Twitter around?,"The core problem is that the length of a tweet should be &quot;one concisely-stated thought&quot;, but that&#x27;s hard to write into an API&#x27;s documentation :)<p>&gt; PS 10 years is hardly long enough for &quot;always,&quot; &quot;traditional&quot; or &quot;nostalgia&quot; to apply.<p>Not in the real world no, although people are nostalgic for the pre-crash US, but on the Internet I think it definitely is. Put another way, if you changed Twitter into Medium people would be talking about &quot;the old Twitter&quot; with nostalgia."
2017-02-28T19:24:50.000Z,Ask HN: How would you turn Twitter around?,"Ooh, I like this question.<p>1. Trim the fat. Reduce the number of employees dramatically. Obviously not a graceful change but I feel there should not be that as many people working there as there are now.<p>2. Focus on engagement, not growth. Twitter may not be growing in the way that the market wants, but the users that it does have are incredibly devoted to the platform. If I were to leave Twitter there&#x27;s nowhere else I could go. If I leave Tinder or Snapchat there are many other platforms that can fill almost the same niche. Twitter needs to capitalize on that.<p>3. Make brands pay to have a page. In other words, if you&#x27;re not an individual, you must pay to create an account. Savvy companies have realized that being on Twitter is a key part of a solid social media campaign. To not be on Twitter is to miss out on a huge opportunity to reach a very devoted audience, and you can&#x27;t reach that audience anywhere else (#2). Some brands are already doing this well (e.g. Wendy&#x27;s.) If the choice comes to paying for the opportunity to market on Twitter, and not market at all, companies will gladly pay. On the plus side, this could let Twitter reduce the interstitial ads on the timeline.<p>Everyone hates ads, but the way that brands have engaged with individuals on Twitter really humanizes them and makes people form more real relationships with them. It also forces brands to be more accountable and aware.<p>4. Bring back Vine. A huge part of Twitter&#x27;s staying power is the unique culture it has created (#2). Staying power is what gives Twitter its greatest value to advertisers (#3).<p>5. Ramp up engagement on Periscope. Periscope being a part of Twitter makes a lot of sense because Twitter is all about stuff happening live. It&#x27;s a great platform but I think it also needs a desktop client (with OBS support, the way Twitch does) to allow the caliber of content creation to go up.<p>6. Re-open APIs. Twitter has sown a bad seed with the dev community by making its API very restricted. Tweets make up a very interesting dataset on which other people could build very unique things on top of. Twitter should encourage this, not stifle it. &quot;Look what cool things we can do with Twitter&quot; will only serve to strengthen the image of Twitter as a unique, irreplaceable platform.<p>---<p>These are the main issues I see as an everyday user of Twitter. Things like live sports&#x2F;TV are good ways to grow but these are all secondary to Twitter strengthening its core platform for longevity and meaningful sustainability."
2017-02-28T17:24:12.000Z,Ask HN: How would you turn Twitter around?,"I totally agree with this.<p>I&#x27;ve seen other posts mentioning timeline changes, protocol changes, and opening up the API ecosystem, but I don&#x27;t see any of these changes actually affecting Twitters bottom line.<p>Twitter is a great place to discuss what&#x27;s going on right now. Whether it be sports, a natural disaster, political debate, news, etc. Twitter needs to be the place to go when you want social commentary &#x2F; news on what&#x27;s happening RIGHT NOW."
2017-02-28T17:12:50.000Z,Ask HN: How would you turn Twitter around?,"* Remove Jack from CEO position<p>* Let Evan return as CEO (merge with Medium)<p>... this will restore Twitter management to the situation around 2010, then ...<p>* Reform or cancel the Trust &amp; Safety council<p>* Restore open API access and app ecosystem<p>* Remove side wide censorship tools, add self censorship tools (a la Gab)<p>* Reverse the timeline changes<p>* Stop pandering to far left ideologues<p>Something like that?"
2017-02-27T20:09:27.000Z,Prophet: forecasting at scale,"&gt; Anecdotally, there is a ton of money left on the table by established businesses...<p>True. 
fwiw, I worked on the same project at Twitter 4 years back - the Facebook folks call it capacity planning at scale, we called it capacity utilization modeling. The goal was the same - there are all these &quot;jobs&quot; - 10s of 1000s of programs running on distributed clusters, hogging CPU, memory and disk. Can we look at a snapshot in time of the jobs usage, and then predict&#x2F;forecast what the next quarter jobs usage would be ?
If you get these forecasts right ( within reasonable error bounds ), the folks making purchasing decisions ( how many machines to lease for the next quarter for the datacenters) can save a bundle.<p>From an engineering pov, every job would need to log it&#x27;s p95 and p99 CPU usage, memory stats, disk stats...Since Twitter was running some 50k programs back then (2013ish) on these Mesos clusters, the underlying C++ API had hooks to obtain CPU and memory stats, even though the actual programs running were all coded up in Scala (mostly), or python&#x2F;Ruby (bigger minority), or C&#x2F;Java&#x2F;R&#x2F;perl ( smaller minority ). There&#x27;s an interesting Quora discussion on why Mesos was in C++ while rest of Twitter is Scalaland...mostly because you can&#x27;t do these sort of CPU&#x2F;memory&#x2F;disk profiling in the jvmland as well as you can in C++.<p>OK, so you now have all these CPU stats. What do you do with them ? Before you get to that, you have the usual engineering hassles - how often should you obtain the CPU stats ? Where would you store them ?<p>So at Twitter we got these stats every minute ( serious overkill :) and stored them in a monstrous JSON ( horrible idea given 50000 programs * number of minutes in day * all the different stats you were storing :))<p>So every day I&#x27;d get a gigantic 20gb JSON from infra, then I&#x27;d have to do the modeling.<p>In those days, you couldn&#x27;t find a single Scala JSON parser that would load up that gigantic JSON without choking. We tried them all. Finally we settled on GSON - Google&#x27;s JSON parser written in Java, that handled these gigantic jsons with no hiccups.<p>Before you get to the math, you would have to parse the JSON and build a data structure that would store these (x,t) tuples in memory. You had 50k programs, so each program would get a model, each model originated from a shitton of (x,t) tuples, the t being minutely and the fact that some of these programs had been running for years, meant you had very large datasets.<p>The math was relatively straightforward...I used so called &quot;LAD&quot; - least absolute deviation from mean, as opposed to simple OLS, because least squares wasn&#x27;t quite predictive for that use case. Building the LAD modeling thing in Scala was somewhat interesting...Most of the work was done by the commons math Apache libraries, I mostly had to ensure the edge cases wouldn&#x27;t throw you off, because LAD admits multiple solutions to the same dataset - it&#x27;s not like OLS where you give it a dataset and it finds a unique best fit line. Here you&#x27;d have many lines sitting in an array, depending on how long you let the Simplex solver run. 
Then came the problem of visualizing these 50,000 piecewise line models using javascript heh heh. The front end guys had a ball with the models I spit out.<p>If someone&#x27;s doing this from scratch these days, NNs would be your best bet. Regime changes are a big part of that."
2017-02-23T13:26:20.000Z,MongooseIM 2.0.1 more stability for app developers,"Hi all,<p>MongooseIM, the massively scalable XMPP&#x2F;Jabber server, written in Erlang, under GPLv2, is available in version 2.0.1.<p>What&#x27;s new?<p>=&gt; For DevOps&#x2F;SysAdmins<p>Cassandra DB support for MAM (XEP-0313: Message Archive Management)<p>Simplified MAM configuration<p>ODBC&#x2F;RDBMS backend for MUC light<p>MUC hibernation, for memory saving<p>=&gt; For client developers<p>SSE (Server-Sent Events), as an addition to our client-side REST API, for server to client real-time push<p>XEP-0363: HTTP File Upload<p>Improvements to XEP-0016: Privacy Lists and XEP-0191: 
Blocking Command<p>=&gt; Raw versions of the changelog<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;esl&#x2F;MongooseIM&#x2F;releases&#x2F;tag&#x2F;2.0.1"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;esl&#x2F;MongooseIM&#x2F;releases&#x2F;tag&#x2F;2.0.1</a><p>=&gt; What&#x27;s coming next?<p>Mangosta Android and Mangosta iOS: opensource mobile clients, with focus on social microblogging and group chats (just a humble techno demo, only available as source code, no intention to go on AppStore&#x2F;PlayStore)<p>An opensource push notification server written in Elixir<p>An opensource ICE&#x2F;STUN&#x2F;TURN server written in Elixir<p>=&gt; Links<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;esl&#x2F;MongooseIM&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;esl&#x2F;MongooseIM&#x2F;</a><p><a href=""https:&#x2F;&#x2F;twitter.com&#x2F;MongooseIM&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;MongooseIM&#x2F;</a><p>The documentation: <a href=""https:&#x2F;&#x2F;mongooseim.readthedocs.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;mongooseim.readthedocs.io&#x2F;</a><p>Any comment?"
2017-02-22T21:46:52.000Z,"APIs, robustness, and idempotency","For every one successful major version revamp there may be a dozen that never changed :)<p>Even amongst those that did do a major API revision, I suspect  that you&#x27;re usually left with the no-win situation of either leaving users lingering on your previous version ~forever, or enforcing a deprecation schedule and annoying a lot of people (Twitter&#x27;s V1 retirement for example)."
2017-02-22T15:59:49.000Z,"Google Site Search will be completely shut down by April 1, 2018","Last couple of years or so have been an eye opener for me on how I choose libraries, tools and services for my project. One important lesson was that never choose a service which don&#x27;t have plug and play open source alternative. Even hyped start ups go out of business and big companies like Facebook and Google shut down services.<p>Third party APIs are a even bigger risk. Facebook and Twitter APIs used to change quite often 2-3 years ago. (Haven&#x27;t personally worked on this off late though.) APIs and services which seem too cheap are generally the ones which should be avoided. Because it is more likely that the companies running these will not find a sustainable business model.<p>Even Open Source projects get abandoned quite often. Sometimes a team puts together an impressive open source project and then they get acquired by a big company which results in abandonment of the project. I have one client who has his startup riding on Kurento Media Server for WebRTC calls. This product is in development from last one and half years. Now, after Kurento&#x27;s acquisition by Twilio, Kurento&#x27;s future is not clear. Also it&#x27;s not a project which any body can just get into and start developing it further. Thankfully Kurento is not abandoned yet by the development team, but I had read somewhere that they are looking for new maintainers.<p>The lesson learned is only depend on mature open source projects and depend on PaaS services which make those open source projects available as easy to use services. Even if that PaaS service go down, there is a high chance that you will find someone who can deploy and support it for you.<p>However, if you are depending on a third party API or a relatively unknown Open Source Project for critical functionality, treat it as a big risk in your product&#x27;s future road map and be prepared with a contingency plan.<p>Right now in cloud services there are way too many products which are not easily replaceable. But these are easy to use and sometimes solve really difficult problems. So the temptation to use them is too high. So they still end up in the stack, especially when the clients themselves push for these services to be used."
2017-01-27T16:33:58.000Z,Introducing React Navigation for React Native,"react-navigation has very different goals, and it&#x27;s still in beta, things like transitions are likely to change significantly before 1.0 release.<p>The main difference in the goals is that react-navigation is intended to be entirely cross-platform, including iOS, Android, ReactVR, and web. It&#x27;s implemented entirely in JavaScript which has a huge upside because you can ship updates to it OTA and you can submit patches without needing to know ObjC&#x2F;Java and the platform&#x27;s respective navigation APIs. It will be an important library to push forward development of more powerful general purpose native APIs, for example the native driver for Animated was built with the intention of making it possible to run navigation transitions on the UI thread. Similarly, this will be an important use case for a better gesture API (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;notbrent&#x2F;status&#x2F;824683858037649408"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;notbrent&#x2F;status&#x2F;824683858037649408</a>). I wrote more about why we should try to use JavaScript as much as possible with React Native here: <a href=""https:&#x2F;&#x2F;blog.getexponent.com&#x2F;good-practices-why-you-should-use-javascript-whenever-possible-with-react-native-26478ec22334#.lbbxfjjp1"" rel=""nofollow"">https:&#x2F;&#x2F;blog.getexponent.com&#x2F;good-practices-why-you-should-u...</a><p>OTOH, if what you <i>need</i> is a navigation library that is 100% faithful to the platform&#x27;s built-in APIs, and you need that right now, then you will probably want to use something like react-native-navigation (Airbnb is working on open sourcing a similar library that they use in their app)."
2017-01-24T21:27:55.000Z,"Ask HN: Product Managers, how did you get there and what's your background?","PM @ Google, before that PM @ Twitter for 2 years. Before that CEO&#x2F;Founder of a SaaS startup.<p>Did a BA in Anthropology &amp; English. Learned to write, think clearly, and communicate effectively.<p>Moved to China, founded a company which failed but gave me the entrepreneurial bug and the realization that I didn&#x27;t know nearly as much CS as I thought I did.<p>Went back to school, did a Bachelors of Computer Science w&#x2F; Math minor. Learned to think systematically &amp; rigorously, how computers work, a bit of ML&#x2F;algorithms&#x2F;etc, and how to code.<p>Applied to Google APM program. Thought it would be an ideal job before founding a company. Didn&#x27;t get in.<p>Founded a company with my best friend, who had a Masters in Computer Engineering and had worked in industry. Spent the first year coding everyday, all our first employees were engineers. Learned to write real software and work with an engineering team.<p>Transitioned into the CEO role in practice. This happened because my co-founder and I had very different motivations. He wanted to build great systems (and not have to go to meetings &#x2F; talk to customers). I just wanted to do whatever was needed to move the business forward, I was equally happy coding or talking to investors &#x2F; taking meetings. Learned (through multiple failings) how to think about markets, interview customers, how to motivate and lead, build realistic roadmaps, raise money, do sales.<p>After 5 years, sold my company as a 1st base hit exit. I had no problem getting mid-career PM interviews, despite having never been &#x27;officially&#x27;a PM. Focused on big scale consumer because I wanted maximize my leverage&#x2F;impact.<p>Junior positions? See todd_sherman&#x27;s response (Hi Todd!).<p>Skills – well covered elsewhere. The short version is &quot;Get the right things built &amp; shipped.&quot; To do that, you need to know (1) what the right things are (user problems, strategy, markets, corporate politics, etc) and (2) get them built &amp; shipped (working with eng &amp; design, leadership, resourcing, more politics). It&#x27;s harder than it sounds, there are many many more wrong things than right things (and many wrong things can sound pretty right).<p>I&#x27;m sure I&#x27;m biased, but I think founding a company is an ideal pre-PM curriculum. When big tech co&#x27;s acquire companies, the CEOs almost always become PMs, for good reason. This knowledge changes the risk equation as a founder, being a PM at a great company is a pretty awesome backup plan."
2017-01-20T14:56:16.000Z,The Infrastructure Behind Twitter: Scale,"Twitters analytics are either lossy or eventually consistent [1]. I&#x27;m sure they&#x27;re resource intensive, but they&#x27;re taking shortcuts that makes them very amenable to saving resources (unless it&#x27;s just very buggy).<p>In terms of the broadcast problem, it&#x27;s trivially handled by splitting large follower lists into trees, and introducing message reflectors.  Twitters message counts is high for a public IM system, but it&#x27;s not that high overall messaging volume for private&#x2F;internal message flows. More importantly, despite the issue of large follower counts, if breaking large accounts into trees of reflectors, it decomposes neatly, and federating large message flows like this is a well understood problem:<p>I&#x27;ve half-jokingly in the past you could replace a lot of Twitters core transmission of tweets with mail servers and off the shelf mailing-list reflectors, and some code to create mailboxes for accounts an reflectors to break up large follower lists (no, it wouldn&#x27;t be efficient, but the point is distributing message transfers including reflecting messages to large lists is a well understood problem), and based on the mail volumes I&#x27;ve handled with off the shelf servers I&#x27;ll confidently say that 100&#x27;s of millions of messages a day that way is not all that hard to handle with relatively modest server counts.<p>Fast delivery of tweets using reflectors to extreme accounts would be the one thing that could drive the server number up high, but on the other hand, there are also plenty of far more efficient ways of handling it (e.g. extensive caching + pulling rather than pushing for the most extreme accounts)<p>Note, I&#x27;m not saying Twitter doesn&#x27;t have a legitimate need or the servers they use - their web app does a lot of expensive history&#x2F;timeline generation on top of the core message exchange for example. And the number of servers does not say much about their chosen tradeoffs in terms of server size&#x2F;cost vs. number of servers, but the core message exchange should not be where the complexity is unless they&#x27;re doing something very weird.<p>[1] Taking snapshots of their analytics and the API follower&#x2F;following count shows they don&#x27;t agree, and the analytics numbers changes after the fact on a regular basis."
2017-01-17T06:20:23.000Z,Keras will be added to core TensorFlow at Google,"It actually sounds like Keras as we know it will continue to exist and support both Theano and TF.<p>Theano support will continue for as long as Keras exists. This integration changes nothing for existing Keras users, only for TF users. - <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;fchollet&#x2F;status&#x2F;821090410659344384"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;fchollet&#x2F;status&#x2F;821090410659344384</a><p>Rather than a &quot;new&quot; Keras it sounds (I could be wrong) as if the Keras API will be included now with TF as an alternative way of interacting with TF (as it has been for some time) and simple bundled with TF."
2017-01-13T09:47:56.000Z,App.net is shutting down,"&gt; They slowed down making those sorts of radical changes, and to this day you can still browse Twitter with a 3rd-party app like TweetBot and never see cards or ads.<p>TweetBot is older than the API cap, so did they roll that back? It was 100,000 users (or 2x current users if that was &gt;100,000 which TweetBot probably was). So if they didn&#x27;t roll it back I guess TweetBot would have stopped adding clients."
2017-01-13T02:12:43.000Z,App.net is shutting down,"App.net came out in 2012, and while I can&#x27;t really remember the specific areas of discontent that I experienced with Twitter back then, here&#x27;s an article I found:<p><a href=""http:&#x2F;&#x2F;thenextweb.com&#x2F;twitter&#x2F;2013&#x2F;01&#x2F;14&#x2F;twitter-in-2012&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;thenextweb.com&#x2F;twitter&#x2F;2013&#x2F;01&#x2F;14&#x2F;twitter-in-2012&#x2F;</a><p>I think what everyone was worried about back then was that Twitter was changing the nature of what Twitter was. Twitter started placing limits on API tokens, introduced new UI in the form of cards, which could also be used for ads, etc. There was a sense that the freedom and openness of the Twitter platform was quickly diminishing.<p>Twitter&#x27;s response was basically no response, but in a good way. They slowed down making those sorts of radical changes, and to this day you can still browse Twitter with a 3rd-party app like TweetBot and never see cards or ads."
2016-12-20T23:07:56.000Z,Twitter’s Chief Technology Officer to Leave Company,"It&#x27;s been awhile since I&#x27;ve used the FB API, but one thing that&#x27;s nice about Twitter is that you have a lot of room to crawl networks of users; for example, I always like getting the list of accounts that U.S. congressmembers follow (based on the Twitter account list maintained by the unitedstates project [0]), as a proxy for such things as perceived political bent of media organizations.<p>An example of the FB limitations I&#x27;m thinking about is how you can&#x27;t query the graph API by username, e.g. <a href=""http:&#x2F;&#x2F;graph.facebook.com&#x2F;mark.zuckerberg"" rel=""nofollow"">http:&#x2F;&#x2F;graph.facebook.com&#x2F;mark.zuckerberg</a><p>There were other changes made before that, that&#x27;s just one I remember in my latter days of using their API. Granted, I&#x27;ve always been impressed with the analyses you&#x27;ve done with FB data and have put it on my list someday to learn through your examples :).<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;unitedstates&#x2F;congress-legislators"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;unitedstates&#x2F;congress-legislators</a>"
2016-11-19T19:53:24.000Z,Ask HN: What are your thoughts on /r/whereisassange?,"This supposedly is a brief timeline of events copied from that sub reddit. I have not verified this information, and there&#x27;s a lot of misinformation out there so don&#x27;t take anything at face value.<p>Here is a brief timeline of events:<p>Apr 16th: John Jones QC, Assange&#x27;s U.N. Lawyer dies jumping in front of a train.<p>May 11th: Michael Ratner, WikiLeaks&#x27; chief counsel, dies of cancer.<p>Jul 10th: Seth Rich, DNC staffer who supposedly leaked DNC documents to Wikileaks, is shot in the back and dies. Nothing is stolen from his body.<p>Aug 5th: Edward Snowden (source of leaks on surveillance by the NSA) tweets 64 bit code (potential dead man&#x27;s switch) note: there is much speculation regarding the actual intent of this tweet.<p>Aug 10th: Wikileaks offers $20k reward for information on murder of Seth Rich.<p>Oct 7th: Podestamails leaks first batch.<p>Oct 14th: John Podesta tweets &quot;I bet the lobster risotto is better than the food at the Ecuadorian Embassy”.<p>Oct 15th: Pamela Anderson visits Assange and feeds him a vegan sandwich.<p>Oct 16th&#x2F;17th: John Kerry visits the UK, personally pressures Equador to stop Assange from publishing documents about Clinton.<p>Oct 16th: Equadorian Embassy cuts off Assange&#x27;s internet access.<p>Oct 16th: Wikileaks tweets SHA-256 prerelease keys.<p>Oct 18th: Witnesses photograph and report heavily armed police 
and vans outside Equadorian Embassy, are barred from approaching and have cellphones confiscated. Live feeds are cut off.<p>Oct 18th: Fox News reports Assange will be arrested in a matter of hours.<p>Oct 18th: <a href=""https:&#x2F;&#x2F;file.wikileaks.org&#x2F;file"" rel=""nofollow"">https:&#x2F;&#x2F;file.wikileaks.org&#x2F;file</a> made publicly visible, file dates&#x2F;timestamps changed to 1984 (Orwell reference).<p>Oct 20th: &#x2F;r&#x2F;wikileaks, &#x2F;r&#x2F;dncleaks, &#x2F;r&#x2F;wikileakstaskforce and &#x2F;r&#x2F;nsaleaks add 21 new moderators and remove previous mods, all threads about Assange going missing deleted since.<p>Oct 20th&#x2F;21st: Wikileaks tweets 5 tweets with misspelled words. The Wikileaks twitter has never rarely made a spelling error, let alone 5 in two days.<p>Oct 21st: Massive DDoS attack on US internet. Wikileaks tweets to imply the attack originates from its supporters, asking them to stop, no evidence supports claim.<p>Oct 21st: London Airport evacuated due to &quot;chemical attack&quot;, potentially used as cover to fly Assange out of country.<p>Oct 22nd: Gavin MacFadyen (mentor to Assange and key player in Wikileaks) dies of lung cancer.<p>Oct 23rd: Wikileaks Tweets poll asking how best to prove Assange is alive (he still hasn&#x27;t appeared on video or at the window since).<p>Oct 24th: Wikileaks Tweets video of Assange and Michael Moore recorded in June.<p>Oct 26th: 4chan users successfully successfully decode their first message in Wikileak&#x27;s blockchain. Threads are instantly flooded by shills saying that it&#x27;s not worth looking into. The blockchain is blocked with fees and 43000 unconfirmed transactions appear in the mempool.<p>Nov 6th: Huge DDoS takes down Wikileaks for first time in years.<p>Nov 7th: Various entities notice hundreds of Podesta and DNC emails are missing from recent leaks, accessed with direct entry.<p>Nov 8th: Trump wins.<p>Nov 12th: Assange meets with Swedish prosecutor regarding rape allegations, lawyers barred from attending, meeting conducted via an Equadorian ambassador (not face to face)<p>Nov 14th: Wikileaks releases insurance files, SHA-256 hashes do not match those tweeted in October."
2016-11-17T09:09:22.000Z,Twitter suspends 'alt-right' accounts,"&gt; Twitter ... also pushes those comments to that person.<p>Yes. They should fix that (if these recent changes haven&#x27;t yet done that). I&#x27;ve had one of the worst mornings of my life in the last year when I criticised a new browser API and the author of the API refused to stop mentioning me for an hour despite being asked repeatedly to stop. Having to turn off your phone because a high profile person is angry at you is awful. Having people threaten you or publish your contact details is much worse.<p>Who draws the line between criticising someone and &#x27;pushing others to harass&#x27;? Would you block people on the left who have criticised people on the right who were subsequently harassed? Milo had syringes sent to his house and his mobile number published, Totalbiscuit and his wife received a bunch of death threats. We shouldn&#x27;t ban all the people who criticised them because they were subsequently harassed - I&#x27;m sure you wouldn&#x27;t support that and I&#x27;d be right there with you. We should ban people who actually make credible threats, publish non-Twitter contact info on Twitter as a way of harassing others, and similar behaviour.<p>&gt; Not having a Twitter account doesn&#x27;t mean you can&#x27;t express yourself.<p>Yes, just that you can&#x27;t express yourself on one of the few places for discussion, and more to the point, that other people who want to hear you (and in Milo&#x27;s case that was a lot of people) can&#x27;t do so.<p>&gt; You&#x27;re not barred from making sites or publishing your thoughts on innumerable other places.<p>But due to Metcalfe&#x27;s law none of those other places have any worth.<p>As one of the grandparent comments says, we don&#x27;t trust the free market to protect other values, we shouldn&#x27;t trust it to protect freedom of expression."
2016-11-13T17:59:03.000Z,Moving from Native Apps to Progressive Web Apps,"You are following that guy on twitter, you will he is a avid javascript guy. So you can take his words with a grain of salt.<p>I never see any web app one mobile feel good. But you never know.<p>also, with kotlin and swift doing native app is not that complicated. 
Learning a new API on top of native API I don&#x27;t think is safe.<p>Also, google, apple they can change the rules and parts of the apps don&#x27;t work anymore for x reason."
2016-11-08T17:06:24.000Z,Show HN: Embed HN comments in your website,"By <i>embed</i> I meant to embed the content; I&#x27;ve heard from quite a few people that they love that they can personalize it with simple CSS. I am not sure if this is a problem from me not being native (I&#x27;m Spanish) or just a special case&#x2F;extreme use of the word <i>embed</i>. In both cases, embedding the functionality is not a possible due to common, sane web attack concerns; if I could allow you to change it then I could change it myself which would mean big trouble. What twitter does is keeping the control+developing their own code, an API&#x2F;library that HN doesn&#x27;t have available. And of course I&#x27;m now going down the road of asking for people&#x27;s username&#x2F;password of the different networks.<p>Also something has to be said about the advantages of thin clients&#x2F;strong back-ends, which means standardizing the response from <a href=""https:&#x2F;&#x2F;comments.network&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;comments.network&#x2F;</a> of the different networks."
2016-10-26T16:51:53.000Z,Announcing .NET Core 1.1 Preview 1,"Depends on what APIs you need, and what your tolerance is for futzing around with things.  If you need the larger API surface of the .NET Framework and you don&#x27;t have time to be on the bleeding edge, go with Mono.  Xamarin Studio has good support for it, and even if you&#x27;re using some other editor (VSCode, Spacemacs, etc.) everything still generally works with the tooling for Mono.<p>There are basically two components that need polishing for .NET Core to be a reasonable choice - the implementation of NetStandard 2.0 for .NET Core (so you get all the old APIs back), and for the tooling to mature (transition from project.json back to fsproj).  These efforts are coming along nicely [1][2], but still aren&#x27;t ready for prime time.<p>Here&#x27;s a roadmap that Enrico Sada has laid out to get the F# .NET Core situation to maturity: <a href=""https:&#x2F;&#x2F;gist.github.com&#x2F;enricosada&#x2F;6f0a0424ca65b9d08e5a84f79560c4c6"" rel=""nofollow"">https:&#x2F;&#x2F;gist.github.com&#x2F;enricosada&#x2F;6f0a0424ca65b9d08e5a84f79...</a><p>And by the way, don&#x27;t worry too much about switching over from Mono to .NET Core.  With NetStandard 2.0 the API changes should be minimal.  Similarly, once the cleaned up proj file format is out of preview the change in tooling from Mono to .NET Core should be minimal (or even non-existent).<p>[1] <a href=""https:&#x2F;&#x2F;slack-files.com&#x2F;T04BJKUMU-F2ST232AJ-6e68200a3d"" rel=""nofollow"">https:&#x2F;&#x2F;slack-files.com&#x2F;T04BJKUMU-F2ST232AJ-6e68200a3d</a> - Enrico Sada&#x27;s work on getting dotnet cli to work with proj system for .NET Core
[2] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;sforkmann&#x2F;status&#x2F;790488306991661056?s=09"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;sforkmann&#x2F;status&#x2F;790488306991661056?s=09</a> - Steffen Forkmann getting Paket to work with new proj system"
2016-10-25T05:49:35.000Z,Twitter Plans Hundreds More Job Cuts as Soon as This Week,"After years of being increasingly hostile to 3rd party developers, Twitter finally decided that you needed their permission to have more than 100k users of your twitter client. That announcement was bundled with tightened rate limiting and stricter controls over how you could display tweets. This was the final stake in the coffin for many Twitter clients.<p><a href=""https:&#x2F;&#x2F;blog.twitter.com&#x2F;2012&#x2F;changes-coming-in-version-11-of-the-twitter-api"" rel=""nofollow"">https:&#x2F;&#x2F;blog.twitter.com&#x2F;2012&#x2F;changes-coming-in-version-11-o...</a>"
2016-10-03T18:33:56.000Z,Ask HN: Who needs contributors? (October 2016),"I have a few semi-active projects that could use some love. I&#x27;m struggling with RSI right now and have way more creative energy than I can channel, so I&#x27;d also be interested in pair programming on my projects via video or in person (Bay Area).<p>All of these projects are MIT-licensed, and I&#x27;m pretty good about filing GitHub issues for things that need to happen.<p>Email&#x2F;Twitter in profile.<p>- - -<p>Usercorn - <a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;usercorn"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;usercorn</a><p>Skills: Go, C, Syscall ABI<p>Usercorn is a sort of debugging tool, kernel API emulator, and CPU emulator (powered by Unicorn Engine) rolled into one. It&#x27;s hard to simply explain the vision but it can do things like run a MIPS Linux binary on x86_64 OS X (kinda like a more powerful qemu-user).<p>Plenty of GitHub issues here, but the main work needed right now:<p>Fixing up bugs related to glibc, dyld, and other runtimes. x86_64 Linux is the best supported loader right now, so the rest could use some love. There&#x27;s progress being made on OS X &#x2F; iOS + dyld startup right now.<p>Support for issuing signals to the guest CPU (need a signal handler table on a process&#x27;s kernel structure, a syscall handler for `signal` and `sigaction`, and code that can jump the guest CPU into a signal handler and do a `sigreturn`)<p>More syscall emulation (~50&#x2F;350 syscalls are implemented for Linux and OS X), but it&#x27;s pretty easy to add new ones.<p>Support for guest threading and fork&#x2F;clone (these will likely need a virtual process&#x2F;thread table, then each thread&#x2F;process can run on a Goroutine and take advantage of Go&#x27;s existing scheduler).<p>Virtual filesystem layer, so syscalls like open&#x2F;read&#x2F;write don&#x27;t go directly to the host OS and can be intercepted&#x2F;overlaid in a more general sense.<p>- - -<p>lib43 - <a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;lib43"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;lib43</a><p>Skills: C, ASM, Syscall ABI<p>Yet another libc, created as a result of this blog post: <a href=""http:&#x2F;&#x2F;ryanhileman.info&#x2F;posts&#x2F;lib43"" rel=""nofollow"">http:&#x2F;&#x2F;ryanhileman.info&#x2F;posts&#x2F;lib43</a> - mostly just has string, memory, number, and basic IO functions right now.<p>Ways to contribute: Pick a man page for any missing libc function and implement it in a simple&#x2F;readable manner, or dive into an architecture syscall ABI (like ARM&#x2F;NetBSD) and write the assembly backend for it.<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;lib43"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;lib43</a><p>- - -<p>glshim - <a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;glshim"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;glshim</a><p>Skills: C, OpenGL<p>This provides desktop OpenGL ~1.5 sans shaders to any mobile device implementing OpenGL ES 1.0. It has been used to port dozens of open and closed-source games to the Pandora and other mobile platforms. It was also used for the Android real-Minecraft launcher (called Boardwalk I think).<p>Current goals include testing&#x2F;improving the remote rendering (which allows software like emulators to easily serialize and remotely render OpenGL), increasing compatibility (testing games + filing&#x2F;fixing issues on GitHub), adding WINE support (will be a trial&#x2F;error process of running WINE, debugging&#x2F;fixing the thing that prevents initialization, repeat), and writing more feature tests (which are actually pretty easy. You write a simple program to make OpenGL calls and assert which OpenGL ES calls should be emitted from the other end).<p>- - -<p>patchkit - <a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;patchkit"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;patchkit</a><p>Skills: Python, C, ASM<p>This project allows you to reproducibly patch compiled binaries with one or more short Python scripts. It includes an assembler (Keystone), disassembler (Capstone), basic linker, basic static recompilation&#x2F;code transformation engine, control flow graph, and C compiler integrations... all in about 700 lines of Python. It was mostly created for use in attack-defense Capture The Flag competitions.<p>These are both working patches:<p><pre><code>    def patch(pt): pt.patch(0x800400a, asm=&#x27;mov eax, 1&#x27;)
    def patch(pt): pt.patch(pt.entry, c=&#x27;void f() { printf(&quot;hi\n&quot;); }&#x27;)
</code></pre>
It mainly needs glue code written for more architectures, support for PE&#x2F;MachO formats, and improvements to the C compiler&#x2F;linker. The provided symbols are mostly specific to Darpa&#x27;s DECREE environment, so support should be added for yanking&#x2F;calling symbols from the binary itself as well as integrating something like lib43 to provide a basic libc and syscall support on many platforms.<p>- - -<p>ActualVim - <a href=""https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;actualvim"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;lunixbochs&#x2F;actualvim</a><p>Skills: Python<p>This project is a massive hack to sneakily jam a Vim instance into a Sublime Text buffer. This gives you surprisingly good Vim keybinding support, and even works with your Vim plugins, but it totally breaks Sublime Text plugins and commands (as text changes won&#x27;t be propagated back to Vim). As a result, the project is mostly a joke right now (just a pretty UI around Vim that breaks most interactive Vim plugins).<p>I do think NeoVim is mature enough to take this the rest of the way into being a serious project, and there&#x27;s a fair bit of interest. The Sublime Text side of the interface works very well, so the main tasks here would be (1) swapping out Vim for NeoVim (which I seem to remember having a very simple remote control API), and a (2) handler to propagate text changes back from Sublime plugins into the NeoVim buffer."
2016-09-20T11:10:40.000Z,"Photos, videos, GIFs, polls, quotes no longer count toward your 140 characters","At least they actually added this into the API this time <a href=""https:&#x2F;&#x2F;www.hitchhq.com&#x2F;twitter&#x2F;activities&#x2F;upcoming-changes-to-tweets-57dfb6557ab5cb2d63b136c4"" rel=""nofollow"">https:&#x2F;&#x2F;www.hitchhq.com&#x2F;twitter&#x2F;activities&#x2F;upcoming-changes-...</a>"
2016-09-19T20:06:53.000Z,URLs no longer count toward your 140 characters,"I wonder how many systems, within Twitter and third-party API users, were broken by this change. I&#x27;m sure the 140 character limit is hardcoded, explicitly or implicitly, for things like buffer sizes or database schemas in tons of software."
2016-09-16T20:49:01.000Z,Learn to build serverless apps by competing in cloud tank warfare,"&#x27;serverless&#x27; apps are not really &#x27;serverless&#x27;.  You are just allowing another company to run the actual server infrastructure.<p>While this might be good for large companies, it&#x27;s dangerous for startups.  Someone else has complete control over the infrastructure of your business and it not only makes it difficult for you to make simple changes that could save you money, but it&#x27;s very expensive compared to traditional servers that you run yourself.<p>I run all of my own servers and it would cost me 10X to run it on AWS.<p>Too many startups outsource their infrastructure or create a business that relies completely on another business platform like Twitter&#x2F;Facebook and then get squashed when things change or the platform doesn&#x27;t want you to have too much power.<p>The book called &#x27;Hatching Twitter&#x27; shows exactly this mindset: 3rd party API users were cut-off because the execs at Twitter realized that only a few of the 3rd party apps together had enough of a user base to compete with Twitter.<p>Which is why all of these services follow the same handbook: have generous access to the API, after this brings in and builds the user base, Cut-off access and severely limit the API (to prevent users from leaving).<p>One other step is charging so much money for the API access that it bankrupts most of these businesses and then launch a competing app."
2016-09-15T01:23:08.000Z,Arch Linux adapted for Windows Subsystem for Linux,"&gt; The interesting thing is that games are some of the most costly<p>Hah!  I wish.  I&#x27;ve spent thousands on single SKUs - yet SASS and anything B2B can make that look like chump change.<p>Meanwhile, Steam sales discount high quality, high end titles significantly pretty quickly - to the point where a lot of gamers basically never pay full price.<p>To say nothing of mobile being flooded with $0.99 titles.
To say nothing of the effectively free humble bundles.
To say nothing of all the free web and indie games out there.<p>Although I guess the right freemium Skinner box can also cost thousands in DLC and micro-transactions?  But you can get games so cheap these days that people don&#x27;t even get around to playing everything in their Steam libraries.<p>&gt; I just find it hard to rationalize FOSS zealotry that is almost universally hypocritical to some degree.<p>On the more practical side of things, games are entertainment and frequently rely heavily on obfuscation to avoid hacking to gain unfair advantages in multiplayer.  It&#x27;s all somewhat fungible - if you can&#x27;t play game X, you can still have fun playing game Y - the only real downside being your emotional investment in game X.  Vendor lock-in isn&#x27;t much of a problem, and a number of games are mod friendly.<p>Having your business and personal data stuck in vendor lock-in and being legally prohibited from taking over where they fuck up, or try to escape from their clutches should they jack up their prices, etc. is a whole new level of potential downside.  Entire businesses die when twitter changes their API terms.<p>Meanwhile, if WoW ever shut down, gold farmers would find another MMO to abuse the same day."
2016-09-14T11:54:42.000Z,Pardon Snowden,"I&#x27;m the CTO of a startup that&#x27;s trying to solve this very problem. Online activism isn&#x27;t very effective, so our thesis is that small groups of determined people can affect change when they meet in person around specific issues and legislation. To facilitate this concept, we&#x27;ve built basically a mashup between Twitter, Meetup.com, and an API feed of legislation.<p>The goal is to find events going on in your area and you can join and be a part of the change. Sometimes just being able to find the events going on about certain topics is the hardest part.<p>We&#x27;re launching on October 1st, so I&#x27;m hoping we can make a small, meaningful impact in fixing this."
2016-09-03T16:31:43.000Z,Twitter Is Finally Starting to Wake Up to Reality and Consider Selling Itself,"Has Twitter considered a micropayment service for publishers, given the outsize value of the platform to journalists and creators for marketing, real-time signals and discussion? Flattr [1], Brave [2], Blendle [3] and Patreon [4] are trying different approaches, but Twitter already has the scale (identity namespace), behavioral signals and traffic.<p>Since Twitter does not seem to be highly successful at existing advertising models, perhaps some resources could be dedicated to a small team that can move quickly and launch a new service by Jan 2017, so that a payment experiment can run for a couple of quarters before D-Day arrives in July 2017? If any innovative revenue-generating projects are planned, <i>please</i> involve the diehard users who would be lost if Twitter went away.  They have much to offer, despite painful memories of API&#x2F;developer changes and other missteps.  There are loyal users who want Twitter to succeed as an independent entity, one that can chart an independent model for social media.<p>[1] Flattr: favoriting tweets to allocate funds, <a href=""https:&#x2F;&#x2F;blog.flattr.net&#x2F;2013&#x2F;04&#x2F;twitter-is-forcing-us-to-drop-users-ability-to-flattr-creators-by-favoriting-their-tweets&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.flattr.net&#x2F;2013&#x2F;04&#x2F;twitter-is-forcing-us-to-dro...</a><p>[2] Brave: browser metrics to allocate Bitcoin funds, <a href=""https:&#x2F;&#x2F;brave.com&#x2F;blogpost_3.html"" rel=""nofollow"">https:&#x2F;&#x2F;brave.com&#x2F;blogpost_3.html</a><p>[3] Blendle: pay-per-article with instant refunds, <a href=""http:&#x2F;&#x2F;www.niemanlab.org&#x2F;2016&#x2F;03&#x2F;testing-its-pay-per-article-model-in-english-blendle-launches-in-the-united-states-with-20-publishers&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.niemanlab.org&#x2F;2016&#x2F;03&#x2F;testing-its-pay-per-article...</a><p>[4] Patreon, recurring subscriptions to crowdfund creators, <a href=""http:&#x2F;&#x2F;www.billboard.com&#x2F;articles&#x2F;business&#x2F;6502119&#x2F;patreon-two-years-crowdfunding-amanda-palmer"" rel=""nofollow"">http:&#x2F;&#x2F;www.billboard.com&#x2F;articles&#x2F;business&#x2F;6502119&#x2F;patreon-t...</a>"
2016-08-04T22:11:42.000Z,News Feed FYI: Further Reducing Clickbait in Feed,"It&#x27;s unhealthy when they allow it for a long time, benefit from it, and then pull the rug out from under them once they believe it is in their financial best interest to do so.  It&#x27;s exactly the same as your Twitter and Facebook developer examples.<p>Developers were monetizing the Twitter platform until Twitter pulled the rug out.  Facebook has similarly neutered their API to the point where it is nearly useless, and many businesses were crushed in the wake of the changes.  You seem to be saying that it&#x27;s only unhealthy when developers are affected, but that isn&#x27;t the case.  Developers have no &quot;inherent right to succeed on the good graces of another business allowing them to&quot; either,  yet you see that as unhealthy.<p>Publishers and developers are just users of the system, getting crushed when Facebook doesn&#x27;t believe it&#x27;s getting a big enough cut.  I would also argue that Facebook actively blocking the sharing of external content that its users choose to share with each other simply because they aren&#x27;t getting their cut is different than the affected businesses believing they have an &quot;inherent right to succeed on the good graces of another business&quot;.  Businesses that don&#x27;t directly do anything on Facebook will be affected by this, because if their visitors wish to share their content, they will likely attempt to share it through Facebook."
2016-07-29T12:38:27.000Z,Docker Built-In Orchestration Ready for Production: Docker 1.12 Goes GA,"For me, simplicity beats completeness any day of the week.<p>With swarm it takes 3 commands to create a swarm of 2 nodes and raise a simple replicated service(not considering installing swarm and ssh&#x27;ing into the nodes).<p>Now lets talk about kubernetes:<p>With kubernetes I need to edit several configuration files and run 4 commands to start the master, edit more configuration files in each minion run 4 more commands, btw all that without ingress(which swarm has it built in by default, though I hear that it&#x27;s also coming for kubernetes).<p>When all that is done I&#x27;m finally able to start writing my pods and services(with swarm pods=services so it&#x27;s less flexible, but easier to wrap your head around).<p>Writing pods is a challenge on it&#x27;s own the API changed like there was no tomorrow in the past(maybe that will improve in the future) so most configurations you find on the internet are out of date and will simply not run, nearly every field requires a name tag for no obvious reason, exposing services to the rest of your network seems to require a phd in distributed network systems.<p>The documentation is often inconsistent with the current version. The customer&#x2F;community support is non-existent or abrasive. Actually I think this tweet by Kesley Hightower underlines pretty accurately the team attitude towards criticism on the state of the software: <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;kelseyhightower&#x2F;status&#x2F;735511037928038401"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;kelseyhightower&#x2F;status&#x2F;73551103792803840...</a><p>Finally I must say that all those problems that I have encountered were with creating a kubernetes cluster in our company infrastructure, I have not encountered most of those problems using gcloud. If you use google&#x27;s infrastructure kubernetes is just harder than swarm, not unbearably obnoxious. Sadly we don&#x27;t have the option to rent a cloud service for our company.<p>To sum it up, I think it&#x27;s great that docker is becoming a competitor to kubernetes their attitude towards quality always impressed me and thus far I&#x27;m sold on it, but the best outcome of this is that having docker in the cluster managers competition may help raise the bar for every system."
2016-07-09T08:43:55.000Z,Post Ghost Shutdown: An Open Letter to Twitter,"&quot;delete my tweets&quot;.<p>Would you say a Major Influencer owns his public presence? Does Donald Trump own his words? Does J. K. Rowling? (as per the examples given in the letter). I honestly don&#x27;t know.<p><i>We hope you’ll consider the fact that as Twitter has become a dominant platform of communication, verified users with huge follower bases influence the public dialog as much as elected officials, and should be accountable for their public statements on Twitter just as they are for public statements they make anywhere else.</i><p>I find it hard to believe that people agree with a Developer Agreement and Policy such as Twitter&#x27;s. Do you? An &#x27;agreement&#x27; orders you to delete content because it says so, and you agree with it? What if I use the API to flag content I want, then wget the relevant html. Would an API agreement have any say in that? Must all screenshots of deleted tweets be deleted? Articles about deleted tweets? Are the original tweeters forced to deny having tweeted what they did, unless Twitter undeleted theirs tweets? Even if taken to court?<p><i>Sir, did you, or did you not, tweet that you want to acquire jell-o and take a bath in it</i><p><i>Well, just check the API. It says I didn&#x27;t tweet such thing</i><p><i>Case closed</i><p>Should I tweet my orders to my army of nuclear powered androids, and then delete it, so that no proof exists?<p>Furthermore, the API exists in the world. The deleted tweet is a detail of the API and of the twitter infrastructure, that allows deletion. However, the <i>fact</i> that a specific tweet was deleted does not belong to the API, but to the meatspace. Are we to deny that a tweet was deleted? More than that, are we to deny that a specific tweet was sent at a specific date?<p>Maybe the question really is, can a Developer Agreement and Policy change the world?<p>How is this enforceable? It is new both because of Politifacts existence, and because we are letting an API agreement apply where it does not belong."
2016-07-09T06:04:43.000Z,Pinboard Turns Seven,"I switched to Pinboard few months ago when Delicious committed seppuku and made their site completely unusable. First, Delicious just shut down their site for something like a week, then they resurrected some ancient version of their site that looks &amp; behaves like it&#x27;s from 2007. Then they switched to an old domain (del.icio.us) and broke every bookmarklet and plugin that used their API. (I&#x27;m guessing they&#x27;re planning on selling delicious.com domain name, which is worth a lot of money, so they made the switch.)<p>But the worst part is that you can&#x27;t even save a link with all these changes they’ve made! I was getting errors 90% of the time (maybe even 98% but who&#x27;s counting) so it was pointless to even try to save (I gave up after 4 days).<p>Whoever&#x27;s managing Delicious is probably the most incompetent person in tech. Their communication with usersbase has been atrocious. They made only one or two blogposts and remained completely silent on social media (Twitter) during all these disastrous changes. People were unable to get their links and the company remained mum. Number of &quot;F Delicious&quot; posts on Twitter was very high few months back. Their site still doesn&#x27;t work and you can&#x27;t save links (just tried).<p>Anyway, I found Pinboard and have been happy since. RIP Delicious."
2016-06-21T20:22:55.000Z,Image Hosting on Reddit,"Yes. I also think that part of reddit&#x27;s unspoken strategy with this is to get more people using their mobile apps instead of the high-quality third-party alternatives (which allows them to control the reddit experience more tightly, which they want to try to rehabilitate their image away from 4chanLite, and also allows them to get the ad views instead of giving them to third-party devs).<p>reddit is trying to squeeze back some of the juice from the third-party devs who use their API without being too overt about it, because they know the community would revolt. Twitter did the same thing much more loudly when they realized that they were giving away the farm by letting most of their userbase access the content via third-party apps.<p>This works because imgur and other image hosts are already well-integrated into third-party reddit apps, but reddit&#x27;s image hosting isn&#x27;t yet, and they can change things around&#x2F;break it repeatedly until users get annoyed and just move to the official app to try to get a more seamless experience."
2016-06-08T21:10:26.000Z,Coming changes to Apple's App Store,"If you buy Tweetbot today, it will work tomorrow.<p>If Twitter changes the API on Monday, how many versions back should Tweetbot have to support based on a single $2 (or whatever) a few years ago?<p>That&#x27;s the issue. People get pissed there isn&#x27;t perma-support for apps that need constant updates. This is a way to make that more feasible."
2016-06-04T10:44:46.000Z,Third-Party Instagram Apps and Websites Cease to Work,"Without having a raft of data in front of me, you&#x27;d have to assume that many Large Development Shops had an Instagram API token and are being impacted by this change in addition to independent developers.  The irony is that Instagram themselves felt this burn from a 3rd party provider back in the day when Twitter yanked their API access[0]<p>[0]: <a href=""http:&#x2F;&#x2F;techcrunch.com&#x2F;2012&#x2F;07&#x2F;26&#x2F;no-api-for-you-twitter-shuts-off-find-friends-feature-for-instagram&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;techcrunch.com&#x2F;2012&#x2F;07&#x2F;26&#x2F;no-api-for-you-twitter-shut...</a>"
2016-06-04T02:45:46.000Z,Ask HN: How can I better market my JavaScript library,"Hey.  I think I&#x27;m in a pretty good position to give you some feedback.  As background, I maintain a well-received list of high-quality React and Redux tutorials and articles [0], and a catalog of Redux-related libraries, addons, and utilities [1].  I also spend a lot of time hanging out in the Reactiflux chat channels, and apparently currently have the messages posted in Reactiflux since the service moved to Discord [2].  Finally, I wrote the official Redux FAQ page from scratch [3].  So, while I&#x27;m not a public name in the React community like Dan Abramov, I&#x27;m pretty in tune with what&#x27;s going on in the ecosystem.<p>The first thing to consider is that the size of the target market for any &quot;addon&quot;, &quot;mod&quot;, or &quot;extension&quot; for any technology is, by definition, limited to the size of the user base for the original technology.  While Redux is certainly popular, and basically the winner of the &quot;Flux Wars&quot;, you&#x27;re limited to a subset of the JS dev community.<p>A second factor is idiomatic usage.  Any framework ecosystem is going to have an idiomatic way of doing things.  Tutorials will teach those same idioms, training classes will teach those idioms, people will write apps using those idioms, and the vast majority of the userbase is going to share those idioms.  When you start going outside those idioms, fewer people will understand your approach, and fewer people will be interested in something that&#x27;s not &quot;the normal way&quot;.<p>Redux is fairly minimal, so similar to Backbone, there _is_ a fairly active ecosystem with people adding numerous different spins in usage, and additional layers on top, like yours.  However, only a few of those have gained particular traction (like redux-saga).  Idiomatic Redux tends towards explicit and functional, rather than implicit and object-oriented.<p>Third, there are a number of overlapping approaches and implementations being developed by different people, as you can see by browsing my addons catalog.  Two dozen libraries implementing &quot;local&#x2F;component state&quot; in various ways, a dozen more for &quot;subscribe to changes in a slice of state&quot;, and I don&#x27;t know HOW many approaches to handling &quot;side effects&quot;.  Not sure how much of that is people not knowing what else is out there, how much is &quot;Not Invented Here&quot; syndrome, and how much is people just trying to scratch an itch.  So, any one addon in a given category is somewhat competing for mindshare, and only a few will really get attention.<p>Fourth, honestly, a lot of it really is actually getting the attention of the &quot;thought leaders and influencers&quot;.  I signed up for Twitter just so I could actually reply to some of the conversations I saw going on, and when Dan saw that, he tweeted out that I&#x27;d just joined.  Five minutes later I had 30 followers, and 100 by the end of the day.  Small potates as Twitter goes, obviously, but the point is that people followed me just because Dan said I was interesting.  (I&#x27;m not, really :) )  The &quot;Doing Whatever Dan Abramov Tells Me To Do&quot; fake book cover has a bit of truth to it [4].  Now, I&#x27;m not saying go harass Dan, or Ryan Florence, or Christopher Chedeau, but when core members of the React&#x2F;Redux community point at stuff, other people look.  And, that said, Dan does tweet out anything that looks vaguely interesting, so tweeting him a link is a valid approach.<p>So, Radical.  I _do_ actually have Radical listed in my addons catalog, but I have it listed on the &quot;Variations&quot; page [5], which is where I list libraries that are distinctly deviating from the idiomatic Redux approach (and, as you&#x27;ll note, there&#x27;s quite a few of those).  Looking at it, there&#x27;s good points and bad points.<p>Good:<p>- &quot;Reducing boilerplate&quot; is certainly a viable selling point.  One of Redux&#x27;s core principles is that things are explicit rather than implicit, but obviously many people dislike much of the verbosity.  So, that&#x27;s a good focus.<p>- Radical has documentation.  Like, _real_ documentation.  An actual description that tries to give a motivation and explanation, some meaningful code samples, and API docs.  The average JS lib on Github has a short repo one-liner, maybe a couple paragraphs in the README, and a five-line code snippet with very little explanation for where it fits in.  This is decidedly a good thing.<p>Mixed:<p>- Focus on grouping actions and reducers.  Again, there&#x27;s numerous opinions and ideas, and putting those together _is_ one semi-popular approach (per the &quot;Ducks&quot; concept), so it&#x27;s not unheard of.  On the other hand, Dan encourages arbitrary reducers responding to arbitrary actions to prevent coupling, and that&#x27;s considered the idiomatic approach.<p>- Use of Typescript in the lib and the samples.  There are certainly Typescript users in the Redux community, but ES6 is the common approach.<p>Bad:<p>- Use of an OOP approach to managing things.  I know it&#x27;s still dispatching actions and such and updating its own slice of the store, but the Redux community is heavily influenced by Functional Programming, and as such an OOP approach is less likely to gain interest.<p>- The fact that you do need to hook the generated reducer into the store isn&#x27;t as clearly called out as I&#x27;d like to see.<p>- Lack of a full-blown example written using Radical.  Again, the fact that you have actual code samples is good, but if this is such a big improvement, a &quot;real&quot; app example would go a long way to show that.<p>- Both the docs and the source are in single files.  Both might be easier to read through if they were split into smaller pieces.<p>- There&#x27;s a number of libraries that look like they do something fairly similar.  The list at [6] has many that are more component-oriented, but there&#x27;s some overlap.  The list at [5] also has some similar options.<p>Overall, it looks like a well-written library, with a valid use case, but the fact that it&#x27;s a non-idiomatic approach means there won&#x27;t be as much interest, and therefore fewer users _and_ fewer people willing to pass it along.<p>For what it&#x27;s worth, I hang out in the Reactiflux chat channels [7] evenings EST if you&#x27;d like to drop in and talk about it.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;react-redux-links</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links</a><p>[2] <a href=""http:&#x2F;&#x2F;pipend.github.io&#x2F;reactiflux-dashboard&#x2F;#&#x2F;fame?ago=1+year"" rel=""nofollow"">http:&#x2F;&#x2F;pipend.github.io&#x2F;reactiflux-dashboard&#x2F;#&#x2F;fame?ago=1+ye...</a><p>[3] <a href=""http:&#x2F;&#x2F;redux.js.org&#x2F;docs&#x2F;FAQ.html"" rel=""nofollow"">http:&#x2F;&#x2F;redux.js.org&#x2F;docs&#x2F;FAQ.html</a><p>[4] <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;ThePracticalDev&#x2F;status&#x2F;718462272335704064"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;ThePracticalDev&#x2F;status&#x2F;71846227233570406...</a><p>[5] <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links&#x2F;blob&#x2F;master&#x2F;variations.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links&#x2F;blob&#x2F;ma...</a><p>[6] <a href=""https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links&#x2F;blob&#x2F;master&#x2F;component-state.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;markerikson&#x2F;redux-ecosystem-links&#x2F;blob&#x2F;ma...</a><p>[7] <a href=""https:&#x2F;&#x2F;www.reactiflux.com"" rel=""nofollow"">https:&#x2F;&#x2F;www.reactiflux.com</a>"
2016-06-02T15:44:01.000Z,Twitter Is Betting Everything on Jack Dorsey. Will It Work?,"We&#x27;re saying the same thing here, in premise.  There is some value to be gained from a development ecosystem, undeniably.<p>The difference between what I&#x27;m saying is that the sheer magnitude of <i>unmonetized</i> Twitter Web users makes whatever small fish monetization increasing Twitter use with their integration look like chump change.<p>Now, there are several big players such as Periscope, Vine, Meerkat, that could have benefitted Twitter greatly from offering a development ecosystem.   But there are two reasons why they wouldn&#x27;t:<p>1) Twitter, like Facebook, is big enough - or, more accurately, <i>are expected to be big enough</i> - to be in the &quot;acquirer&quot; phase where they derive more value <i>competing against</i> and acquiring than <i>playing with</i> these popular new services.   
However, we&#x27;ve seen much of the industry being overvalued and some of us believe a small company can do more, faster, on a technical level than a big company due to bureaucracy, so expectations aren&#x27;t always matching up to reality.<p>Vine and Periscope were eventually acquired by Twitter.  And Meerkat was forced to pivot.<p>2) There are cost-benefit analyses that neither you, nor I, are privy to which found developing and maintaining an API by relatively highly-paid employees not worth the benefits seen by its integration by other companies.<p>&gt; Many startups or businesses in general look elsewhere for the information that is available on Twitter.<p>Are you sure of this?   Businesses and other startups alike <i>still</i> use Twitter for <i>engagement</i>, and there is great information to be pulled from Twitter, assuming they have the ability to act on the metrics available."
2016-06-02T14:54:42.000Z,Twitter Is Betting Everything on Jack Dorsey. Will It Work?,"Parent does have some validity related to their API...and how they&#x27;ve scorned developers - but the API, and all of Developers in the &quot;Twitter Sphere&quot;, are such a small portion of what Twitter &quot;does&quot; it would be out of scope for their investors to bank on TwitterAPI to reach projections.<p>I don&#x27;t think Dorsey is as bad as you claim, but this example does reflect an (IMO) systemic problem of treating the CEO of <i>large</i> companies (~N &gt; 50) as a superhero when institutional and foundational changes would really be the hero of the story."
2016-05-30T13:27:07.000Z,Ask HN: Advice needed regarding TDD from programmers,"I really enjoy TDD when I get into the rhythm, but I&#x27;ve found that setting up the infrastructure can be a real barrier, especially for a language&#x2F;framework that I&#x27;ve never worked in.<p>However, I have written code without it and I frequently find that when I do so, I very quickly regret it. Either I get confused about what precisely I&#x27;m doing or I end up having to write tests after-the-fact and it is much harder. The barrier is worth overcoming. How?<p>1) Find good tutorials and <i>work</i> through them.<p>A lot of people say that the best way to learn something is just to dive in and build something. I disagree, at least when that thing is new to you. I find it is much better to find a tutorial that guides you through building something the first time. It is worth asking around on twitter or on a relevant subreddit for this. Then, don&#x27;t just read--actually work through at least a good chunk of it. Once you&#x27;ve done that you have some code you can look back on when you are looking for the basics of how to set up your tests.<p>2) Don&#x27;t worry about mocking as much in the beginning.<p>The purpose of mocking is to avoid having the test take a long time to run due to the machine spending a bunch of time working on other things. Given that you are waiting on the machine when you run your test, this is actually meaningful. So, mocking intelligently can be a win if you it saves you that time. However, it also has the downsides that it can take a lot longer to write the test and it can make your test more brittle. For that reason I find it often makes sense not to mock and just write a bunch of tests that do in fact (for example) hit the database. This is especially a good idea with a new language where trying to use 7 new libraries at once (<i>cough</i> javascript <i>cough cough</i>) is going to lead to confusion.<p>Also note that TDD doesn&#x27;t really work if the code is already written because doing fine-grained tests for code that is already written is really hard. It is better to do interface&#x2F;API tests and put off unit testing until you are willing to refactor the code.<p>Note also that there are some tasks where your tests are going to be more like infrastructure tests and your changes won&#x27;t be quite as granular as TDD doctrine dictates. That is something you have to accept when everything is coming together, because that is the realm of integration tests.<p>There is a tutorial I&#x27;ve written which aims to teach this alongside teaching configuration management, though it is my first tutorial. I would love critiques of the pedagogy and example code. <a href=""https:&#x2F;&#x2F;amfarrell.com&#x2F;saltstack-from-scratch&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;amfarrell.com&#x2F;saltstack-from-scratch&#x2F;</a>"
2016-05-03T19:38:59.000Z,Critical Security Release for GitLab 8.2 through 8.7,"&gt; Virtually every Linux distribution anyone would use to host a service such as Sandstorm will include a package manager.<p>Yes, but:<p>* Most of them ship on a 6-month or even 2-year release cycle whereas Sandstorm updates every week.<p>* Most of them will not accept a package that wants to self-containerize with its own dependencies, which means Sandstorm would instead have to test against every different distro&#x27;s dependency packages every week, whereas with self-containerization we only depend on the Linux kernel API -- which is insanely stable.<p>* If we publish the packages from our own repo, we&#x27;re back to square one: how does the user get the signing key, if not from HTTPS download?<p>* Sandstorm actually <i>has</i> a PGP-verified install option: <a href=""https:&#x2F;&#x2F;docs.sandstorm.io&#x2F;en&#x2F;latest&#x2F;install&#x2F;#option-3-pgp-verified-install"" rel=""nofollow"">https:&#x2F;&#x2F;docs.sandstorm.io&#x2F;en&#x2F;latest&#x2F;install&#x2F;#option-3-pgp-ve...</a><p>* You should probably be installing Sandstorm in its own VM anyway.<p>I&#x27;m certainly not saying curl|bash is perfect. There are trade-offs. For now this is the trade-off that makes the most sense for us. Later on, maybe something else will make sense.<p>&gt; If they think that will ever be acceptable in an enterprise environment where change management is important, they&#x27;re delusional.<p>We&#x27;ve never had an enterprise customer comment on this (other than requesting the PGP-verified option, which we implemented). The vast majority of complaints come from HN, Twitter, and Reddit. ::shrug::"
2016-05-02T00:52:49.000Z,The Feed Is Dying,"But making the algorithmic feed the default, alone, is enough to kill the platform. For the mere fact of nudging, and human laziness. It will just make the shit rise to the top, instead of the hidden gems that make Twitter golden. Twitter has to be one of the most poorly run tech companies, outside of Yahoo. They changed their API token limits, and destroyed 3rd party clients. They bought TweetDeck and then utterly destroyed it.<p>Live data is their product, but they bury it with stupid business decisions; utterly baffling. They tout MAUs during their conference calls (which they always miss), but that has nothing to do with their product. Their product has some of the top content providers, providing unique content in real time. Facebook can&#x27;t say that, no other platform sans Snapchat can say that. Facebook has figured this out and that&#x27;s why they are rolling out offerings like Paper. Twitter doesn&#x27;t get it."
2016-04-29T21:40:43.000Z,GNU LibreJS,"No, people &#x27;should&#x27; (according to this view) be emailing Google and asking them to release their client webapp as free software, after which they can continue using all the AJAX they want.  If by some miracle they agreed, it would give users a number of advantages including:<p>- Making customization (Greasemonkey etc.) easier by removing the need for customization tools to muddle through JS minification&#x2F;obfuscation.  While in practice various tools today are doing a good job customizing Gmail anyway, I imagine they could make more changes and more invasive changes with access to the source.<p>- Special case: making client-side encryption browser extensions safe.  Right now they are fundamentally unsafe (if they hook into the webapp rather than providing a separate interface), because there is nothing stopping Google from quietly adding some JS code to grab and report the plaintext before it gets encrypted.  <i>By itself</i>, releasing the webapp&#x27;s source wouldn&#x27;t fix this because you would still have to trust Google&#x27;s servers to send the same JS to everyone - but a browser extension could be enhanced to hash the page JS and refuse to operate with non-approved hashes, combined with a process where someone outside of Google manually approves changes as they are released, providing at least cursory review.  Nobody wants to review obfuscated code.<p>- Allowing users to detect and remove any other forms of tracking&#x2F;deanonymization that might be present such as mouse cursor or keystroke recording, canvas fingerprinting, etc., more reliably than with the sorts of purely technical measures that could be implemented in a browser (since these things are hard to block without preventing the app from doing its job).<p>- The kicker: Allowing the same webapp to be used with a different backend, so if you don&#x27;t want Google to have access to your email, or don&#x27;t trust them not to cripple functionality in the future, or need a lot of storage and can get it cheaper elsewhere, or are in China and have an (intentionally) shitty censored connection to the international internet, ... the list goes on... then you can self-host it, without losing the familiar interface.  You can also host your own clone service for others to use, perhaps forking off the original code when Google makes an unpopular change, as they are wont to do.  Of course this requires someone to actually do the technical work of writing a suitable new backend for the client to talk to, and in the case of a fork to maintain a huge codebase (compare Palemoon and such), but without free software you can&#x27;t even get started (legally).<p>Of course, Google might not be too happy about that last point.  But rms&#x27;s ideology has never been pragmatic about &#x27;business needs&#x27; and such.  It&#x27;s concerned only for the users.<p>Twitter is a somewhat less traditional case: the case for free software is either less applicable or far more, depending on how strictly you define &quot;free software&quot;.  This is because unlike Gmail, which provides decent support for third party clients, Twitter has long cracked down on them in various arbitrary ways and enforced strict rules that prevent them from innovating on UI.  Since one of the informally-defined &#x27;freedoms&#x27; of free software is the ability to modify it, it should be possible to morph the official browser client into anything you want - even if that means keeping just the API access layer and building an entirely new UI on top - and continue to use it freely.  Thus if Twitter changed their tune and actually dedicated themselves to these freedoms, that would imply starting to tolerate access by arbitrary client software, and users would hugely benefit.  However, if for some reason Twitter were to hypothetically release their client under a free license - even under the GPL - while otherwise continuing with their current policies, it wouldn&#x27;t affect the situation much.  The license would at least allow third parties to check the source for Twitter&#x27;s own API key and copy it into their own apps without exposing themselves to legal liability related to copyright&#x2F;DMCA.  But Twitter could still try to identify and block rogue clients, sue under the CFAA (&#x27;hacking&#x27; statute) for unauthorized access, ban the personal accounts of creators of rogue clients, etc."
2016-04-09T01:45:27.000Z,Facebook quietly deprecated their Python/Ruby libraries for Instagram API,"Instagram is by far one of the easier APIs to use (among the social media services)...I&#x27;ve never used a client library for it, in Python nor Ruby.<p>In Ruby, the best API wrappers (or at least, the ones I used back in the day) for Twitter and Facebook are maintained independently:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;sferik&#x2F;twitter"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;sferik&#x2F;twitter</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;arsduo&#x2F;koala"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;arsduo&#x2F;koala</a><p>The koala gem for Facebook is a godsend...the FB API and models are not trivial...and that&#x27;s before trying to keep up with the many and frequent changes to the API spec. It&#x27;s hard to imagine that FB would put the resources into continually maintaining that gem if it were an official gem...not when (I assume) so many more of their API consumers use iOS&#x2F;JS&#x2F;Android."
2016-04-07T18:14:58.000Z,"Official Reddit mobile apps (Android, iOS)","I wonder how the ads will look like after users 3 months of reddit gold expires. I also wonder if the 3rd party reddit clients will also see ads, or we&#x27;ll see a drastic API change to bring everyone to the official client and gold subscription instead. Hope this won&#x27;t turn into Twitter API woes."
2016-04-07T00:24:59.000Z,"Apply HN: Hostable, Reskinnable, Domainable, Searchable, Forum Software","Ouch!  $100 per month minimum plan... for me to get started building my replacement for local government that is a high barrier to entry.  I suppose at least I can host it myself though, it is very impressive software.<p>I guess what I want is to take over all the branches of the government and replace them with forum software.  But not the forum software we have seen today, an as yet unrealised possibility of what forum software could be!<p>So thus far having looked at Discourse how does it implement my ideas:<p>1) Nope, tagging in the HN style doesn&#x27;t exists AFAIK.<p>2) Yes, mobile<p>3) Yes, Skinnable<p>4) Hosted&#x2F;Can create your own DNS&#x2F;Community&#x2F;Rules&#x2F;etc<p>5, 6, 7) It seems more focused on finding solutions to specific problems (I&#x27;m using the twitter API does it do X) rather than having a broad discussion and them being able to select answers from that discussion to refine into a crowd sourcing campaign.<p>8) Grouping of threads by tag and different tag types.<p>9) Discourse have a business model that&#x27;s pretty sound. Charge for hosting.<p>10) Directory of useful people on each forum who can be paid to do stuff...<p>11) How are we discussing these YC programs - I think there is a lot of room for improvement being able to tag posts to the top of the thread and give a TLDR of the salient points in a thread.<p>Maybe people can summarise questions and break things down into pieces that can be answered in a more coherent package.<p>If deemed suitable by the community the thread could then be acted on through a crowd sourcing campaign.<p>Imagine if we were to organise society with a piece of forum software how would it look and what would people get in return for helping their community - probably more voting rights and better ability to change things&#x2F;make a difference."
2016-03-29T13:50:55.000Z,My Heroic and Lazy Stand Against IFTTT,"&quot;I’ve built for hundreds of platforms and any changes to those platforms by default suck. At IFTTT, we&#x27;ve been on the receiving end of platform changes too many times to count.&quot;<p>Isn&#x27;t that the entire premise of your service, providing this glue? Yeah, it&#x27;s painful work. That&#x27;s why people like your service! Sure, it would be great for you if the other services would do some of the work. But I&#x27;m guessing that you would not go along with Twitter requesting all intellectual property rights to your integration code for the right to use their API. Why would you request it of the services that integrate with you?<p>But the biggest problem here is that you changed the game. You created and maintained the Pinboard integration. You should own up to not wanting to maintain it. The message you sent to Pinboard users about your decision was... &quot;misleading&quot; is the nicest way to put it."
2016-03-17T07:36:51.000Z,Twitter shut down Emojitracker's access,"I was responding to &quot;Big companies should not have the ability to destroy small businesses just because they changed their mind about something.&quot; as a general statement, since it was phrased in a general way.<p>&gt; It&#x27;s understood that a company could stop offering some data that a company is dependent on altogether, but I think it&#x27;s substantially less likely than a company threatening to terminate access to data that already exists (which is what happened here).<p>I&#x27;m not sure sure.  There&#x27;s regular griping on HN about Google cancelling services, even though they are generally beta services, because people expect them to offered.  Some of these people griping are people that built products on Google APIs that were discontinued.<p>&gt; Of course it&#x27;s ideal to have a contract with a company that guarantees access to the data stream for a reasonable chunk of time, but the reality is that unless you&#x27;re already a big shot, platform vendors like Twitter aren&#x27;t going to give you the time of day for something like that.<p>A contract?  Maybe not.  But if they have a clearly defined deprecation policy, that&#x27;s a start.  And if you are paying them, well that&#x27;s a lot better, since they are incentivized to keep it going because of your (and hopefully others&#x27;) money.<p>As for the rest (access to public API), I&#x27;m not really interested in arguing it, as we likely agree more than we disagree.  :)  The only caveat is that direct consumers of the API often don&#x27;t behave like regular public users, and that may put a strain on the system and degrade performance for everyone, causing real problems and the need to spend real money to fix if you still want to allow unfettered public use."
2016-03-17T02:53:20.000Z,Twitter shut down Emojitracker's access,"&gt;Getting free access when it costs the other side (in managing access, serving requests, handling support, etc, no matter how small) is not something I would feel comfortable basing a business off of.<p>The difference is that the person is not getting anything that&#x27;s not already offered to the general public. It&#x27;s unfair to use the court system to enforce a company&#x27;s exclusionary political decision that &quot;everyone can access our website EXCEPT YOU&quot;, at least barring any actual contractual terms (not generic Terms of Use). The change I propose would not force anyone to accommodate a certain API change or provide any special functionality. It would simply prevent non-neutral access rules from being enforced via legal vectors.<p>Twitter would still be able to charge for access to the APIs they charge for now. They&#x27;d simply be unable to use the court system to compel someone to stop accessing the data that they have no copyright interest in and which they serve up to the world for free. I&#x27;m not sure if Twitter <i>has</i> tried to do this yet, but it&#x27;s the normal step companies take once a consumer develops the ability to evade their IP blocks.<p>To be honest, the law already <i>can</i> be interpreted this way. The problem is that it often isn&#x27;t. Companies have been able to convince non-technical judges that concepts like trespass to chattels are applicable any time someone is talking to their server. We need language in the law that will clarify the matter to prevent big companies from squashing small innovators that they find inconvenient or threatening instead of leaving it up to judge roulette."
2016-03-16T22:08:18.000Z,Twitter shut down Emojitracker's access,"This is just... wow. The guy spends three years developing a product on Twitter&#x27;s platform and they just kill it off with one e-mail? It&#x27;s fair enough if they need to change their API policy, but at the very least they could have acknowledged all the work that he&#x27;s done and found a way to help him and the other developers in the same position to make the transition as painlessly as possible. Not... whatever corporate BS this was.<p>Given how much Twitter is struggling already, is this really the time to be alienating more of its community?<p>Personally, I&#x27;ve had a really nifty side project that I&#x27;ve been working on since last year that I wanted to launch on Twitter&#x27;s platform, but as of a month ago I&#x27;ve all but given up on actively developing it. All the people that I know on Twitter with whom I wanted to share it have either left already, or are only sticking around because as-of-yet there&#x27;s nowhere else to go that does what Twitter does.<p>So I&#x27;m curious to hear some perspectives on this: clearly the direction that Twitter has taken is making a lot of devs unhappy, but what would be the right thing to do? What sort of API access would people ideally want to see it provide? What would be the ideal best-case scenario necessary for the devs to want to start coming back and putting their time into building the ecosystem?"
2016-02-24T00:10:23.000Z,Twitter launches Fabric mobile app for developers,"Huh. That article says basically what I said: &quot;The payoff for Twitter will come if it can get developers to embrace MoPub, its advertising product, because it gets a cut of any ad revenue.&quot;<p>In which case, I&#x27;d be kinda skeptical. If the other tools are mainly loss-leaders for advertising, then Twitter will be prone to limiting or canceling them when the internal politics change.<p>Which is exactly what they did with API access previously: they cost money to operate and weren&#x27;t for the moment seen as directly beneficial, so what was previously going to be free forever was suddenly cut back."
2016-02-17T14:57:29.000Z,The New Adobe ColdFusion,"There&#x27;s still a few institutions locked in by &quot;it&#x27;s working, why change it&quot; and &quot;it&#x27;s too much code to rewrite&quot;.<p>I&#x27;ve used adobe cf10, and couldn&#x27;t get cfbuilder to install on a mac, so no debugger, which is just terrible.  I haven&#x27;t used railo because our servers were configured for us.  If you&#x27;re still on CF10, you&#x27;re going to have to do CFML occasionally because CFScript is not feature complete with CFML.  I think this was fixed with CF11.<p>As for their sql support, I tried the ORM and it&#x27;s nothing to write home about.  The CFML sql support is slightly friendlier than php&#x27;s prepared statements, but php&#x27;s prepared statements enable reuse where as cfml&#x27;s prepared statements are more copy&#x2F;paste reuse.<p>The whole &quot;tags look like html&quot; looks terrible to me and seems like a bad idea.  Occasionally you have to drop into java because Coldfusion CAN&#x27;T do something.  (Try parsing a date from the Twitter API).<p>It should totally die."
2016-02-12T16:28:25.000Z,"Twitter, to Save Itself, Must Scale Back World-Swallowing Ambitions","<i>&gt; maybe your interests have changed, so when you check your timeline its like listening to those old mp3&#x27;s from the 90&#x27;s that you still keep around (not your current tastes, and terrible encoding rates), so now you need to curate a new timeline, and that&#x27;s a lot of work, and where to start?!?</i><p>Lists could be used as forkable alternate universes, but Twitter does not provide the tools.<p>- keep high and low frequency users in separate or topical lists, keeping in mind that people may change tweet frequency<p>- create annual (past you, future you) lists and fork  each year, removing people or topics that are no longer aligned<p>Instead of Twitter black box curation that cannot possibly serve the millions of niche threads and communities, Twitter could enable 3rd-party analytics for refactoring lists&#x2F;streams by metrics that are under the control of users.  Even the curation signals could be crowd-sourced on Twitter itself, with appropriate API support.<p>Twitter could have an API competition to re-engage 3rd parties.  Use the raw datasets already available to academia and identify  new signals and APIs to enable client side, human &quot;intelligence augmentation&quot;  innovation in curation analytics.  As a side effect, curation will provide new signals for targeting."
2016-02-10T22:16:22.000Z,Twitter’s User Growth Goes Nowhere as It Meets Revenue Expectations of $710M,"I know there are theoretical alternatives to Twitter, but until the appropriate userbase is out there then they&#x27;re not truly viable alternatives. I know that&#x27;s a Catch-22, or a paradox, or whatever you want to call it, but that&#x27;s the sad reality for those of us that would like to leave the platform. So, in lieu of leaving, here are the features I feel like would help Twitter retain me as a user:<p>1. Bring back custom apps! Twitter is a <i>service</i>, and I want control over how I access that service. This would also take such a huge burden off of Twitter: don&#x27;t care about the super bowl? Use an app that lets you filter hashtags, piece of cake! So many features can be implemented on top of a service, with no extra effort from Twitter. I get that this could  conceivably enable filtering timeline ads, but seriously they can just pull API keys for apps that do that, it&#x27;s a non-issue.<p>2. Let me subscribe to ideas, not just people. If I <i>do</i> care about the super bowl, maybe let me turn on push notifications for tweets about it from people within my network for whom I otherwise do not have push notifications enabled.<p>3. Make chronological timelines a setting. Not an option, not a tab, a semi-permanently enabled <i>setting</i>. It&#x27;s the most annoying thing about Facebook right now, having to explicitly re-enable chronological timelines every week or so when Facebook has &quot;forgotten&quot;. As it stands, even that much is an improvement over Twitter&#x27;s proposed always-on non-chronological timeline.<p>4. Don&#x27;t nanny me unless I ask you to. There have been reports that Twitter has blocked notifications for @replied tweets because Twitter suspected the tweet would be offensive. I get that harassment is an issue and that Twitter was trying to be proactive, but make it an option. The user in this case was failing to be notified of tweets they <i>wanted</i> to see, and had no way to disable the &quot;feature&quot;.<p>5. Inconsistency foments distrust. If you want that blue check mark to mean something then you&#x27;d best lay out a solid and strict process for them. I&#x27;ve seen at least one person have theirs removed over unsubstantiated claims, yet more egregious offenders have kept theirs throughout. I&#x27;ve seen others go through the process for acquire their blue checks and they always seem to have different requirements. Some reported having to change their profile name to their real name, others said they had to put their actual photo on their profile."
2016-01-13T11:57:54.000Z,50 terms most predictive of a submission making it to the front page,"Also, 100 terms most predictive of a submission <i>not</i> making it to the front page:<p><pre><code>  -0.335386489547     startup
  -0.331723905544     2015
  -0.321593118669     app
  -0.306937335575     your
  -0.305739531214     how to
  -0.275438550569     this
  -0.261565592652     business
  -0.252649164518     product
  -0.250614203448     mobile
  -0.236041160710     marketing
  -0.227196421746     top
  -0.208139598304     with
  -0.206031814574     5
  -0.203087091676     ios
  -0.202457032685     design
  -0.201021718651     watch
  -0.200267475193     startups
  -0.197466134506     ask
  -0.196357335391     or
  -0.192562683469     10
  -0.191253124976     best
  -0.190867070325     ask hn
  -0.187721441778     cloud
  -0.187394374070     android
  -0.186461809237     smart
  -0.184024063073     you
  -0.183827664018     tips
  -0.182653896122     growth
  -0.181372850037     for
  -0.178198606780     could
  -0.162472422631     blog
  -0.162207059285     java
  -0.160644447613     development
  -0.159487418681     social
  -0.157294135483     should
  -0.156980003088     bitcoin
  -0.150609220130     iphone
  -0.148979317953     tech
  -0.148345714371     testing
  -0.147454333035     change
  -0.145491827860     list
  -0.145485290331     to
  -0.144015642286     3
  -0.143708682318     robot
  -0.142186986230     tools
  -0.140812013948     twitter
  -0.140696100278     rails
  -0.140548788801     software
  -0.138527298008     future
  -0.138172121531     good
  -0.138015521103     internet
  -0.137281744329     facebook
  -0.136342150691     security
  -0.134144777413     content
  -0.133091842596     awesome
  -0.133049592053     angularjs
  -0.133019163138     create
  -0.131147662198     meet
  -0.128568740027     live
  -0.125766592272     wordpress
  -0.125681496867     star
  -0.125433963958     here&#x27;s
  -0.124980970020     test
  -0.123513256155     day
  -0.123227292738     podcast
  -0.123085547655     feedback
  -0.122558159240     uber
  -0.122365526765     bill
  -0.121846476127     things
  -0.121766619177     online
  -0.121674711692     entrepreneurs
  -0.121271063379     vr
  -0.120835224059     devops
  -0.120704156113     website
  -0.120668008266     resources
  -0.119873591378     tutorial
  -0.119600975052     6
  -0.119263351612     most
  -0.118987167145     api
  -0.118767754130     apps
  -0.118683692890     digital
  -0.116745925093     will
  -0.116477896000     data
  -0.116317401689     needs
  -0.116223838757     need
  -0.115050697065     market
  -0.114878154258     3d
  -0.114105916526     more
  -0.111918004178     help
  -0.111764422735     apple
  -0.111326594562     new
  -0.110914386417     year
  -0.110475338587     customer
  -0.109564041456     technology
  -0.109468606136     iot
  -0.109381535069     application
  -0.109146062602     4
  -0.108483540034     solution
  -0.108171407112     music
  -0.107249340464     drone</code></pre>"
2016-01-12T00:46:22.000Z,Google is Forcing Routebuilder to Shut Down,"Sorry, but if we just look at the Google Maps API as an example, it would be a HUGE stretch to consider them a common carrier.  The mapping data industry has huge competition right now.  We&#x27;re not even in the same realm of consideration for &quot;regulation&quot; of an API.  That is ridiculous.<p>The simple reality is that Google can control in any way shape or form how their API is consumed.  Like I said, if you don&#x27;t like that, <i>don&#x27;t build your business on the API.</i>  You do not have a <i>right</i> to anyone&#x27;s API, regardless of how important the data is to your pet project or unicorn idea.<p>This same argument comes up when the Twitter API consumers get all up in arms because the business they built solely on top of Twitter&#x27;s platform is all the sudden deemed irrelevant because of API access changes or terms of service changes.  Tough tootles!  And guess what, your API scraping twitter feed re-display iOS app is not innovation!<p>I personally think that &quot;free APIs&quot; are great, but if you don&#x27;t have it in your business plan to share a portion of your revenue with external API data providers when they eventually ask, then you are going to get yourself in the position that the OP did."
2016-01-06T19:25:12.000Z,How the Daily Fantasy Sports Industry Turns Fans into Suckers,You don&#x27;t need &quot;up to the minute&quot; information though. Data can  be days old and still be viable as long as you&#x27;re using twitter&#x27;s streaming API to get injury updates from one of each 32 teams beat writers as they occur. If I&#x27;m setting an NFL lineup on Friday I know the stats haven&#x27;t had an opportunity to change in 6 days.
2016-01-06T05:04:00.000Z,"Sun, Oracle, Android, Google, Mozilla and JDK Copyleft FUD","This entire thing may be confusing to a lot of people, as many are already confused by what the entire Android court case was about. The confusion is not accidental. Google&#x27;s very extensive PR machine has put in <i>a lot</i> of resources to make sure people are confused (what Oracle puts into lawyers, Google puts into PR). But just to lay down a few facts:<p>Since 2006&#x2F;7, Java has been available under two licenses: commercial and open-source. The commercial license allows free implementation of the Java APIs and has a full patent grant, but requires conformance with the Java TCK (Technology Compatibility Kit) <i>and</i> requires payment if used in mobile devices (this was Java&#x27;s main revenue stream for a long time). It is also possible to license the JDK source from Oracle under the commercial license for a fee. The same JDK is also released under the GPL. This license is completely free and unencumbered (the GPL itself prohibits any restrictions). It does not require compatibility (unless you want to call the result &quot;Java&quot;), and has no field of use restrictions. It also has a full (implicit) patent grant. As this article notes, OpenJDK&#x27;s copyleft is not viral either (certainly not more than Linux): applications and libraries running on top of it are unaffected due to the &quot;classpath exception&quot;. You can do <i>whatever you like</i> with Java when you use it under the terms of its open-source license: use the implementation, use just the APIs and implement it yourself, use the whole thing or just small portion, pass the TCK, not pass the TCK, fork it or not. You are even allowed to use it to implement .NET.<p>Google has had both of these options for licensing Java (at least since May 2007, but that was still before Android was released). Until very recently, Google chose neither. They couldn&#x27;t reach an agreement with Sun on the fee for the first license, and didn&#x27;t like the second (possibly because they feared that phone manufacturers would reject a GPL runtime, classpath exception or no). Instead, they chose to argue in court that the APIs are not Oracle&#x27;s to license[1].<p>What has changed now? Perhaps Google realized that given Android&#x27;s success, phone vendors would swallow whatever license Google gives them. In any event this is a win for everyone: Google wins because they will need to spend less resources on maintaining Android, Oracle wins because Java will now be on Android, and Android and Java developers win because they&#x27;ll have a better runtime and greater compatibility. This is contingent, however, on Google not forking OpenJDK too much beyond compatibility; the license does allow them to do so.<p>Yes, the mainline OpenJDK project is steered by the JCP (Google, Intel, Twitter, and IBM are all members) and Oracle does have veto power, but that is just the project governance. Anyone is free to fork OpenJDK, as long as they don&#x27;t call the result Java (unless they fork and choose to pass the TCK). The situation is no different from other large open-source projects.<p>[1]: I have no opinion on whether or not Google&#x27;s actions were legally justified (I do have an opinion about their ethics), but I do know that unlike  Google&#x27;s PR line, the ruling has little or no effect on the industry. Google&#x27;s actions with Java&#x27;s APIs were quite different from any other API implementation that I know of. Also, the ruling does not apply to web APIs. See discussion here: <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=10811011"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=10811011</a>."
2015-12-23T22:41:21.000Z,Why Spinlocks Are Bad On iOS,"(rewritten after looking up Linux&#x27;s adaptive mutex)<p>Assuming you mean something like <a href=""http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;25168942&#x2F;582"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;25168942&#x2F;582</a>, you basically need a full mutex anyway, so I&#x27;m not sure why you wouldn&#x27;t just use a mutex directly. I don&#x27;t think you can really implement this adaptive mutex in userland because you can&#x27;t just use a spinlock + a mutex (you&#x27;d have to lock the mutex every time anyway, which defeats the point of having the spinlock) and syscalls are not considered public API (the kernel is allowed to change syscalls between versions, libc&#x2F;libsystem is the only public API for them).<p>FWIW pthread mutexes were sped up 2-2.5x in &quot;new OSs&quot; to compensate for spinlocks being illegal (<a href=""https:&#x2F;&#x2F;twitter.com&#x2F;catfish_man&#x2F;status&#x2F;676852111527706624"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;catfish_man&#x2F;status&#x2F;676852111527706624</a>)."
2015-12-18T22:59:47.000Z,Show HN: Open Hunt – an open and community-run alternative to Product Hunt,"I love this!  &quot;Login unsuccessful. Something went wrong: Error: api_calls exceeding plan authorized calls&quot; when I went to log in with Twitter.  Good problem for you to have, I look forward to you working this out so I can participate.<p>Honestly, I only signed up for Twitter to join Product Hunt.  That was a huge disappointment when I found out that having an account didn&#x27;t mean anything.  This will be a pleasant change, it&#x27;s about time."
2015-12-09T01:31:16.000Z,Twitter is monkeying with the order of tweets in timelines,"That Twitter is employing 6,000 people is a mystery to me. That&#x27;s what we get with that many employees: Instead of becoming as sturdy and reliable as an API and a protocol, there&#x27;s always several subgroups who aren&#x27;t submerged by day-to-day work and who end up proposing a disruptive change. After much fighting, one of them wins.<p>The other way is Snapchat: 1-2 employees, probably lots of profits, period."
2015-12-01T09:21:19.000Z,Why FPGA manufacturers keep their bitstream formats secret,"I always assumed it was because, when you make an interface&#x2F;API public (by documenting it and offering it to your customers) you have a professional obligation to keep it reasonably stable. People get understandably upset when APIs for things like twitter and facebook keep changing under them, making things that worked before stop working.<p>Making the bitstream format a public API would make it harder for them to change&#x2F;update&#x2F;improve it without making themselves look like assholes for breaking third party software."
2015-11-28T01:52:41.000Z,Telegram stalking,"I&#x27;ve been more and more concerned about Telegram recently. Here&#x27;s a mail I sent them recently covering most of these concerns. Naturally, I got no response.<p>&quot;
Hey there Telegram!<p>I have been an early Telegram user since late 2013 and was highly optimistic that it would become a perfect messenger.
It&#x27;s quite perfect from a UX point of view – which is important to gain users – but other things aren&#x27;t that perfect.<p>You claim to be open and secure, but taking a closer look that doesn&#x27;t seem to be true. Your API is open and the client apps were released as open source, but your server-side code remains closed source. It&#x27;s been 2 years now and you still haven&#x27;t open sourced the server. Do you still plan to release it? You say that you will eventually add paid options, which doesn&#x27;t seem to be compatible to open-sourcing the server.<p>Of course one would have to trust you that you actually use that version of the server on your side, which leads to the second issue that concerns me. You advertise being secure a lot, but default chats don&#x27;t use end-to-end encryption and secure chats aren&#x27;t even possible for group chats. Even for encrypted chats a bunch of concerns were raised by much respected people in the security community, I&#x27;m sure you are aware of that and will not brag about that here.<p>I opened an issue on the Android app&#x27;s issue tracker in early 2014 about end-to-end encryption (<a href=""https:&#x2F;&#x2F;archive.is&#x2F;9SfYt"" rel=""nofollow"">https:&#x2F;&#x2F;archive.is&#x2F;9SfYt</a>). There have been dozens of comments on that issue, discussing how it could be implemented but there was no official reply by the Android maintainer or any official Telegram account, despite numerous attempts.<p>The Android app&#x27;s maintainer also doesn&#x27;t seem to understand version control &#x2F; git and commits tons of changes in a single commit and also doesn&#x27;t use tags for versioning. He also doesn&#x27;t merge pull requests but rather includes them in his large commits (thus also removing all attribution). There are also binary blobs in the source code and there are various licensing issues. All these issues have been raised but the Android maintainer doesn&#x27;t seem to care about it.<p>The issue tracker for that app has now been closed by the maintainer and there was no explanation for this. Several people tried several times to reach out to the maintainer, but he never replied. I believe this is a huge problem for a security app, and for open source apps in general.<p>Last but not least, the current version of Telegram on the Google Play Store (3.2.4) is not open source.<p>Of course, client apps don&#x27;t have anything to do with the server implementation, API, or general issues about Telegram. You&#x27;ve linked a Trello board somewhere deep on your website, but the link is broken. It&#x27;s a major issue that there is no way to discuss problems, feature requests, or ask questions to the developers (we don&#x27;t even know who the developers are). There is a community-run Telegram support account and a press contact and there&#x27;s this email address and a Twitter account. Obviously none of these work as a discussion &#x2F; issue platform, and you don&#x27;t seem to reply to Telegram questions or Twitter.<p>A very good way to fix this is creating an organization account on GitHub and create a repo where you can use the issue tracker and wiki. You could also move the &quot;official&quot; clients to that account to have them at one place and you could use it to open-source or document other things related to Telegram.<p>It&#x27;s also not clear at all who runs Telegram. All your website says is that it&#x27;s financially supported by Pavel Durov and technically supported by Nikolai Durov. Your official apps and AS Networks are registered by &quot; Telegram Messenger LLP&quot; or &quot;Telegram LLP&quot; and your website claims your headquarters are based in Berlin, although no such company seems to be registered in the EU. You are legally required to publish your address and contact information to comply with German law §5 TMG. Additionally, both the LLP&#x27;s and Nikolai&#x27;s address are apparently at (different) British P.O. boxes.
Is Nikolai the only developer or are there more? How are the official maintainers related to the LLP? Are they paid? Are they employees? Are there any employees at all? Who runs the company?<p>I&#x27;m really trying to not hate you and hope that you are what you claim to be, but it seems like you advertise security and openness successfully, so that the average user and the press buys it, but taking a closer look you seem rather shady without being very open. I feel very sad about this and hope you&#x27;ll improve that.<p>Please shed some light and address these issues, most importantly a public issue tracker &#x2F; discussion forum.<p>Thank you!
– jomo
&quot;"
2015-11-25T00:19:36.000Z,My bank has an API so I built online banking,"This is an important distinction. Simple&#x27;s API is not secret, but it&#x27;s also not stable, or versioned, or anything close to that.<p>Tools have been written to extract data from simple&#x27;s API, but those endpoints have mostly been discovered through unofficial channels, and Simple often changes them without issuing any kind of warning.<p>So far twitter has been the best route to find about their changing API endpoints, which speaks simultaneously to the disorganization of the API and the massively high quality of their support team."
2015-11-19T23:41:36.000Z,Instagram Platform Update – Instagram Developers,Maybe I don&#x27;t fully understand. Are they pulling a twitter with their api changes?
2015-10-30T20:30:42.000Z,Do One Thing,"I had two thoughts while reading this.<p>1 - The need for the web to be profitable in some way makes &#x27;single tools&#x27; hard to build.  You have to grow users, add features, etc, etc. So even if you have an API or something useful it likely won&#x27;t scale economically.  Unless it&#x27;s government supported or behind a foundation of some sort. The Twitter API comes to mind here.<p>2 - This is tricky because for the web to meet the UNIX philosophy, everyone has to agree.  You can&#x27;t have the team that manages the equivalent of the `ls` website decide to change their output, or strike up a deal with the `diff` team to force `diff3` out.<p>Once again, capitalism ruins everything fun. That&#x27;s hyperbole, kinda :-)"
2015-10-22T05:44:09.000Z,Twitter CEO Dorsey Apologizes to Developers,"I worked on FB integration where a feature being used was disabled and the API replaced with a new one between our product freeze and release (actually the old API was closed a week and a half before the replacement was in place).  If I was working at a smaller company at the time, our team would have had no way of knowing WTF happened, other than it didn&#x27;t work.<p>The fact is, even with a large corp to corp relationship, you still can&#x27;t absolutely rely on API consistency... it&#x27;s pretty sad, but true... Netflix, Twitter, FB, Google and others have changed&#x2F;revoked APIs before with minor to significant impace.<p>This is part of the reason why you shouldn&#x27;t <i>try</i> to make applications designed to scale&#x2F;adapt for years... design the simplest thing that does the job, and in as modular a way as possible.  Avoid &quot;enterprise&quot; patterns as much as possible in favor of the simplest thing that works and is cheap&#x2F;easy to replace if&#x2F;when needed.  It doesn&#x27;t mean don&#x27;t test, consider performance or write good code, just don&#x27;t rely on it being around, and over-invest in that it likely won&#x27;t.<p>You never know... a piece of software I once wrote to test our own product turned into its&#x27; own product and pieces of it are still in fortune 100 deployments...  It&#x27;s horrible, and was a hack to begin with.  It didn&#x27;t even support half the specification it was designed for (only the parts we needed)... just the same, it got the job done."
2015-10-22T04:32:09.000Z,Twitter CEO Dorsey Apologizes to Developers,"There is nothing about the 100,000 token limit that makes any sense. People present it as Twitter wanting to &quot;control the core experience&quot;. That&#x27;s bullshit and always has been.<p>Twitter could have easily said &quot;we will serve ads in this format. All apps that want to use the API must display the ads according to rules XYZ&quot;. Congrats! Now you can monetize and app developers can keep innovating.<p>The whole Twitter client fiasco remains one of the dumbest moves and for nonsensical reasons that Twitter itself could have easily solved.<p>I saw nothing in this announcement that addresses this problem or changes any policies related to it."
2015-10-21T23:32:11.000Z,Twitter CEO Dorsey Apologizes to Developers,"I stopped really looking at APIs ever since Facebook, Twitter, LinkedIn, etc. started restricting the usefulness and access to them.<p>Its been a long time since I really thought about building any business on quicksand.<p>Now a days when I use an external API, I make sure it is not core to the product. If the relationship changes with the external provider, I need an escape that does not impact my product.<p>Which means of course that the external API cannot be &quot;essential&quot; - and in startup land &quot;not essential&quot; == &quot;do not do&quot;"
2015-10-21T23:10:32.000Z,Twitter CEO Dorsey Apologizes to Developers,"I found Facebook docs and APIs to be really good, until they changed one which completely broke a revenue-generating app and didn&#x27;t post any notification of the change until a week after it had already gone live.<p>That was a few years back, maybe they&#x27;re better now. But I doubt it.<p>Both Facebook and Twitter are a complete <i>dream</i> compared to Valve&#x27;s API for Steam and Team Fortress 2. Working with <i>that</i> is a complete nightmare, if it even provides a fraction of the capability you need (which it almost certainly does not)."
2015-10-21T20:02:10.000Z,Twitter CEO Dorsey Apologizes to Developers,"&gt; Facebook has also done this repeatedly ... They just make breaking changes to production APIs all the time.<p>They do, but that doesn&#x27;t slam the door shut on a developer&#x2F;business purely for the sake of slamming the door shut on a developer&#x2F;business.<p>From what I&#x27;ve seen, Facebook encourages API usage. Twitter encourages it until you make money, then they shut you down - often stating they&#x27;re building a similar app&#x2F;service and you&#x27;d be competing with them -- only then to never launch said app&#x2F;service.<p>Twitter as a platform isn&#x27;t worth much (as evidenced by year after year of not turning profits). The value in Twitter is the data - but they are locking it away.<p>Why not go the Google route and charge for API usage over a certain threshold. Twitter could stop caring what users do with the data, and make money as their ecosystem grows and becomes more successful."
2015-10-21T19:58:23.000Z,Twitter CEO Dorsey Apologizes to Developers,"I maintain the Twitter API client library for a popular language, and I have a love-hate relationship with the Twitter API. Parts of it are really nice, but sometimes I feel like I&#x27;m playing whack-a-mole with the documentation.<p>The example responses they provide are correct... except when they aren&#x27;t. They use heterogenous JSON in their responses (silently replacing string literals with arrays, but only for some responses, etc.). They&#x27;ve added error codes without updating the docs for months on end (which sort of defeats the point of an error code - what use is it if you don&#x27;t know what the error <i>means</i>?)<p>The only way I&#x27;m notified of these changes is when people file bug reports with the library, and I always have to ask them to tell me the exact query that cause the error for them, because they&#x27;re almost impossible to reproduce otherwise[0], and the API is so inconsistent that I can&#x27;t try and manually search for similar responses that will cause the error.<p>On the other hand, the Twitter API is a seamless[1] way to interface with an incredibly useful and powerful product, and it&#x27;s a great source of data. I just wish the developer experience were seamless.<p>[0] e.g. <a href=""https:&#x2F;&#x2F;github.com&#x2F;ChimeraCoder&#x2F;anaconda&#x2F;issues&#x2F;82"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ChimeraCoder&#x2F;anaconda&#x2F;issues&#x2F;82</a><p>[1] Assuming your client library works, but I can&#x27;t assume that if I&#x27;m the one responsible for maintaining it!"
2015-10-21T18:42:32.000Z,Twitter CEO Dorsey Apologizes to Developers,"The API Terms of Use haven&#x27;t changed:<p><a href=""https:&#x2F;&#x2F;dev.twitter.com&#x2F;overview&#x2F;terms"" rel=""nofollow"">https:&#x2F;&#x2F;dev.twitter.com&#x2F;overview&#x2F;terms</a><p>The most egregious of which continues to be: &quot;Apps replicating Twitter’s core user experience (what we’ve called “traditional Twitter clients”) are discouraged and have a ceiling of 100,000 users, among other restrictions. Be sure to read the applicable TOS clauses carefully if you’re considering building such an app.&quot;<p>This is really bad as &quot;core user experience&quot; is something open to a very wide degree of interpretation."
2015-10-21T18:36:33.000Z,Twitter CEO Dorsey Apologizes to Developers,"Well this article is a bit click baity.<p>The original article they reference is from 2012 and talks about the API changes and Twitter&#x27;s choice to shut down apps it feels are competing with its own app.<p>All I got out of the current article was Jack trying to woo developers back without any hint of what exactly they&#x27;re changing to be more developer friendly. If I was burned by them in 2012, I doubt this would get rid of any lingering doubts I had about working on their platform."
2015-10-08T11:31:58.000Z,"Show HN: Squatmon, a domain squatting monitoring system, with new things","Hi HN<p>a lot has changed since our last Show HN, and i guess it was time to share these change with you.<p>for those who weren&#x27;t here the first time, we try to catch domain squatting using a bunch of techniques we already used when doing it manually, but in a purely automated fashion. your root domain (think &#x27;facebook&#x27;, &#x27;twitter&#x27;, &#x27;ycombinator&#x27;, etc...) gets through blenders that generate variants, that we&#x27;ll gather info on.<p>we now have all the basics in place so i can confidently call it production ready. free accounts are still the same deal, one domain, five TLDs, all present and future generators, whois and dns resolver, plus a few more still in the oven, and one run per week, which should be enough if your needs are not massive and&#x2F;or specific.
you also now have paying options for people with more intensive needs, either timing wise (down to one run per day, and one run per 4 hours will be a possibility once i&#x27;m confident 1: we can handle it, 2: it can actually provide value in the real world) or number-of-tlds-wise.<p>notifications! yeap i know it&#x27;s basic, but we now send you a mail when a run is complete, so you don&#x27;t have to bother reloading waiting for that progress bar to reach 100%. a few client asked us about sms notification, but i&#x27;m not sure about multiple notification channels yet.<p>so what&#x27;s next :<p>we have a bunch of stuff that stayed on the backburner while i was working on making the production as autonomous as possible (complete CI&#x2F;CD stack, built with chef, openstack heat, jenkins, the whole shebang) and the other dev was working on ironing the kinks
existing when interacting with horrible protocols like whois (for the sake of everyone&#x27;s sanity, i really hope rdap (<a href=""http:&#x2F;&#x2F;about.rdap.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;about.rdap.org&#x2F;</a>) gets traction) or misbehaving dns, or just plain old bugs. we&#x27;re now bringing them back on the front of the workbench.<p>parking detection.<p>this one is simple, and everybody will get it, but i noticed a large number of parked domains in resolution runs, so they&#x27;ll be marked as such.<p>automated phishing detection.<p>this has been a major demand so i&#x27;m prototyping a CV system (ab)using ghost.py and opencv to see if i can get something that has a reasonable false positive rate.<p>malware detection.<p>a smaller demand because it&#x27;s already well covered by other products. for the moment paying accounts get access to google safebrowsing, and i have a bunch of threat exchange APIs access ready to enter the quorum. there&#x27;s a lot of datasharing between those, so i don&#x27;t want to generate false positives because of data sharing. i have also been working slowly on PR for cuckoo sandbox that&#x27;ll help me launch fleets of sandboxes in various configuration (hopefully i&#x27;ll have enough variants that the client is able to more or less choose the one that correspond to its production environment to try and catch targeted attacks)<p>keyword prediction based on the root domain.<p>we have a keyword generator that can generate domain variants, think &#x27;cheap-brand&#x27; for &#x27;brand&#x27;, but if you&#x27;re like me you probably can&#x27;t think of a lot of those (i had good success asking marketing guys for ideas). once again AI to the rescue, i&#x27;m tracking which keywords had the most &#x27;success&#x27; in finding resolving variants, which means once i&#x27;m able to establish lexical domains i&#x27;ll be able to offer everyone a &#x27;most likely keyword for this domain&#x27; help to feed the generator.<p>an API!<p>at the very beginning, when dinosaurs roamed the earth and the iphone 5s the cool product of the year, squatmon was just a very large and very ugly python script i used in various recon engagements. as we decided to slap a shiny web interface on it and share it with others, we didn&#x27;t take the time to make an API the first class citizen and the web interface just the reference client implementation.
this is a mistake we intend to correct, so any person with an account, free or otherwise can integrate any of the functionality they have access as a part of something bigger. (i have written an example postfix milter that&#x27;s too terribly slow to be used in production, but can participate in the spam score of an email for example)<p>if you have any question, want to report bugs, or anything really, don&#x27;t hesitate to contact me, my email address is in my profile.<p>edit: i&#x27;m terrible and i said one run per month on the free account. it&#x27;s of course one run per week"
2015-10-06T11:13:43.000Z,The microservices cargo cult,"And there&#x27;s probably a parallel to &quot;one file per type&quot; with tons of little types. It feels like you&#x27;re making progress and doing stuff. You&#x27;ve not just done one task, you&#x27;ve deployed changes to 20 services. It also feels like you&#x27;ve made things more abstract than they actually are. It also feels more like Real Serious Programming.<p>I&#x27;ve used a Twitter API client (works fine) that implements itself across <i>7</i> separate libraries. All same project, they all work together, and they aren&#x27;t used in any other system. Just separated things out for the fun of it. One library for Twitter client &quot;Factories&quot;. One for Twitter &quot;Credentials&quot;. Another for Twitter client &quot;Security&quot;. Zero benefit to the user or to the project. But it certainly makes things seem more important, eh?"
2015-09-26T18:02:40.000Z,"The United Nations has a radical, dangerous vision for the future of the Web","I agree with the article that the changes propose are radical and dangerous. Instead, improvement could be achieved bottom up. For example, many women complain about online dating being an unpleasant experience for women. Some women decided to do something about it and started Bumble,<p><a href=""http:&#x2F;&#x2F;www.theguardian.com&#x2F;technology&#x2F;2015&#x2F;apr&#x2F;12&#x2F;bumble-dating-app-women-call-shots-whitney-wolfe"" rel=""nofollow"">http:&#x2F;&#x2F;www.theguardian.com&#x2F;technology&#x2F;2015&#x2F;apr&#x2F;12&#x2F;bumble-dat...</a><p>A dating app that only lets women message men. It&#x27;s an interesting idea and totally changes the dynamic.<p>If online harassment is a problem on dating sites, women can and have created a better solution for themselves in Bumble. Women can do the same with a safer Twitter and Facebook - if they want. It&#x27;s never been easier to do so, with Kickstarter and other funding options.<p>Women are not a minority - they are over 50% of the population, and more than capable of solving problems like this, again, if they want. Apparently things were bad enough in dating for Bumble, but since there isn&#x27;t a female-oriented Twitter or Facebook, I suspect the problems are overstated on those sites."
2015-09-09T12:24:40.000Z,HTTPS: is security worth the performance penalty?,"Consider the t0 the moment of site starting and t1 the moment you add SSL to your site. All the FB, Twitter, etc. shares are stored according to the complete URL string. All the posts between the t0 and t1 will have the URL without &#x27;S&#x27; and all the posts between t1 and &#x27;now&#x27; will have the URL with &#x27;S&#x27;. You can collect the shares from the FB API but you must provide the post URL and then concatenate the results. With this method you can preserve the shares, but we must keep this in mind: a share is registered with a single URL string, and also we must consider this transition as a one way transition and don&#x27;t change it back to HTTP."
2015-08-26T08:13:53.000Z,WebExtensions/FAQ,"The author of Tree Style Tab has commented (in Japanese) on the change to deprecate add-ons making use of XUL. [1]<p>Roughly what he said might be summarized as follows (sorry if I misunderstood his intention): Tree Style Tab is useful because the add-on changes the behaviors of the tab globally. That way, it can cooperate with other tab-related add-ons whose authors didn&#x27;t intend to make the add-ons work with TST. Therefore providing the Sidebar API doesn&#x27;t help because you can&#x27;t expect add-on authors to write code just to make add-ons work better with TST.<p>[1]: <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635078508981555202"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635078508981555202</a> <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635079271032090624"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635079271032090624</a> <a href=""https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635079995371556864"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;piro_or&#x2F;status&#x2F;635079995371556864</a>"
2015-08-21T06:04:17.000Z,"Twitter Falls Below IPO Price as Concerns Mount Over CEO, Growth","&gt; Why is logged-out Twitter not a search engine?<p>From my perspective (a developer who has leveraged the API from 1.0 on), search has always been &#x27;different&#x27;.<p>At first, it didn&#x27;t exist. So some company (Summize) created it. Then, Twitter acquired them (actually their first acquisition).<p>Some time later the search method was absorbed into the Twitter API. The syntax hasn&#x27;t changed since.<p>It always felt like they just re-deployed the Summize app and proxied an API path to it. Though it&#x27;s quite likely it&#x27;s been rewritten many times by now.<p>Farfetched, but I guess I&#x27;m saying it may be a cultural thing."
2015-08-14T19:28:26.000Z,Periscope by the Numbers,"Everything&#x27;s fine, everything said so far here it&#x27;s fine. But I was around here when that happened, which was not that much time ago so I find it weird that you guys don&#x27;t remember.<p>Twitter pulled some very dirty stuff on Meerkat, merely days before launching Periscope and later, in order to favour their own Meerkat clone. That&#x27;s when everything changed from &#x27;it&#x27;s a free market&#x27; to &#x27;it&#x27;s our market and we can kick you out for no reason&#x27;. And yeah, it actually is Twitter&#x27;s market, they are allowed to do anything they like with it and &quot;monopoly regulations&quot; aside, they can kick you out of their for no reason.<p>But let me tell you what I don&#x27;t find ethical about all of this. That when you are going to develop for them, they do not tell you straight away: we are going to fuck you up if what you do turns out to be valuable; quite the contrary, they just put out their &quot;we-are-so-cool-and-we-love-developers&quot; face and invited everyone to be part of their platform blah blah blah.<p>That started around 5-6 years ago, and probably you (selectively) won&#x27;t remember this either, but back then the first killer apps that Twitter had were third-party Twitter clients that made the whole user experience better. They were a hit because back then, too, the main Twitter UX was a piece of s... and these alternatives were so much better. And guess what happened to those products? Twitter pulled the same shit on them, they bought TweetDeck which was arguably the one with the most users (or the one that needed the money the most), and banned all other clients from their API with a week-or-so notice. At that time, that thing was even worse, because I would even dare to say that Twitter somehow was in debt with those developers because a significant contribution to the growth of twitter was driven by people going through all these third-party clients, that&#x27;s plain treachery and there&#x27;s even a special circle in Hell for that thing.<p>Now history repeats again and will repeat forever because the message from Twitter in that sense is very clear: we don&#x27;t give a shit about our developers.<p>But now, it&#x27;s good to see that things are finally turning around. Twitter desperately needs a killer app right now, because they&#x27;ve lost the hype, they&#x27;re running out of money and investors don&#x27;t eat anymore that &quot;we will be profitable in ten years&quot; crap. The only one way that Twitter could be hip again is, oooooh the irony, if another great product starts driving people back into using Twitter, but guess what? No developer will ever take Twitter seriously anymore, and that&#x27;s just and sweet beautiful karma :)<p>Btw, it would be honest for you to disclaim about your relationship with Twitter :^)"
2015-08-05T10:58:41.000Z,We're heading Straight for AOL 2.0,"And http is not a plumbing protocol nowadays?<p>Or maybe you expect twitter to write a rfc about its api, which for obvious economic and strategic reasons they don&#x27;t want to open? WhatsApp maybe? How would benefit them to have 3rd party clients they wouldn&#x27;t be able to control? Or having to justify or change their protocol decisions with an rfc?<p>I don&#x27;t understand, I&#x27;m genuinely confused, this article sounds very naïve, very delusional, so probably I am just misunderstanding it."
2015-07-19T17:28:27.000Z,"Please, Let Me Run Twitter","I think there are some pretty good ideas in here, although am wary of piling on features.<p>The specific-use-case clients idea feels like it has legs. It does feel like Twitter burned a lot of external developers with their API changes &amp; display changes, and the enthusiasm for building niche Twitter clients is pretty small. Maybe I&#x27;m just unaware of them. Anybody know better?<p>I&#x27;d certainly have a better chance of using a Twitter DM app than other IM apps, mainly because between Twitter &amp; SMS I can cover my entire network.<p>There also seems like a reasonable chance that well designed single-purpose apps might attract new &amp; interesting content so open up additional demographics.<p>As an existing user my main gripe with Twitter at the moment is noise.  The spam is worse than ever. The &#x27;targeted&#x27; advertising hasn&#x27;t even reached the uncanny valley. The new retweet-with-comment feature adds pointless clicks to what would otherwise just be a hyperlink. Then there&#x27;s the core problem that Twitter has always had, it&#x27;s users. I want to be able to filter by more than just person... maybe certain people should have their RTs filtered out, or their instagram selfie links.<p>Most of all, I&#x27;d love to be the customer rather than the product. TWITTER, LET ME PAY YOU TO GET RID OF ADVERTISING."
2015-07-05T19:36:11.000Z,Why Invest in Tools?,"Well our company believes in the power of tools to empower people and developers, and bring about social change. So I can definitely speak about this. And so can my cofounder: <a href=""http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platform&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platfor...</a><p><i>&quot;Our job is not to just build Facebook, our job is to make the world more open and connected — and we in Product Infrastructure are tasked with giving the whole software industry the tools to help us accomplish this mission.&quot;</i><p>Then open source your social network and let it be hosted in a distributed manner around the world. Instead of shutting off access to APIs like this: <a href=""http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a><p>When I see companies like Twitter and Facebook become open source like Wordpress for blogs, then we can say they really care more about making the world more open and connected instead of building their own silo."
2015-06-30T18:09:37.000Z,Show HN: Free Company Logo API,"Instead of relying on FB, Twitter, Company&#x27;s site for the logo, wouldn&#x27;t it be better to create a &quot;Company Logo Service&quot; with an API, with the below features -<p>0. Change at one place, make it work everywhere. (consistent branding across the wild web).<p>1. Upload your company logo here with us.<p>2. Multiple versions.<p>3. Multiple sizes.<p>4. Control and Connect various sizes, versions with your various social accounts, newsletters, anything.<p>5. IFTTT support.<p>6. Get it printed on swag and merchandise.<p>7. More...?"
2015-06-22T14:48:18.000Z,Show HN: WhatsApp for Desktop,"&quot;[Name] for [Service]&quot; is a popular format in the third-party client world, and it&#x27;s one that&#x27;s tolerated by all the big players.<p>Much older examples include &quot;Plume for Twitter&quot; and &quot;FriendCaster for Facebook&quot;. In the case of the former, it was by agreement with Twitter: Plume used to be called Touiteur until Twitter made them change it.<p>You&#x27;re seeing it more lately because Google recently changed the Play Store&#x27;s app naming policy to forbid using the name of an existing service as part of your app&#x27;s main brand, only allowing a special clause (e.g. &quot;for [Service]&quot;) following the main brand. Also, around the same time, reddit changed their API policy to add a similar requirement.<p>In the long run, it&#x27;s going to be beneficial for app developers because now they can take their name and use it for apps across multiple services. For example, the developers of Plume could create a &quot;Plume for Facebook&quot; app and so on, so they end up with a whole family of Plume apps, each one for a different social network."
2015-06-19T19:58:20.000Z,Docker really is the future,"&gt; <i>It&#x27;s humorous that what you just said goes exactly opposite to the blog post, which talks about how docker is designed to do everything completely differently because current methods &quot;don&#x27;t scale&quot;.</i><p>I don&#x27;t think it&#x27;s contradictory. We <i>do</i> want Docker to change, for the better, the way applications are built and run. And if you <i>do</i> want to throw away your existing stack and build your next application in the most portable and scalable way possible, then Docker can definitely help. It&#x27;s just that it doesn&#x27;t <i>require</i> you to, because most people don&#x27;t upgrade everything at once: they improve their toolbox gradually.<p>For example, there is a meme that &quot;if you run more than one process in Docker, you&#x27;re doing it wrong&quot;. I actually disagree with that. I think if you want to transpose an existing VM into a container, and think of it as a mini-server that you ssh into, that is your prerogative and Docker should support that use case. Maybe later you will look into the benefits of breaking up your application into smaller, single purpose containers (for example, you can now the Docker API and ecosystem at a finer level of granularity). And when you do, Docker should support that use case too.<p>A small disgression: I think it&#x27;s unfortunate that the tech community feels the need to coalesce around polarizing &quot;you&#x27;re doing it wrong&quot; statements. I find it particularly unfortunate that <i>Docker</i>, a tool I created partly to make the development world <i>less</i> polarized, was chosen as a battleground for ideological battles that I find frankly boring... Everything doesn&#x27;t have to be a battle.<p>&gt; <i>Keep up the good work on docker though, it seems to be getting some good traction so far! I&#x27;m personally wondering if it&#x27;s more fashion based traction though, and someone will be inventing the next &quot;docker, but more buzzword&quot; before long.</i><p>Thanks.<p>Obviously it will be hard for me to answer that in an unbiased way. I think the &quot;fashion&quot; aspect is a matter of perspective. From the point of view of heavy Hacker News and Twitter users, there is a lot of hype, both positive and negative. But the huge majority of Docker users don&#x27;t hang out on Hacker News (if they even know what it is). They have a job to do, Docker helps them do that job, and they tell their friends and colleagues about it.<p>We&#x27;ve tried to invite as many real-world users of Docker at next week&#x27;s Dockercon, to talk about their experiences, both good and bad. Maybe watch a few of their presentations and decide for yourself if it feels like &quot;fashion&quot; :)"
2015-06-03T18:41:04.000Z,MonolithFirst,"My main problem with twitter and the stalled new user base.<p>1. The onboarding social experience is just hard. Finding relevant information of what I want is difficult I wish there was a pane of tweets regarding interests ie gaming, politics etc. Everything in one thread is mind numbing once you follow too many people.<p>2. Context - finding anything is difficult. I don&#x27;t know what a trending hashtag is and the ones presented to me usually are gossip in nature for some reason?<p>3. Some people get so many @&#x27;s that they simply drop off the earth.<p>4. Whats the point of favoriting a tweet? I still don&#x27;t get it.<p>5. Why is it so difficult to use the API since those changes  in what 2012?<p>6. 140 characters is just so dang hard for me. I can understand a limit but just 140? I want just a little more space :("
2015-05-23T15:26:36.000Z,F-Droid Dropping Firefox,"Let me address some issues on this thread on the best way I can because I am really tired of all the FUD and attacks. I will first address the stuff mentioned on that changelog about the FDroid build of fennec and then I will talk a bit about Mozilla, Eich and what I think people are doing wrong in here.<p><pre><code>  Removed: Tests [not sure about that]
  Removed: Crashreporter [tracking]
  Removed: Healthreporter (UI?)
  </code></pre>
All that stuff provides telemetry for Mozilla that helps in finding and addressing bugs. People complain about a website not working correctly on Firefox but disable all the reporting stuff and never fill a bug on bugzilla. That kind of thing is useful. The source code for that is available on github, you can check what is sent and decide if it is worth using it or not.<p><pre><code>  Removed: Mediastreaming (requires non-free library: play-services) [google&#x27;s binary blobs]
  </code></pre>
Users want stuff to work. I am not talking about users with a free software mindset that are willing to hop through unfortunate hops to get their system working. I am talking about the average non-technical non-aware-of-foss user which number in the millions world wide (billions?) They want their browser to be able to play multimedia content. If you don&#x27;t want to use non-free multimedia then don&#x27;t access mp3 and other patent encumbred content.<p><pre><code>  Removed: Updater [tracking]
  </code></pre>
Another piece that you can check the code. Everyone wants an evergreen browser that receives patches, keeps its health in check and is kept up to date. There is no way of updating software without sending some data about the current software. Check the code and see if there is any sensitive information being sent and decide for yourself.<p><pre><code>  Removed: EME&#x2F;DRM [adobe&#x27;s binary blob]
  </code></pre>
EME is one thing and DRM is another. They work together but they are not a single unity. Before EME&#x2F;DRM you had proprietary unauditable DRM software running wild on your computing device. Now you have an open source sandbox that can be audited to make sure that the proprietary DRM blob can&#x27;t escape and fetch personal fingerprint data from your computing device. If you don&#x27;t believe that the EME&#x2F;DRM sandbox included in your Firefox is the same as the one from the code, there are mechanisms for building your own and using it. And thats the important part: &quot;If you are against DRM then don&#x27;t using services that use DRM&quot;. Some people want to listen to music, watch movies and other multimedia on services that believe that DRM solves some stuff. EME&#x2F;DRM solution protects their personal data while giving them the features needed to use such services. If you don&#x27;t agree with DRM then you don&#x27;t use those services. The DRM blob is downloaded when you use those services, if you&#x27;re not using them then the blob is not on your machine and never will be.<p>The fight against DRM shouldn&#x27;t happen inside the browser but in the users mindset and towards the service providers. The EME&#x2F;DRM solution was created as a compromise, give the users what they want while trying the best solution to protect them. Let FSF and other FOSS entitites audit the EME&#x2F;DRM sandbox. Let researchers try to pick personal data and fingerprints from the machine. Match that against the other solution which is non auditable. If all the effort and action placed into the hate machine against EME&#x2F;DRM was instead directed at educating users and teaching about non-DRM services then EME&#x2F;DRM would not be needed.<p>And that brings us to the topic of action. Mozilla is the only large player in the browser ecosystem that has all its code open, its roadmaps published, its processess available for public perusal and collaboration. You can&#x27;t influence or be a part of Safari, Opera, IE, Edge and Chrome development. You can&#x27;t verify, audit, help steer, be a part of what the companies behind those products want for the the web.<p><pre><code>  THE WEB IS THE ONLY MASS COMMUNICATION MEDIA WHERE EVERYONE HAS A VOICE
  </code></pre>
Keeping the web free and open, made by everyone for everyone, is the mission of Mozilla. That mission passes through a lot of different efforts which you can help. Millions of people worldwide have no idea how to the web works and don&#x27;t know how to produce content and make their voice available online.<p>The Mozilla Webmaker project helps teaching the web through workshops. Instead of spreading FUD and attacking people online, you can direct your energy into positive actions such as educating users on how to make the web their own and how to make their opinion count such as when talking about the DRM situation. The webmaker initiative goes beyond that with workshops and activities to teach about privacy, online rights, net neutrality, information credibility, programming. All that is open and in need of help. Educating users do more about the web than removing EME&#x2F;DRM API hooks and sandbox.<p>Firefox is the only browser that has its source code completely open and where you can help steer the project. You can be a part of Mozilla and then join the thousands that are trying to steer the web towards the users. If you don&#x27;t agree with some practice, then, instead of shouting on Twitter and Hacker News, join the mailing lists and discussions. Be a part of the process. Help.<p>Firefox OS is the only mobile operating system developed in the open and based on web technologies that are not controlled by a single entity. You can help us create a wonderful mobile system that brings the benefits of the open web in the hands of everybody. Instead of rooting and fighting about isolated closed proprietary islands, you can help steer our little web boat. Our low-cost (and low-specs :-P ) devices are bringing internet access to lots of people in emerging countries, with that there is information sharing, education, and other life transforming opportunities that bring positive social change.<p>Mozilla is what we make it be. As volunteers, employees, fans and users we can make it more than it ever was. Mozilla is also a project, an idea, that making a good quality software and solutions as a foundation&#x2F;community we can rival companies and make the ideal of values over profit prevail on the web.<p>I see a lot of hate for all the decisions Mozilla makes. Apparently it is the fashionable trendy thing on the web to spread FUD instead of taking positive action and helping. The whole situation with Brendan Eich is one of those cases. Brendan is a normal human being like all of us. We all have our flaws, prejudices, qualities, dreams, and bad decisions. Everyone here has some opinion and action taken about such opinion that goes against something that is deeply important to some group. We&#x27;re humans, we make mistakes. We&#x27;re products of the zeitgeist of our formative years. We learn and change through time but yet we all make mistakes at the eyes of others and sometimes even to our own. Unlike many here, I&#x27;ve been around Brendan Eich couple times and he was always pleasant, supportive and energetic about the web. That is his passion and fight. A strong problem with the web is the echo chamber. Someone makes a mistake or something we all disagree and consider bad and that person is forever bound to suffer our hate. That kind of action leads us nowhere. Whats helps is education, empathy, showing &quot;the other&quot; why we thing our opinion is important and why we would think another course of action was correct. Dialog and comprehension makes the world a better place, pitchforks don&#x27;t.<p>You all here, may you be FUDing&#x2F;fear mongering or not, can help Mozilla, the Web, Brendan and everyone. You can join the cause of an open web though dialog and positive actions. You can help Mozilla better its code and actions. You can help teach people about the web and let them multiply their opportunities. You can help audit code, translate content, make us see the correct path when we&#x27;re in the dark. You can help Mozilla fight for a web made of people and not of incompatible features and companies.<p>Thats what I am asking. Instead of flamewars and fighting Mozilla, join us, help us work, teach and learn with us and we&#x27;ll all make a much better and interesting web."
2015-05-18T18:19:30.000Z,Advantages of Monolithic Version Control,"For a moment I was a little frustrated at how we split everything into separate repos at work, mostly due to the difficulty of finding and refactoring code.<p>And while a monorepo would help a lot with discoverability, I think that the promises this article makes about cross-project changes are a bit optimistic since it ignores the difficulty of doing deployments in live distributed systems. Even if you have a single git repo, there will certainly be an order you need to deploy them in so that things don&#x27;t break when the API consumer gets updated before the API provider. Google&#x2F;FB&#x2F;Twitter&#x2F;etc certainly have a better deployment system than we do, so maybe for them it&#x27;s easy, but it&#x27;s not something that is just solved by going to a monorepo."
2015-04-23T12:27:57.000Z,Ask HN: How do you take care of security risks at your startup?,"Some ideas for a general strategy:
* Check TLS&#x2F;SSL <a href=""https:&#x2F;&#x2F;www.ssllabs.com&#x2F;ssltest&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.ssllabs.com&#x2F;ssltest&#x2F;</a>
* Use Https, HSTS
* Have a security response page if someone found a problem
* What to do if your application was compromised, be prepared for the worst
* Check and update your software regularly
* Review changes in your software regularly if it impacts your overall security strategy
* Keep a security checklist in your codebase
* Do your own code audits, just read it again after a few days and ask the right questions
* Remove all credentials from your codebase
* Read about the &quot;new&quot; security headers here: <a href=""https:&#x2F;&#x2F;github.com&#x2F;twitter&#x2F;secureheaders"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;twitter&#x2F;secureheaders</a>
* Know what kind of&#x2F;how many requests your API&#x2F;web app gets, maybe throttle or block some"
2015-04-07T18:25:06.000Z,Xmonad – A dynamically tiling X11 window manager,"That&#x27;s just the dead blog and dead twitter.  The mailing list is fairly active, hundreds of posts per month.  The bug tracker is being bit by the death of google code and I don&#x27;t recall reading where its going.  It uses darcs and there&#x27;s talk of a git mirror.<p>In a way its a pity this story popped up today.  There&#x27;s been talk on the mailing list just a week or two ago about a new release &quot;real soon now&quot;.  I assumed this story was the announcement of the new release, until I clicked thru and studied a bit.<p>Its not a GUI environment but a window manager along the philosophical lines of do one thing and do it very well.  Once it works, which it does, its hard to find something to change unless the API changes for X (unlikely)."
2015-04-02T18:15:08.000Z,What's the use for Bitcoin?,"I&#x27;m a big fan of both Sidney and Scott and the great work they did building Helloblock, one of the better Bitcoin API providers. It&#x27;s a shame that they couldn&#x27;t find a market for their product.<p>What&#x27;s a bigger shame is that they&#x27;ve both written articles disparaging Bitcoin technology now that they&#x27;ve decided to move on to other challenges.<p>We have a brand new data storage technology that allows for equal access read and write privileges on data that is permanent and shared equally across all nodes. It acts as a decentralized single point-of-truth. There has never been anything like this.<p>A simple ledger that operates as a type of currency is most basic thing that can be built.<p>Blockchain tech will disrupt almost every part of our industry. We won&#x27;t need centralized identity providers like Facebook. We can start to treat digital media as property and build up a viable economic system. We can actually account for people&#x27;s data use and the value of their contributions instead of this blind air gap between advertising and operation costs. We can create and transfer digital assets that represent all sorts of things.<p>Writers, photographers, musicians and anyone else who makes the content that fuels the advertising engines of Silicon Valley are becoming increasingly dissatisfied with how they publish work on the Internet. Putting something on a web page isn&#x27;t publishing. Posting something on Facebook or Twitter isn&#x27;t publishing. The act of publishing needs to be public and it needs to be permanent. Can you reliably quote from a blog or a tweet? No, you can&#x27;t, because the content could change. You can reliably quote from the second printing of a physical text because it would be almost impossible for someone to go through and change every copy.<p>All of this on a unified platform that isn&#x27;t controlled by anyone meaning there&#x27;s no danger of a private entity limiting access to APIs and destroying the hard work of developers, which Twitter has been doing for years.<p>I really hate to call them out because they&#x27;ve been very nice and incredibly helpful over the last year, but guys, come on, there&#x27;s no need to burn bridges. Just because you can&#x27;t see the possibilities doesn&#x27;t mean that they aren&#x27;t there."
2015-03-02T02:17:25.000Z,Ask HN: Who is hiring? (March 2015),"Software Engineer - REMOTE position (but HQ in San Francisco), Salary: $70k - $110k<p>Come help change the world by improving how people share and find useful information. We at Inscoop are an interesting startup doing social list sharing, reputation analysis, and social graph search algorithms, and we&#x27;re looking for enthusiastic people to join the team. There are many projects here where you can make a real impact, from the front-end design and implementation to the back end database architecture and data-mining strategies. We can&#x27;t wait to discuss the opportunities with you.<p>We&#x27;re looking for good software engineers with<p>* Essential skills:<p>- enthusiasm for learning new things and tackling big projects<p>- good communication<p>- enthusiasm for working with a motivated team<p>- comfort with working remotely and being proactive about team coordination<p>- familiarity with building web applications in AngularJS or ReactJS &amp; Flux&#x2F;Relay<p>- familiarity with Node.js&#x2F;io.js framework<p>- comfort using git for code management<p>* Nice-to-have skills:<p>- experience with a graph database<p>- experience with managing user accounts and security<p>- experience with managing database security<p>- experience managing web application aesthetics with CSS or some CSS derivative<p>- experience with web application security best practices and setting up user authentication<p>- building data APIs<p>- experience developing applications to interact with Facebook API, LinkedIn API, Google API, and Twitter API<p>- experience with deploying applications on services such as Heroku<p>- experience with designing mobile application interfaces<p>Please reach out to us at Inscoop (careers (at) inscoop.com). We look forward to talking with you."
2015-02-25T19:42:46.000Z,PGP: There’s Life in the Old Dog Yet,"Which is why I proposed that UI: it works automatically. While using the system, it simply indicates to you as you compose the message &quot;Yes, the email address you are sending mail to belongs to the person you intend to message&quot; or &quot;No, that email address belongs to someone else&quot; or &quot;This is a brand new email address.&quot; This way when you are emailing your lawyer to set up a will, or you email your accountant with your tax info, you can be sure that (a) you are emailing just the right person and (b) that only they can read the communication.<p>While setting up the system, you are simply required to link your identity. Twitter, Facebook, LinkedIn, GMail, HN, the government all should allow you to easily link your identity. This should be a normal part of your account creation (this can tie in nicely with another change: getting rid of passwords and using a browser UI for identifying yourself a la Persona, but PGP based).  Basically when signing up for Twitter, it should optionally let you upload one of your public keys (via a nice browser UI no less). Twitter (Facebook, GMail, etc.) would then expose a nice API for querying by public key fingerprint: &quot;Who has 0xDEADBEEF?&quot; =&gt; &quot;@DeadBeef&quot;. Revocation, key updates, all that should be automatic: you revoke your public key and issue a replacement, all your services update automatically.<p>This is the point where lots of people will raise concerns about privacy: &quot;This means Twitter now must have access to my GMail account! WTF?!&quot;. No. This process must be voluntary and optional. If you want to have 200 different identities online, go for it. I don&#x27;t care to know your real name, I just care to know that I am talking only to the person I intend to talk to. Think emailing a well known developer on GitHub, having never met them. You don&#x27;t need their real name, you are only interested in them in so far as they publish OSS on GitHub. This allows you to prove that github.com&#x2F;example is @example on Twitter, example@example.com, example@gmail.com, and HN user &quot;example&quot;.<p>And the benefit to &quot;regular Joe&quot; is that when he emails his accountant, he can now send his credit card number and SSN without fear of eavesdropping."
2015-02-25T07:35:04.000Z,"How to Be a Programmer: A Short, Comprehensive, and Personal Summary","&gt; <i>Learn to touch-type. This is an intermediate skill because writing code is so hard that the speed at which you can type is irrelevant and can&#x27;t put much of a dent in the time it takes to write code, no matter how good you are. However, by the time you are an intermediate programmer you will probably spend a lot of time writing natural language to your colleagues and others. This is a fun test of your commitment; it takes dedicated time that is not much fun to learn something like that. Legend has it that when Michael Tiemann[2] was at MCC people would stand outside his door to listen to the hum generated by his keystrokes which were so rapid as to be indistinguishable.</i><p>I know that this piece wasn&#x27;t written that long ago (2003)...but thinking back on those days of programming, I believe that so much has changed in information availability and operating systems that while fast touch-typing is still just an intermediate benefit, being able to memorize shortcuts and execute them by touch is of <i>enormous</i> benefit.<p>What I mean is that while Google was good in 2003, now I can type in an error message and basically be assured that the relevant Stack Overflow question will come up. Or maybe not, so I pop up a couple of Google searches, tabbing between windows as I type in my query. As those load up, I Alt-tab to my terminal window to re-run the problematic command, or at least examine it for typos. By then, at least one of my Google queries will have finished, so I Alt-Tab to my browser, click one of the search results, then Alt-Tab to the other Google query, click on one of <i>its</i> results. By this point, the Google search results that I skimmed over, or perhaps from the OneBox&#x2F;Direct Answer, has given me an idea to what my problem was. So while waiting for the actual pages linked from Google to load up, I alt-tab back into Terminal to see if any of those hints apply. If not, Alt-Tab to the browser, etc. etc.<p>Today I was teaching a student how to work with Twitter data from the command-line...and because Bash is not ideal for doing math or for parsing multi-line data...it took me a few tries of tabbing into a Bash reference manual, and many taps of the Up&#x2F;History key, and Ctrl-A&#x2F;Ctrl-E to navigate the prompt line, to come up with the command to calculate someone&#x27;s rate of Tweets (after hitting the API with a command-line program)...to the student, it must have looked like a constant stream of actual coding to get to the answer, when in fact, it was just a flurry of stupid mistakes and fixes in a span of a few seconds.<p>In the past, when a book was still often the best reference, or a very long webpage explanation...being able to quickly navigate the operating system may have not been such a big deal, as you were better served by just stopping your coding work to just read. Now (just as with all aspects of life and society), there seems to be a greater need to quickly navigate and filter information. I guess it&#x27;s a sort of multi-tasking...which may not always be ideal, but it is much <i>less</i> ideal if you&#x27;re multi-tasking and using your mouse to get around."
2015-01-30T20:11:52.000Z,Surviving Data Science at the Speed of Hype,"&gt;And that is not primarily a tool problem.<p>&gt;A lot of vendors want to cast the problem as a technological one. That if only you had the right tools then your analytics could stay ahead of the changing business in time for your data to inform the change rather than lag behind it.<p>many people like the author just don&#x27;t get it and it is fine. The same way like people didn&#x27;t get the search before Google.<p>&gt;But how do I feel good about my graduate degree if all I&#x27;m doing is pulling a median?<p>the graduate degree is what allows to receive $Nx10e5&#x2F;year (for a respectable value of N) for that pulling of a median<p>&gt;If your goal is to positively impact the business, not to build a clustering algorithm that leverages storm and the Twitter API, you&#x27;ll be OK.<p>on the other hand if your goal is power(OK, OK) instead of just OK then the clustering algorithm&#x2F;storm&#x2F;twitter is the way to go."
2015-01-29T09:59:42.000Z,Introducing React Native [video],"-- Attention -- Cross posting from the other thread --<p>Seasoned Appcelerator’s Titanium Mobile SDK dev here. Looks like that a lot of people here is comparing this announcement from the react team to the Titanium Mobile SDK. I’d like to give some info to shed some light on the differences, and probably anticipate the challenges they have to (or had to) solve.<p>## Architecture<p>Both Titanium SDK and this Native React thing do have a JavaScript runtime behind the curtains.<p>Both frameworks will run the JS runtime on the background, on a different thread from the UI. This is incredibly important to remind.<p>Titanium SDK follows an OOP-ish, imperative approach. You create views using factories (`Titanium.UI.createScrollView({ })`) and you add those views to parent views (`parent.add(child)`). This is very similar to a browser DOM, and in fact it’s cumbersome to work with. They built an xml preprocessor called Alloy which does a better job at exposing the view hierarchy right in the source, but it just compiles down to JS, `create()` and `add()`.<p>This is important for the evaluation at least for the following reason: every time you update a property on a view (actually on a proxy object to the real view) you’re crossing the bridge and you have to pay that penality. The bridge is the void between the JS runtime’s thread and the main, UI’s one. This is incredibly painful when trying to do JS animations, sometimes if you’re not careful you can get hurt very badly. You can still do great things, but it’s way better to use the native `.animate()` methods, which cross the bridge only twice (at start, and at the end as a callback invoking).<p>On Native React you should not have this kind of problems because changes will be batched and updated on a update loop basis or at least debounced. Or at least optimized in some smart way. I believe.<p>## Layout<p>One big problem will be the layout. Given that they don’t want the developers to understand every layout system every platform provides, they have to normalize it somehow. Titanium SDK has it’s own layout system, incredibly easy to understand even from a web-only dev experience:<p>a) by default everything is absolute positioned,<p>b) you can get a vertical flow layout by setting the &#x27;layout&#x27; property on the parent view or<p>c) you can get a horizontal flow (inline-block-ish) by setting &#x27;layout&#x27; to horizontal.<p>Native React will probably follow a more intimately web-ish approach, just look at this JS&#x2F;C&#x2F;Java implementation of the box-model and flex-box specification by Facebook itself [1]<p>[1]: <a href=""https://github.com/facebook/css-layout"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;css-layout</a><p>## Support and limits<p>Titanium SDK is always criticized for being to limited in what you can do with it. This actually comes from two different issues:<p>1) they have to (almost) manually implement every API you might need, by proxying from native-land to JS-land;<p>2) they have to follow every release of the platform’s SDK;<p>3) you cannot just put native code along-side your JS code, so you cannot go where they didn’t.<p>Let’s see how Native React will solve this issue.<p>Titanium SDK is undergoing an heavy lifting refactoring to solve exactly this issues. The project is code-named Hyperloop and is already working behind the curtains for the Windows 8 version of the SDK.<p>## Conclusion<p>Because I shamelessy want to karma-drift this topic, I’ll stop here.<p>It’s interesting, but until they show us some (native) code... it’s just ideas.<p>Follow me on twitter (@_pier) and github (@yuchi [2]) for Titanium related stuff.<p>Also my company, SMC, does a lot of great opensource things for Titanium (on gh we’re @smclab)<p>[2]: <a href=""https://github.com/yuchi"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;yuchi</a>"
2015-01-28T21:03:41.000Z,Use ReactJS to Build Native Apps,"Seasoned Appcelerator’s Titanium Mobile SDK dev here. Looks like that a lot of people here is comparing this announcement from the react team to the Titanium Mobile SDK. I’d like to give some info to shed some light on the differences, and probably anticipate the challenges they have to (or <i>had</i> to) solve.<p>## Architecture<p>Both Titanium SDK and this Native React thing <i>do have</i> a JavaScript runtime behind the curtains.<p>Both frameworks will run the JS runtime on the background, on a different thread from the UI. This is incredibly important to remind.<p>Titanium SDK follows an OOP-ish, imperative approach. You create views using factories (`Titanium.UI.createScrollView({ })`) and you add those views to parent views (`parent.add(child)`). This is very similar to a browser DOM, and in fact it’s cumbersome to work with. They built an xml preprocessor called Alloy which does a better job at exposing the view hierarchy right in the source, but it just compiles down to JS, `create()` and `add()`.<p>This is important for the evaluation <i>at least</i> for the following reason: every time you update a property on a view (actually on a proxy object to the real view) you’re <i>crossing the bridge</i> and you have to pay that penality. The bridge is the void between the JS runtime’s thread and the main, UI’s one. This is incredibly painful when trying to do JS animations, sometimes if you’re not careful you can get hurt very badly. You can still do great things, but it’s way better to use the native `.animate()` methods, which cross the bridge only twice (at start, and at the end as a callback invoking).<p>On Native React you should not have this kind of problems because changes will be batched and updated on a update loop basis or at least debounced. Or at least optimized in some smart way. I believe.<p>## Layout<p>One big problem will be the layout. Given that they don’t want the developers to understand every layout system every platform provides, they have to normalize it somehow.
Titanium SDK has it’s own layout system, incredibly easy to understand even from a web-only dev experience:<p>a) by default everything is absolute positioned,<p>b) you can get a vertical flow layout by setting the &#x27;layout&#x27; property on the parent view or<p>c) you can get a horizontal flow (inline-block-ish) by setting &#x27;layout&#x27; to horizontal.<p>Native React will probably follow a more intimately web-ish approach, just look at this JS&#x2F;C&#x2F;Java implementation of the box-model and flex-box specification by Facebook itself [1]<p>[1]: <a href=""https://github.com/facebook/css-layout"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;css-layout</a><p>## Support and limits<p>Titanium SDK is always criticized for being to limited in what you can do with it. This actually comes from two different issues:<p>1) they have to (almost) manually implement every API you might need, by proxying from native-land to JS-land;<p>2) they have to follow every release of the platform’s SDK;<p>3) you cannot just put native code along-side your JS code, so you cannot go where they didn’t.<p>Let’s see how Native React will solve this issue.<p>Titanium SDK is undergoing an heavy lifting refactoring to solve exactly this issues. The project is code-named Hyperloop and is already working behind the curtains for the Windows 8 version of the SDK.<p>## Conclusion<p>Because I shamelessy want to karma-drift this topic, I’ll stop here.<p>It’s interesting, but until they show us some (native) code... it’s just ideas.<p>Follow me on twitter (@_pier) and github (@yuchi) for Titanium related stuff.<p>Also my company, SMC, does a lot of great opensource things for Titanium (on gh we’re @smclab)"
2014-12-24T05:58:21.000Z,UI Performance Decline – OS X Tiger to Yosemite [video],"Animation in general is just plain broken in Yosemite (and iOS 8). I&#x27;m not up to date with the latest frameworks, but I believe there&#x27;s been a fundamental API change, because its basically possible to break any animation by just causing an event to happen before its finished. This happens all the time in iOS, you can get it to break mid-rotation and end up in a half and half state: <a href=""https://twitter.com/tolmasky/status/532578692804124672"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;tolmasky&#x2F;status&#x2F;532578692804124672</a><p>On OS X, its the same thing. Here&#x27;s me easily repro-ing in Safari: <a href=""http://tolmasky.com/letmeshowyou/Yosemite/Safari%20Animation.mov"" rel=""nofollow"">http:&#x2F;&#x2F;tolmasky.com&#x2F;letmeshowyou&#x2F;Yosemite&#x2F;Safari%20Animation...</a>"
2014-12-08T21:52:36.000Z,Scaling email transparency,"<i>But I still haven&#x27;t been able to find a compelling reason that email itself is fundamentally broken in a way that requires a new system altogether.</i><p>I&#x27;d love to use something very much like email which had a few things like this:<p>Verified identity<p>Public key encryption as standard (of content at least, possibly of most headers too)<p>TLS everywhere<p>UTF-8 everywhere<p>Metadata for social presence so that twitter&#x2F;fb&#x2F;github&#x2F;intranet profiles could be referenced in mails and used for things like identity (see verified identity above)<p>Standardised globally unique message ids (uris perhaps)?<p>Attachments uploaded to a server by the sender instead of clogging up mailboxes, not fetched unless required<p>Maybe even mail uploaded to a server and not sent across the wire unless actually requested - why do we need to send messages when I might be able to infer from metadata that I don&#x27;t want to read it 50% of the time? An API for email clients which pull data as they wish would be nice, instead of the current broadcast all the data model. This plus identity would make it easier to block spam.<p>HTML with inline CSS for styling (clients could strip to plain text as required, not send the message twice) - no JS for obvious reasons. We pretty much have this already, but it&#x27;d be nice if it were just the standard.<p>Email is a great tool, but it really is showing its age - it was defined in a different age where there was trust by default of network users and servers, and it&#x27;s been hugely exploited as a result. If it were proposed now it would never be adopted. You could shoehorn a few of the above points into client changes, but some things would be easier with a new protocol."
2014-11-24T02:20:09.000Z,"DBus, FreeDesktop, and lots of madness","That question is like asking &quot;can you tell me something the Twitter API solves that http does not?&quot; - it doesn&#x27;t make any sense. They are distinct layers. One builds on the other.<p>http+websocket is a way to set up a full-duplex stream of messages where messages are anything you like.<p>dbus does have that part, but then it defines additionally what the messages actually look like in enough detail to bind them to method calls; it defines semantics such as guaranteed ordering and errors; it defines a central bus daemon; it adds broadcast messages over the daemon; it adds security features to allow mixing user and system domains; it adds a way to locate the bus daemon; it adds a way to launch and track the lifecycle of named processes; etc, a number of other APIs. It is not just a socket.<p>Could you implement a dbus-equivalent using http? Sure. But http does not include a &quot;free&quot; implementation of dbus, any more than it includes an implementation of Twitter.<p>dbus-on-http would have to define how method signatures and types map into http, and then it would still have to actually implement the daemon with its features and semantics.<p>http wouldn&#x27;t make any material difference here; it would have some bikeshed-level pros and cons, but not change the system design in a material way."
2014-11-10T06:00:29.000Z,"Ask HN: Founders whose startups have failed, where did life take you afterwards?","Yes that is an interesting question.   My co-founders were so incompetent at this business that I took over all business development.  I personally met with a dozen casinos owners in Las Vegas, 4 massive odds tech companies in Great Britain and about 7 off shore, billion dollar gambling firms like pinnacle, william hill and the like.<p>Not a single one committed on the spot to give me money despite my API being faster (in GPU and C++)  smarter (generating 6% ROI on the dollar staked ON TOP of their juice) and better coded (All Haskell, Python and occasionally C).  I was floored.  Technology meant nothing to these wealthy people.<p>I realized that the people who ran the sports books were so lazy and incompetent that they would never understand what convex optimization was and that If I instead committed to learning how to bet, I would eventually grind millions of dollars out of their archaic systems.  Quite simply, anyone with enough commitment and resources can outsmart the index.<p>Its not that they were dolts, but that their focus was not on math and better real-time odds; the focus was on bilking very poor bettors out of their money and preying on them as much as possible.  These guys just worked 9 to 5 collected fat paychecks, basically work in palaces with sweet perks, and abhorred (and scoffed) change of any kind.<p>Once I realized that being smart and capable would never sell, it was an elementary decision.   I quit, let my investors down, left a quarter million on the table (which my foolish co-founder burnt through and AGAIN got a $3m term sheet pulled at the last minute by the SAME jewish lawyer investor guy lol)  and simply said, life is easier when I only have to deal with myself.   The rest is history, I surpassed a half million dollars and now sustain an excellent lifestyle.   hit me up anytime at @ess2dashizzleC on twitter.   (yah I like snoop dogg)"
2014-11-04T15:32:23.000Z,Why Twitter Can't Replace RSS,"Twitter can serve as a replacement for a subset of RSS functionality, but even allowing for Twitter to grow that subset, the biggest difference is architectural:<p>Tweets all run through twitter.com and your ability to retrieve the tweets you want or for the content owners to provide the information they wish depends on Twitter&#x27;s continued willingness to provide the tools and&#x2F;or API to do so and to allow you both to keep your accounts. Even assuming they will always want to facilitate this sort of thing and that neither you nor the content owners will do something to get kicked off Twitter, you can be sure that the tools and API will change relatively rapidly over the years ahead.<p>Meanwhile RSS is (usually) hosted on the content owner&#x27;s server. The format has been stable for 15+ years at this point. Tools that worked for aggregating and dealing with RSS in 2000 still work today. And only your ISP could potentially stop you from retrieving the content you wish, when you want it, how you want to."
2014-09-09T13:50:06.000Z,Berg is shutting down,"Note that &quot;their cloud&quot; (what they called Berg Cloud) was actually primarily a local wireless access solution, not a cloud in the cloud computing sense. It was supposed to make configuration and connection of the Little Printer and other future Berg devices easier. As other commenters have pointed out, you can have an LP-type device that connects directly to a normal wifi network (e.g. Adafruit&#x27;s) and the content doesn&#x27;t in principle need to come from a remote web service either: it could be provided by a script running on a local machine.<p>The quality of presentation and the user experience provided by Berg (not just this product but other things the same guys have worked on) is great, but they show their roots in the design school. The products feel to me more like the product of brainstorming at an ad agency than a mature response to necessity. London&#x27;s design scene is full of this kind of &quot;creative&quot; activity, and it&#x27;s super enjoyable to watch but probably a form of decline or decadence in terms of real manufacturing and craft. The pace of change is so great now in tech that designers tend to get left behind or reinvent the wheel.<p>Imagine Twitter redesigned by someone both technically knowledgeable _and_ UX aware. (No race conditions, URL shortening, or crippled API functions.) the reason we don&#x27;t have this is a cultural gap between the hip designers and the technically informed."
2014-09-08T18:53:06.000Z,Testing a way for you to make purchases on Twitter,"it started as such. lots of 3rd party clients, cool new use cases and UIs. all squashed by now. API caps, etc.<p>they need money, sure. but not just to operate and make a nice profit, they <i>need</i> to grow, they <i>need</i> blowout quarter after blowout quarter. impossible with this simple and clean core product. hence doom on the horizon. just look at all the bad feedback they&#x27;re getting for their feed changes. core audience hates it. won&#x27;t bring new users. stuck.<p>twitter could&#x2F;should be run like craisglist or reddit. hardcore maintainence mode. neat little business. but no VC will ever allow it."
2014-09-06T22:03:47.000Z,There’s Something Rotten in the State of Social Media,"I&#x27;ve said it a lot on HN, but in my opinion, there&#x27;s nothing rotten in the state of social media. Social media itself is inherently rotten.<p>Twitter, Facebook, et al taking away users&#x27; rights, pushing crappy updates and changes, while at the same time using creepy advertising tactics to make money and addictive functionality to keep you involved is Twitter, Facebook et al doing exactly what they were designed to do. Their job is to make their shareholders money by exploiting the people who use their service, and they&#x27;re doing, I&#x27;d say, pretty well.<p>I think Facebook knows full well that nobody likes Facebook Messenger, the newsfeed, the fact their data is never deleted, the obnoxious Zyngames, and so on. They don&#x27;t care. People will use their service anyway and they&#x27;ll make money. Twitter knows people probably wouldn&#x27;t like curated lists, and they&#x27;ll still do it if they think it&#x27;ll make them money (just like they know that developers have no choice but to accept their draconian API terms).<p>I have a lot of objections to social media - on a philosophical basis and a business one - but I don&#x27;t feel it&#x27;s reasonable to say it&#x27;s &quot;dying&quot; or &quot;getting worse.&quot; From the perspective of the people running the companies (the only perspective said companies care about), it&#x27;s doing just fine."
2014-08-30T15:30:49.000Z,"With $30M More in Hand, IFTTT Looks to the Internet of Things","I really like automators like IFFT as they save the time from having to yet again keep up with breaking API changes from crappy company xyz (ex: Facebook). The problem with all of them seems they don&#x27;t actually work reliably.<p>I tried IFFT a number of times. I&#x27;d love for it to work, but I only use it as a &quot;it&#x27;s ok if this breaks, missing data, etc.&quot; tool. Admittedly this is not 100% their fault as you are at the mercy of the shoddiness of other APIs, but bugs upon bugs and the less than reliable nature of IFFT actually executing things in a timely, durable manner makes it 100x less useful and impossible to build on top of for real apps.<p>I also feel that from a business point of view, relying on other people&#x27;s services is consistently a trap. Whether it&#x27;s social networks like Twitter, COTS like SharePoint, or something like Evernote, it&#x27;s always a trap. These businesses can break your code at any time they choose, shut off your service, or simply go under. It takes a lot of work circumventing their bugs and terrible APIs as well. Hats off for trying, but I don&#x27;t feel like a company like this is usually a good long-term investment.<p>Add to these problems the fact that most internet &quot;typical&quot; users would never use IFFT or &quot;get it&quot; the way it&#x27;s presented today. Moreover, most programmers want more control, something more powerful, or can just do everything here better themselves exactly to their use cases. Not seeing how this company is worth much even if it is &quot;useful.&quot; Profitable != useful many times."
2014-08-21T10:01:17.000Z,Show HN: Free social media publishing for teams,"Developer here. I created this because it was getting very difficult to manage teams and social networking accounts. Because every time a team member would be re-assigned, the social networking account passwords would have to be changed. Security was becoming an issue. This allows you to publish to unlimited Facebook, Twitter accounts. Am adding other services like LinkedIn and Google+ (if they give API access) soon. This service is absolutely free as compared to any other options available online (Buffer for Businesses, Hootsuite etc.). You can add unlimited team members as well as accounts. You can schedule posts as well as use the recommended feature. Happy to answer any questions that you might have. Thank you for taking the time to read this."
2014-08-03T06:18:43.000Z,Twitter's User Problem: Fastest Gains Are People That Don't See Ads,"The only trouble is that Twitter seems to be taking the opposite approach and blocking third party clients from functioning all together.<p><a href=""http://arstechnica.com/information-technology/2011/03/twitter-tells-third-party-devs-to-stop-making-twitter-client-apps/"" rel=""nofollow"">http:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2011&#x2F;03&#x2F;twitte...</a>\n<a href=""http://mashable.com/2012/08/16/twitter-api-big-changes/"" rel=""nofollow"">http:&#x2F;&#x2F;mashable.com&#x2F;2012&#x2F;08&#x2F;16&#x2F;twitter-api-big-changes&#x2F;</a>"
2014-07-14T02:11:22.000Z,Hardware Case Study: Why Lockitron Has Taken So Long To Ship,"Wow, you are all over this thread. I take issue with the way you are jumping in here with a lot of assumptions. Please give me a moment to respond to your assertions point by point.<p>There is nothing glamorous about airing our faults and where we went wrong along the way, the points you enumerate were our beliefs to a &#x27;T&#x27; when we launched our second product a year and a half ago. A handful of these are right while others are mostly wrong or misguided.<p>1) This is a tough one to address. I see elsewhere in this thread you made the same mistake we did - namely thinking we could get 2mA with PS-POLL. While possible in the lab, that is simply not the case when working under conditions we&#x27;ve seen in the wild. Hypothetically if that were true you could see near instantaneous WiFi all the time. We were optimistic this may be possible but didn&#x27;t want to bet on it. We made the call that WiFi is advertised with instant response when someone is at the door and delayed response when in power save mode. If there is confusion we are quick to correct on Facebook, Twitter, and even our own blog[1]. Firmware updates to our WiFi chipset look promising but we are not committing to this.<p>2) Determining intent is a hard problem but hardly a fool&#x27;s errand. We don&#x27;t do this through just one BLE radio using RSSI alone as your comment implies[2]. The examples you give are both solvable with what we&#x27;ve built today. The harder problems come from platform inconsistency between iPhone and Android API&#x27;s. Android for instance only recently announced BLE support and when they did, the phone could only operate in one out of the two roles. Clearly other companies think similar home vs away intent is worth developing too[3][4].<p>3) Building a proper prototype without functional mechanicals is insane. Don&#x27;t do this. The other huge rabbit hole here is the word &#x27;reliably.&#x27; It&#x27;s like a client of a web design firm asking for 100% uptime.[5] The best you should do at the &#x27;hardware startup making a prototype&#x27; phase is to get it working on your target platform and solve known bugs so it works for 90 to 99.9% with loose specs or 100% of the time under tight optimal conditions. That said, things change. The way we were doing BLE security when we launched was thought to be secure. A ShmooCon talk instilled some doubts that while not broken it may not be the best foundation [6]. We rebuilt a lot of that with Diffie-Hellman and HMAC instead. We saw some connectivity issues with the new approach that were subsequently addressed. Other things change too. Our BLE chip switched from not using signed licenses to using signed licenses between updates. This caused us a bunch of frustration.<p>4) 40 hours of work to review a design is probably too little. We spent closer to 300 hours on the EE side with the most senior hacker we knew [7]. We worked with another firm on mechanics for 11 months prior to launch. In retrospect that feels about right for how much weight mechanical problems are vs electrical.<p>That $25-$30 number you site IS misleading. As an analogy, it is almost certainly possible to build a robot which can walk a straight line across a plastic table for this but getting it to walk across arbitrary terrain will cost you if your operating specs are unbounded (think Mars rover.) We know how to build a device that fits over locks for $25 without PCB - we are not happy with what level of performance that gets us.<p>5) This product however is not designed to be a replacement lock. We have made one of those in the past[8]. Saying something is wrong&#x2F;inefficient is true for anything asked to do something other than what it is made for. This model of Lockitron is designed to fit over a wide variety of existing locks precisely so that it can work for renters who can not change their locks. It is designed to do it in a way that it does not requires you to take your lock apart so it can be installed quickly and with next to zero mechanical aptitude. It does these things insanely well.<p>The numbers you site for gear vendors are again misleading. Yes, one can get gears for this cost in this time but you are shifting the burden of development and tooling elsewhere. Making this tradeoff in this case gets us towards a local maxima that is not the product&#x27;s desired function.<p>6) This is a bit naive. You don&#x27;t build to the spec if you&#x27;re seeing different results in the field. We saw this to be the case with sticky locks and jammy door frames. Other new locks can be put on a clean installation, we have to work with what&#x27;s there. Similarly, the Bluetooth 4.0 and 4.1 specs promise a lot of things which neither Apple nor Android support. In this case we build for what effects our customers experience not a certification checkbox - especially when that means exceeding the certifications standards.<p>And if anything that is the takeaway here. Building something to spec is a finite task with an estimable amount of work and calculable delivery date. Having real world conditions conflict with what was spec&#x27;ed introduces delays. Having conflicts across your product from metals and plastics up to software interfaces means these delays propagate.<p>You make the tough calls. You ship.<p>[1] <a href=""http://blog.lockitron.com/post/84539548097/debugging-jams-wifi-battery-notifications"" rel=""nofollow"">http:&#x2F;&#x2F;blog.lockitron.com&#x2F;post&#x2F;84539548097&#x2F;debugging-jams-wi...</a>\n[2] <a href=""http://community.lockitron.com/t/sense-will-it-sense-if-my-phone-is-inside-or-outside-of-the-house/161/3?u=pmg"" rel=""nofollow"">http:&#x2F;&#x2F;community.lockitron.com&#x2F;t&#x2F;sense-will-it-sense-if-my-p...</a>\n[3] <a href=""https://developer.nest.com/"" rel=""nofollow"">https:&#x2F;&#x2F;developer.nest.com&#x2F;</a>\n[4] <a href=""http://blog.dropcam.com/tag/dropcam-alerts/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.dropcam.com&#x2F;tag&#x2F;dropcam-alerts&#x2F;</a>\n[5] <a href=""http://serverfault.com/questions/316637/100-uptime-for-a-web-application"" rel=""nofollow"">http:&#x2F;&#x2F;serverfault.com&#x2F;questions&#x2F;316637&#x2F;100-uptime-for-a-web...</a>\n[6] <a href=""https://lacklustre.net/bluetooth/"" rel=""nofollow"">https:&#x2F;&#x2F;lacklustre.net&#x2F;bluetooth&#x2F;</a>\n[7] <a href=""http://en.wikipedia.org/wiki/Lee_Felsenstein"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lee_Felsenstein</a>\n[8] <a href=""http://www.wired.com/2011/05/lockitron-unlock-your-home-with-your-cellphone/"" rel=""nofollow"">http:&#x2F;&#x2F;www.wired.com&#x2F;2011&#x2F;05&#x2F;lockitron-unlock-your-home-with...</a>"
2014-07-10T12:51:05.000Z,Show HN: Free Social Network For Geeks,"Hi, I am the creator of OtakuJam, and this is my first post on HN. I am looking for testers to help me test and fine tune my new social network project. I am also offering a contest for active members which ends next month for a $20 amazon gift card as a little incentive to help me gain some much needed testers.<p>Otakujam is a new social network (built on the buddypress engine) aimed at helping geeks connect with other geeks both online and off. It has entered open beta on 5&#x2F;27&#x2F;14 and is seeking testers to help suggest new features and test existing features.<p>It offers many familiar social networking features such as an activity stream where users can post updates, share photos and videos, and share and comment on other users&#x27; activities.<p>You can friend other users, or choose to follow them instead - the difference being that a follow does not require a confirmation from the other user. Users have complete control over their privacy levels and can choose which profile fields to make public, hide completely, or show to friends only.<p>The site&#x27;s main feature is &quot;Otaku Match&quot; which is a matchmaking script that allows users to search for other geeks based on the information included in their profiles.  All of the profile fields and data are customized to be of high relevancy to geek culture and include things such as a user&#x27;s favorite anime, or what books they are reading, or their favorite board games. Users&#x27; profile text is automatically converted into hyper links which when clicked, will take you to a page which displays other users who share these interests.<p>Most recently (in early July) OtakuJam began to focus on curated news content from geeky-related RSS feeds. It also added the ability for members of this social network to add their own articles, game reviews, and editorials which will appear on the site&#x27;s front page and news sections, as well as in a personal blog that each user can access via their OtakuJam profile. I have plans to add many game reviews and editorials myself over time, but mainly right now, there&#x27;s a lot of curated news more so than original content. Hopefully as time goes on and we get more active members, this will change and become a more balanced arena for news from the web as well as fresh original content.<p>Users can also join and create groups or participate in chat rooms or forums with other members. There&#x27;s also an events section where users can post and search for offline real world events which allows users to search as close as 5 miles or up to 100 miles from any given location.<p>Users can easily update their OtakuJam profiles by connecting to any of their social media accounts such as importing their instagram or flickr updates into Otakujam, or being able to use twitter to tweet out their OtakuJam status updates. Status updates can include hashtags and mentions which work similar to twitter in that they alert the person mentioned or help index content based on topic tags.<p>New features are being added constantly and a few upcoming features include the ability to watch streaming anime content and a steam api integration to display your games and achievements.<p>If any of this should happen to interest you we would love to see you join up on the site. Even if you decide not to join, if you have any feedback to give about the site, feel free to share it here in the comments.<p>Thanks for taking time to view my post, and have a happy Thursday :)"
2014-07-05T12:54:06.000Z,Farewell Node.js,"I think the issue is we&#x27;ve been slowly accepting that the node  is the right way to do things. Five years of working with someone will do that to you. If you follow me on twitter you probably see me complain about it in various ways all the time, it&#x27;s not that I&#x27;m bored with it, node&#x27;s problems are real and some people just seem to ignore them, or maybe just deal with them because they know backwards compat can&#x27;t be broken immediately. It has always bothered me that people would advocate such broken systems (streams etc) when real-world alternatives were better even before now, even C has a much better example of what a stream should be.<p>I&#x27;m definitely not the only one writing large systems, but I think the tolerance level varies per developer. Also plenty of people make a living&#x2F;name from Node, of course they&#x27;re more likely to praise it than to be honest about its faults, I&#x27;m definitely a minority in that respect. Having broken concepts is one thing, but resisting change when they&#x27;re obviously broken is not a good thing. Many of these same people make money from consultation, where it&#x27;s advantageous to have a broken system. I&#x27;m not trying to screw them over but someone has to be honest.<p>It took years to get .addHeader() in because no one in core believed in a progressive API, they didn&#x27;t use node in real-world applications to see the need. This still happens all the time, take npm-www for example, Isaac is a rad guy but him aswell as most other &quot;core&quot; community members advocated building tiny little things and stitching them all together, and just recently realized that in practice this doesn&#x27;t scale, thus ended up going with Hapi. This lack of insight is all over Node as a community.<p>It&#x27;s hard to describe well, but I hope people will try Go (or similar alternative), you&#x27;ll really see how much more robust it is. If node fixed its conceptually flawed event system, rewrote http so it wasn&#x27;t awful to work with, and fixed streams then we&#x27;d have a pretty good system to work with. It&#x27;s <i>very</i> easy to pass off problems with node as problems you&#x27;d have with any platform, but that&#x27;s unfortunately just not reality."
2014-06-30T02:31:39.000Z,Tesla Model S JSON API,"As with a lot of things in REST, the answer lies...in your browser. How did you know how to answer that last comment? You clicked a link for it. Not everything about REST can be answered by &quot;just look at your browser&quot;, but a lot of things can.<p>If you follow a link you don&#x27;t care what the URL is. You never needed to type out &quot;&#x2F;reply&quot; to use Hacker News, you don&#x27;t need to do it to use an API. That&#x27;s what the article is about.<p>The actual URL is unimportant, you just need to know what the link for &quot;&#x2F;api&#x2F;vehicle&quot; returns to do something useful with it. Like you knew that &quot;&#x2F;reply&quot; would give you a form with a place to type out a reply.<p>&gt; I don&#x27;t even know how I&#x27;d write a client against a server that arbitrarily changes endpoint URIs.<p>The thing is, you don&#x27;t have to. I can write one for you and you&#x27;ll never need to write another one again. You could use it and just have to implement the part that matters to your application, the semantic of it. You wouldn&#x27;t need to hardcode anything, or even handle URIs at all.<p>You could use it for Tesla&#x27;s API, Twitter&#x27;s, Facebook&#x27;s, whatever. If they used links you could use the exact same client for anyone, just needing to re-write the logic part (like creating a post on Facebook, a tweet on Twitter, etc).<p>Problem is hardly anyone actually implements links so you can&#x27;t do that. It sounds like utopia but it&#x27;s just the product of extreme decoupling. It&#x27;s not really any different than browsers."
2014-06-29T18:10:05.000Z,What's an idea or creation that you've had success with locally that I can copy?,"well, none of these are really implemented (yet) but here you go<p>SW Only<p>1) An all-in-one transport app. You&#x27;d have a single credit wallet you could re-charge on a monthly&#x2F;weekly&#x2F;as-needed basis. You set in your profile for how long you are willing to wait for a ride(lets say +&#x2F;- 15min), and how far are you willing to walk from your current location(lets say r500m) + other criteria if you please(like ferraries-only:). Rates could be something like few cents&#x2F;km for &quot;civilian&quot; drivers(standard car-sharing - could be problematic depending on the legislature&#x2F;generated profit for the driver), few bucks&#x2F;km for cabs, pub transport based on routes&#x2F;times and - dynamic pub transport routes per km as well. Lets say there is a after-work beer with colleagues planned so you can&#x27;t drive to work by your self. During breakfast you just choose a destination(predefined for freq. places), desired time and a &quot;hitchhiker sign&quot;. All drivers doing the same&#x2F;similar route(with criteria compatible with yours) would be notified .. a few &quot;accept&quot; clicks away&#x2F;maybe a quick look at the drivers profile(badges&#x2F;km driven&#x2F;reviews etc) and your off to work. No drivers available? Your app would show you all public transport possibilities(color coded based on compatibility with your criteria) + cabs in your area - few clicks away and you&#x27;re set(either buying a ticket or ordering a cab). Double-validation for payments based on transport type - no more waiting on a bus stop for 2 hours watching 100&#x27;s of driver-only empty cars going your direction + a public API would mean that bus companies could also use small 6-8 passenger buses and dynamically create new&#x2F;amend existing routes based on the demand(200 people heading to a business park across town(C) from destination A, 100 from B to D(which is near C) between 0800 - 0900 &gt; change route via B .. if time intervals are met(like 1h from A - C) ) ++ all the data flowing your direction could also be used as a waze alternative for even better routing +++ you could profit by selling api data&#x2F;on % from commercial transport partners) + have awards for car-share folks like free oil&#x2F;filter changes after 10k km&#x2F;free coffee after 20km between 2200 - 0600 etc..). If you are in EU, these projects are highly welcomed..<p>2) We need a distributed decentralized(p2p), no-authority write once read many storage solution for &quot;our civilizations data&quot; like news&#x2F;general knowledge. It has to support versioning, encryption, deduplication, store synapses between relevant data, be self-healing, layered, nodes monitoring&#x2F;promoting(demoting)&#x2F;caranteening each other if needed, role-based - build on premise that all* of the nodes are&#x2F;can become malicious actors(..). Everyone should be able to run a node on his nas @home&#x2F;mobile device, assign roles to his devices etc .. general storage for all things public.. + it should support anonymous document uploads(lets say an indenpended journalist from syria wants to get his&#x2F;her story published &#x2F; someone working in a big-co comes across some very interesting public-interest documents he;d like to publish and doesn&#x27;t trust honey-pot assange&#x2F;media) - all big problems on their own .. regardless of the client app using the data(if you are running a auto-moto&#x2F;pro-(enter political party) website, you may apply as much filtering as you wish), the user should still be able to get&#x2F;contribute to the &quot;publicly-generated&quot; synaptic nw of a news story as stored on the backend + this is the bare minimum for other systems we desperately need to reform(the &quot;no-trust&quot; premise of it) so a good way to dive into this problematic<p>3) services on top of 2) .. and there are many ..<p>4) DNS, routing, ssl&#x2F;alternative, smtp replacement!  .. + ton of things you could do to make this world a better place.. please just don;t waste it on another twitter app<p>5) Clouds are here to stay, what has to change is the way we look at and work with data + connected with 2) + a few old concepts ms thought about pioneering a few years back, maybe its time for - yet another - linux distribution, combining best of today&#x27;s storage array internals, embedded systems, containers&#x2F;vm technology and security(..). In combination with some dedicated (hopefully usb-sized) hw .. could be a interesting time-waster<p>SW + HW<p>1) Easy-to-use&#x2F;build RF-net kits for low-bandwidth applications(irc&#x2F;messaging fe) - pick a protocol&#x2F;design your own, design a hierarchical topology of clients, ap&#x27;s, retransmitters, keep an eye on per-country rf encryption restrictions and hope you&#x27;ll never have to use it as your primary means of communication(eg no &quot;accidents&quot; on our main optic backbone)<p>2) HW keys to your cloud data&#x2F;apps - turning your PC into an accessory&#x2F;treating it the same like a cloud service provider with computing&#x2F;storage services available based on the pc-os setup .. maybe the x-server architecture could finally become applauded ..<p>&quot;HW&quot; Only<p>1) The idea of public work-places is great! soldering sets, measuring gear, 3d printers, tools for lease, benches for alu&#x2F;wood work etc - would probably be a hit anywhere(+ that equipment costs too much&#x2F;takes years to gather at home.. ) - there is a hobbyist in most of us + in combination with a caffee&#x2F;&quot;fun&quot; area&#x2F;library and city funding, you may even get into some green numbers<p>2) In combination with 1) - electronics tuning shop - if you like to get your hands dirty(building hw slider switches into phones&#x2F;nbs, custom cases&#x2F;hw customization - router fw&#x27;s etc) - you could get some traction if you;d presented your self as something underground&#x2F;anti-establishment .. these days..<p>3) bio and localized farming - huge opportunities, really bad business models(we;re talking about real bio producers struggling with the rising regulatory pressure lobbied by the big guys, not the so-called bio farmers selling out to those big-co&#x27;s) - monthly payments with 2x&#x2F;4x a month &quot;basket&quot; deliveries of seasonal food to your doorstep with some it tech in the mixture + insurance coverage for the farmer +++ .. ok I&#x27;m hungry - sry for this half-baked not thought through &#x2F; naive &#x2F; unfeasible list and good luck .."
2014-06-28T17:52:28.000Z,Ask HN: What projects are you working on?,"I&#x27;m working on an on-demand developer hub for APIs or software. Basically, dev.yourstartup.com. I want everyone to be able to have beautiful, Stripe&#x2F;Twitter&#x2F;Parse quality documentation. Fully customizable, all docs are collaborative (like a wiki) and versioned, support section, API signup, sync with Git(Hub), error lookup, blog&#x2F;changelog, etc.<p>(If you&#x27;re interested in beta testing, email me at my username at gmail)"
2014-06-24T04:56:43.000Z,Goodbye Heroku,"I don&#x27;t think you are in any position to decide what I do or do not have a strong understanding of. Let&#x27;s break down your thoughts:<p>1.) Downtime - You seemed to gloss over my primary point. The downtime today could have been completely avoided if Heroku did not opt to do a 2pm EST scheduled maintenance. This was a very large risk they took and it blew up in everyone&#x27;s face.<p>As far as resolving downtime. I stand by my original statement that a PaaS like Heroku cannot recover as fast on average as another solution. They have too many customers that they have to get up and running.<p>5) Buildpacks - I&#x27;ve been fielding this one on Twitter all day and am considering writing another blog post. I didn&#x27;t really give much weight to this one and that opens it up to attack pretty easily. Here is my point:<p>Buildpacks in general do not suck. Heroku&#x27;s implementation of Buildpacks sucks. Customizing Heroku buildpacks is a nightmare. Maintaining said fork is nearly impossible. There is no versioning of the buildpacks. There is no way to know if&#x2F;when slugs are updated and my fork is no longer useable or needs to merge in upstream changes. Getting anything into the official buildpacks is a political nightmare. Adding CLI tools not in the heavily stripped down Ubuntu AMI is a gigantic pain in the ass.<p>But if that is not enough for you I&#x27;ll end this point with David Dollar who did a ton of work while at Heroku with its buildpacks <a href=""https://twitter.com/ddollar/status/481201978391801857"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;ddollar&#x2F;status&#x2F;481201978391801857</a><p>re: puppet - I&#x27;m not sure why you&#x27;re hammering me for Puppet as I never mentioned it. You seemed to assume that this is what we will use.<p>3) Pricing - I dismiss most of your argument unless we&#x27;re talking about Heroku&#x27;s database hosting. Their DB hosting is awesome and top-notch. Their app hosting has become a less than stellar. I don&#x27;t even know what I&#x27;m paying for anymore. To me managed devops means I don&#x27;t ever have to deal with pager duty or I can just hand customers over to someone after we launch their product. That&#x27;s not Heroku, not by a long shot. At best we&#x27;re getting security fixes and system updates applied. At worst we are paying a premium on resold EC2 instances for a deploy shell script that has been freely available for a while now.<p>I don&#x27;t know about you but I don&#x27;t really spend that much time swapping the underlying language. At least not without some heavy consideration, what we go with is usually thought out from the start of the project. To me, I&#x27;m not interested in the least in being able to swap out MRI for JRuby with a change of a line. In nearly 10 years of professional Rails development I have maybe had to do this twice. Upgrading Ruby is a different story, but that is also not something that should be done lightly.<p>Today&#x27;s post was a culmination of years of frustration with the platform. I&#x27;ve had it, we&#x27;re done with it. Moving on. Good riddance."
2014-06-05T20:13:22.000Z,Twitter in talks to buy online music firm SoundCloud,"It&#x27;s amazing how much effort SC put in making UI more sleek yet degrading UX thoroughly.<p>Stream is useless in its current form. It&#x27;s much inferior to Dashboard (which wasn&#x27;t perfect in the first place, but was quite usable, contrary to that one). For people taking SC activities seriously, like trying to listen most of the tracks coming from people they follow, there must be a way to hide&#x2F;collapse tracks that were already listened to (like removing in dashboard). What about favorites of people I follow? I maybe not use it extensively, but it&#x27;s a great way to discover new tracks. Dashboard provides it all and has a few tabs with different filtering and independent hiding (removing) and I would fix only this independence - removing entry in one tab should be enough and work for the other ones too - and improve the &quot;More&quot; button, to load at once everything that is left.<p>What should be clearly told is that new UI is definitely against any more thorough comments. Come on, showing only a few words? It&#x27;s like you encourage SCers to leave these useless comments. And there is no place for discussion at all. Personally I like to discuss things. Yet I understand others that don&#x27;t like comments at all on SC (because well, they are in fact often completely useless, as lot of SC users can express only praises or nothing), so they should be able to easily hide them.<p>Where are the features that everyone hoped for? Where are the marks next to the tracks that I already commented on them (and how many comments that were)? Where are the marks next to tracks that I already listened to? SoundCloud Next that was turned to be default is still more of a disaster than improvement. And it&#x27;s sad.<p>Somehow this I-don&#x27;t-care-about-UX-but-let&#x27;s-make-it-look-sexier-at-least attitude is becoming quite popular in internet, which is a paradox, because nowadays the opposite mind should be predominant. GitHub did in the last few years similar changes (they had a few good ones too, though) and had to disable comments in their blog to stop the never ending complaints... Another thing: less is more, but too less isn&#x27;t more at all. You have to preserve some basic functionality, otherwise removing features is like slapping users in the face. Here I can give Minus as an example - file sharing site that turned back into media sharing site w&#x2F; most of the features removed.<p>I think about doing some sane front-end using their API, but I always lack time to do stuff after hours...<p>If being bought by Twitter will help SC crew work better on UX, then I really hope it will happen. Otherwise it won&#x27;t really change anything."
2014-05-23T17:25:07.000Z,PDFium: Chrome’s PDF rendering engine is now open-source,"Sorry, I don&#x27;t check HN often. As we discussed on Twitter &amp; IRC:<p>It&#x27;s just an OS sandbox currently. pdfium previously worked with NaCl, with a non-V8 JS VM (work done by Bill Budge). V8-on-NaCl used to work, I think it may have bitrotted since then, but it used NaCl&#x27;s dyncode modify API to do PIC. The GC moves code too, so extra page permissions need to be changed when that&#x27;s done, but I think that&#x27;s the extent of code modification that needs to be handled for a JS JIT to work on NaCl (on top of the sandboxing)."
2014-05-19T22:11:54.000Z,Famo.us open to everyone,"First famo.us employee here, want to give people some food for thought to consider as you gripe about things like zoom and and the scrollbar (rightfully so). Some of the more controversial points, especially those regarding accessibility and progressive enhancement, made below are my own.<p>I think I&#x27;m the only person at the company that browses the web with JavaScript disabled, so I know how broken the original world wide web from when I first went online in 1994 is. I also remember using text-only browsers like lynx, and demonstrate it to co-workers on occasion. Lastly, I&#x27;ve been doing the web app development schtick for several years now and seen the good and the bad.<p>With all that in mind, the push towards progressive enhancement starting in 2003 when AJAX was just starting to become popular has proven to be a false prophet. IMHO, no idea has done more to make the web less accessible while also holding it back in terms of interactivity. You simply cannot use the same abstraction for both documents and applications and expect decent results for either.<p>What we should have done instead is allowed the two to diverge long ago and especially after 2007 when mobile computing took off and that change in screen size afforded us the opportunity to return to screens not all that dissimilar from those I remember using in &#x27;94. The first iPhone had a effective resolution of 320×480. You can effectively show as much on an iPhone as a 1994 computer monitor and have it be readable on both. In fact that&#x27;s basis of the &quot;Mobile First&quot; design paradigm that frameworks like Zurb Foundation have pushed for. Designing content for a single-wide column that scrolls up and down, that you can jump backward and forward on via anchor hypertext references was a really smart abstraction for lots of content. The site <a href=""http://www.motherfuckingwebsite.com/"" rel=""nofollow"">http:&#x2F;&#x2F;www.motherfuckingwebsite.com&#x2F;</a> illustrates this poignantly.<p>The technology direction we should have taken should have made sure that search engines, the blind (or otherwise disabled or dexterally challenged) actually remained the first class citizens on the web instead of taking the back seat to print designers and interaction designers. It&#x27;s easy to take the content designed for those constitutents and make it available via APIs that can then be consumed by people making rich web apps.<p>We even had something like that, it&#x27;s called RSS and it is glorious. RSS may have actually survived if it had not been for progressive enhancement which was crap but just good enough that people could get away with killing RSS off. Every technologist should make themselves familiar with the concept of path dependency (this Slate articles on the persistence of rockets as our primary way of putting objects in space is illustrative: <a href=""http://www.slate.com/articles/technology/future_tense/2011/02/space_stasis.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.slate.com&#x2F;articles&#x2F;technology&#x2F;future_tense&#x2F;2011&#x2F;0...</a> ). Had progressive enhancement not become the road taken, no one would have ever argued to kill off RSS in favor of a hack jobbed DOM implemented where maybe 1 in 100 developers actually understood how to actually implement accessibility. RSS and other means of programmatic content consumption would have become the prime way of being indexable by search engines. Everyone would have maintained content that way because it would have been in their self interest to do so. Not only that, progressive enhancement is just usable enough to not get sued under the ADA. Without progressive enhancement, businesses (read: at least every fortune 500 company and then some) would have poured gobs money to into making sure they have the digital equivalent of wheelchair ramps. Progressive enhancement gave everyone the opportunity to do the least amount of effort and still maintain a defensible position if challenged legally.<p>The screen reading experience has been shit for like for ever and it&#x27;s only gotten worse as designs have become more complex. Skipping over the level of abstraction that made content usable programmatically not only impoverished those that need it, but those who don&#x27;t as well because we&#x27;re deprived of richer, more flexible APIs.<p>Having worked with webapps for a while, I think one of the most amazing improvements in the last 5 years has been the move towards displaying content on many more screens than just the desktop. This has forced us to go back to API solutions (usually REST, but sometimes RPC over websockets) that often ape what we originally tried to accomplish with RSS. This is the only sane way to provide content that needs to be displayed in different ways, from a Mobile First single long scroll page rendered by the server to a Famous&#x2F;Ember&#x2F;Angular&#x2F;Backbone&#x2F;React app that takes that server-rendered page and replaces it entirely with a rich interactive experience in the browser.<p>We (at famo.us) don&#x27;t yet have a solution for this future that treats everyone as a first class citizen, but we eventually plan to address this if the community doesn&#x27;t tackle it first. We&#x27;ve been inspired by a few attempts at figuring out how to achieve this. Spike Brehm and crew over at AirBnB have been exploring this with Rendr, that works with Backbone.js, <a href=""https://github.com/rendrjs/rendr"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;rendrjs&#x2F;rendr</a> , and August Lilleaas has worked on a solution for React, <a href=""http://augustl.com/blog/2014/jdk8_react_rendering_on_server/"" rel=""nofollow"">http:&#x2F;&#x2F;augustl.com&#x2F;blog&#x2F;2014&#x2F;jdk8_react_rendering_on_server&#x2F;</a> . We feel like there is potential for a generalized solution that doesn&#x27;t need to be necessarily tied to how one framework works.<p>If you look deep at Famo.us, we don&#x27;t throw out the DOM wholesale, instead we use the DOM where it matters. In Famo.us, there is a concept of a Surface (which is similar to Layers in CoreAnimation). The Surface is basically a container for HTML Document Fragments, usually fragments that are very strongly structured semantically. The entire scene graph above each Surface node basically helps you programmatically abstract away all the bullshit that many today handle awkwardly with levels and levels of DIV hell controlled by JavaScript. This is not only the abstraction that makes building things in Famo.us easy and fast, but also provides a boundary where content gets lumped into semantic chunks that oftentimes should be consumable for use in a long-scroll, semantically rich, Mobile First design where navigation is hyperlinked anchor based instead of spatial navigation.<p>When browsers were first designed, they made a decision to have a 1 to 1 relationship between the window object and the document object. While reasonable at the time (remember: small screens, low bandwidth, high latency), this proved unscalable to larger screens, greater bandwidth and lower latency. Take Twitter for example. Twitter.com is basically an application for displaying a tiny document called a Tweet. There hundreds of tweet documents shown at a time. The code for tweets is semantically rich. The code for the twitter app? That&#x27;s DIV hell. This is what Famo.us helps with. Like Flash and Silverlight before it, it helps apps be apps, but unlike its predecessors, it allows documents to be documents. Keeping these two separate keeps abstractions from leaking into each other in the code you write.<p>So while some things may be broken, and the way its broken may inspire ire, it&#x27;s important to understand that it&#x27;s not where the puck is that matters, but where it is going. The scrollview we&#x27;ve made is still inferior to the native scroller in a few ways, such as missing keyboard bindings, but are temporary shortcomings that we and the community are going to address in time. Eventually the feature and quality gap will narrow and the Famo.us scrollview(s) will reach parity with native scrollers.<p>Furthermore, some of the abstractions in the Famo.us scroller are remarkable for their programmatic flexibility. When most people think of a scroller, they only think of three scenarios: vertical scrolling, horizontal scrolling and a pannable tiled area (like Google Maps or Open Street Maps). This is actually a pretty limited view of what&#x27;s possible to explore if you abstract a scroller to its essence. A scroller at is essential is a mathematical set with a curser and that all scrolling does (whether by mouse or keyboard) is move the cursor position in that set. When you think about it that way, many more things you&#x27;ve seen are scrollers. For example, the Apple Time machine view is a scroller in the Z-direction. CoverFlow is another scroller that is horizontal, but where the affine matrix transform applied to a surface is based on the distance of a surface from the cursor and inverts on each side of the cursor. One team of beta testers used the scroll view to display a DNA double helix. It was basically two position linked vertical-scrollers, where the positioner function didn&#x27;t just set the position on the Y-axis, but also manipulated the affine matrix to create the helix shape.<p>While probably not the best approach, even Google&#x27;s new interactive Rubik&#x27;s cube doodle could probably be implemented as a series of Famo.us scrollers. Each scroller would contain 12 surfaces (doubly linked in a ring), with pagination occurring at every three surfaces. The pagination function instead of translating the surfaces along only one axis instead rotates all the surfaces 90 degrees around an axis. All surfaces would belong to two scrollers &quot;perpendicular&quot; to one another at any given time, being lifted from one to the other and back depending on which one was in motion.<p>And since all this is based on the same scroller, which will eventually reach parity with native scrollers, it means that they get all the same features. Home goes to the top of a vertical scroller, the left of a western horizontal scroller, the beginning of the double helix or the begging of time in z-axis time machine like scroller. End does the opposite.<p>These examples just begin to scratch the surface of what&#x27;s possible when you expose primitives that map to mathematical concepts like a set and current index to developers.<p>Last, but not least, we&#x27;re going to look at all the feedback on the scrollview and try to address all the issues you all have encountered."
2014-04-30T21:45:07.000Z,Introducing Anonymous Login and an Updated Facebook Login,"What you say is not always true either.<p>I do Python mostly. Django? Fine. It has an excellent auth system out of the box. But that kind of auth system isn&#x27;t very flexible either. Now I barely do Django development today so please excuse me behind any insane changes.<p>Flask and Pyramid world? Custom auth to me. They both have community modules for auth stuff, but do I really like them? I am not the kind of guy just pip install random &quot;useful&quot; package these days. Let&#x27;s give another example. A year or two ago I tried to do social auth in some of my django and flask apps. Maybe I was dumb but using that social-auth library took me a while to get some of login working. Plus, the code was messy and buggy. In the end, I said screw that and implemented all of the custom login myself, just reading the official doc from twitter and facebook. That also took me a while but I knew the whole implementation inside-out. If I don&#x27;t trust my own implement because it is insecure, then I must spend the same amount of time inspecting other people&#x27;s custom modules.<p>The truth is, generic auth system is hard and is not flexible. In fact, too flexible can be a bad thing: <a href=""http://plope.com/pyramid_auth_design_api_postmortem"" rel=""nofollow"">http:&#x2F;&#x2F;plope.com&#x2F;pyramid_auth_design_api_postmortem</a><p>I like customized auth system based on the api provided by the framework - that&#x27; what makes Pyramid powerful to me. Sometimes your community auth module can have limitation that you probably have to hack around."
2014-04-23T18:35:32.000Z,An Eavesdropping Lamp That Livetweets Private Conversations,"I mean for spying tools. The C&amp;C is much easier with IRC, just have keyword triggers. You don&#x27;t have to have all the hassle of the Twitter API, IRC is just a byte stream.<p>As for the wider IRC. I&#x27;ve not found it a problem then again I&#x27;ve been in channel for nearly 20 years. My client is in channel 24&#x2F;7 so you only miss as much as you want to.<p>OTOH in that time I&#x27;ve gone from icq -&gt; MSN -&gt; googletalk -&gt; facebook chat. As IM support comes and goes from the big players as they get bored with it. The only thing that&#x27;s changed in IRC in that time is SSL transport."
2014-04-22T23:37:30.000Z,Project Naptha: a browser extension that enables text selection on any image,"Extension is awesome and while the code is messy, it has enough little jokes to keep you amused. For those looking to access the backend OCR service, it seems to be down right now, but will hopefully come back up soon.<p>Here were the API references I could find for the remote OCR:<p>- GET <a href=""https://sky-lighter.appspot.com/api/read/&lt;chunk.key&gt;"" rel=""nofollow"">https:&#x2F;&#x2F;sky-lighter.appspot.com&#x2F;api&#x2F;read&#x2F;&lt;chunk.key&gt;</a><p>- GET <a href=""https://sky-lighter.appspot.com/api/lookup?url=&lt;image.src&gt;"" rel=""nofollow"">https:&#x2F;&#x2F;sky-lighter.appspot.com&#x2F;api&#x2F;lookup?url=&lt;image.src&gt;</a><p>- POST <a href=""https://sky-lighter.appspot.com/api/translate"" rel=""nofollow"">https:&#x2F;&#x2F;sky-lighter.appspot.com&#x2F;api&#x2F;translate</a><p>Apparently the author was one of the winners of HackMIT 2013 according to some of the comments. Couple of fun things in there if you decide to poke around in the code. Jump into naptha-wick.js for the remote logic.<p>Note from the Dev (<a href=""http://challengepost.com/users/antimatter15"" rel=""nofollow"">http:&#x2F;&#x2F;challengepost.com&#x2F;users&#x2F;antimatter15</a>, <a href=""http://antimatter15.com/wp/"" rel=""nofollow"">http:&#x2F;&#x2F;antimatter15.com&#x2F;wp&#x2F;</a>, <a href=""https://twitter.com/antimatter15"" rel=""nofollow"">https:&#x2F;&#x2F;twitter.com&#x2F;antimatter15</a>):<p>&#x2F;*\n\tIt&#x27;s April 16, 2014.<p>It&#x27;s been six months since I started this project.<p>Just under two years after I first came up with the idea.<p>It&#x27;s weird to think of time as something that happens,\n\tto think of code as something that evolves. And it may\n\tbe obvious to recognize that code is not organic, that\n\tit changes only in discrete steps as dictated by some\n\tintelligence&#x27;s urging, but coupled with a faulty and\n\tmortal memory, its gradual slopes are indistinguishable\n\tfrom autonomy.<p>Hopefully, this project is going to launch soon. It \n\tlooks like there&#x27;s actually a chance that this will\n\tbe able to happen.<p>The proximity of its launch has kind of been my own little\n\tperpetual delusion. During the hackathon, I announced that\n\tit would be released in two weeks time.<p>When winter break rolled by, I had determined to finish\n\tand release before the end of the year 2013.<p>This deadline rolled further way, to the end of January\n\tterm, IAP as it is known. But like all the artificial\n\tdates set earlier, it too folded against the tides of\n\tprocrastination.<p>I&#x27;ll spare you February and March, but they too simply\n\thappened with a modicum of dread. This brings us to the\n\tpresent day, which hopefully will have the good luck to\n\tbe spared from the fate of its predecessors.<p>After all, it is the gaseous vaporware that burns.<p>*&#x2F;"
2014-04-18T17:15:43.000Z,RIP: Rapportive.  Finally stopped working today :(,"Funny, that twitter post is actually from 1 year ago today. &quot;12:23 PM - 18 Apr 2013&quot;.  That is a bizarre coincidence.<p>Regardless, I may have jumped the gun given that I seem to be the only one with an issue.<p>It stopped working for me despite the usual fixes.  Their homepage is returning a HTTP 421 as of this post. Google still had the cache of the site which makes me think that their site not working was a recent change.<p>Still not working for me unfortunately."
2014-04-18T17:11:14.000Z,Klout to Quietly Shut Down Cinch Q&A App,"One day startups will learn to stop building on negative&#x2F;zero&#x2F;low revenue social networks.  After hearing about Zynga getting diversified almost out of existence on Facebook, Dalton Caldwell being served with a &quot;Join us or else&quot;[1] from Facebook, and the Twitter 3rd party castration[2]; it amazes Me that people are still trying to build services on top of social platforms.  These platforms are generating very little revenue relative to their valuations. If you have this amazing service that starts making money or getting notoriety, it&#x27;s in the social networks best interest to stop your business and build the feature themselves.<p>[1] - <a href=""http://daltoncaldwell.com/dear-mark-zuckerberg"" rel=""nofollow"">http:&#x2F;&#x2F;daltoncaldwell.com&#x2F;dear-mark-zuckerberg</a><p>[2] - <a href=""https://blog.twitter.com/2012/changes-coming-to-twitter-api"" rel=""nofollow"">https:&#x2F;&#x2F;blog.twitter.com&#x2F;2012&#x2F;changes-coming-to-twitter-api</a>"
2014-04-10T18:47:51.000Z,When Google Decides To Delete Your App,&quot;Don&#x27;t build your app on Twitter or FB&#x27;s API. Any change can kill your business&quot;<p>&quot;Don&#x27;t put all your eggs in 1 basket and build a SEO-based startup. 1 algorithm change can flunk your business&quot;<p>&quot;Don&#x27;t build your platform on the Apple Store or Play Store. Google can decide to take away your app anytime&quot;<p>&quot;Don&#x27;t base your business on Adsense. They can ban your account anytime&quot;<p>..what&#x27;s left?
2014-02-11T22:13:25.000Z,Ask HN: Not sure what to do with my side project.,"The number of tokens the site had (forgot what it was) before the final API changes that limit tokens was rather high.  It was well over 100k and based on Twitter&#x27;s rules, any app that had over 100k tokens would be able to go to 2x that number.  I believe the app had somewhere around 600k tokens at the time so there&#x27;s still some room for growth.  Though the plan would be move from solely Twitter-only to something covering more social networks or create its own network.  Not sure yet."
2014-02-11T21:39:42.000Z,Ask HN: Not sure what to do with my side project.,He said he said it up before they imposed their API limits. So I suppose all pre-change signups remained and it is likely that the OP is unable to signup any new users through the twitter API.
2014-02-11T19:47:21.000Z,Bitcoin withdrawal processing suspended,"The Bitcoin protocol is the Satoshi client; the Satoshi client is the Bitcoin protocol.  No Bitcoin protocol exists outside of the single source of truth, which is &quot;how does the Satoshi client actually operate?&quot;<p>Both exchanges use the JSON&#x2F;RPC interface to the Satoshi bitcoin client.  That is the One True Way to use Bitcoin to develop Bitcoin-consuming applications.  To do otherwise is madness.  (I&#x27;ve seen explanations that Mt. Gox was using a custom client, but I believe they mean &quot;Mt. Gox was using a custom system which took care of bookkeeping for itself, because the Satoshi client cannot operate thousand of wallets in any sane fashion, but used the Satoshi client for interacting with the Bitcoin network.&quot;)<p>The Bitcoin RPC interface exposes many methods.  I don&#x27;t have intimate knowledge of which one these exchanges were using, but since they all have similar issues, let&#x27;s assume they used sendtoaddress.<p>The message signature of sendtoaddress is (pseudo-code):<p><pre><code>   #returns transaction_id\n   sendtoaddress(from_account, to_bitcoin_address, amount, optional_message)  \n</code></pre>\nThe mistake which both exchanges made is they assumed transaction_id is the same transaction_id used for gettransaction(transaction_id).  It is.  If you send a transaction, wait an hour, and then get it by ID, that will work.<p>But it isn&#x27;t.  Transaction ID means absolutely nothing.  It can be changed by any party, worldwide, for up to one hour after the invocation of sendtoaddress.  If you use gettransaction(transaction_id) and it returns nil, that does not prove that the transaction you previously created did not succeed correctly.  You should not attempt to retry the transaction until first verifying that you have all the coins you started with and that the recipient does not have some of your coins.  You can conveniently do this with an O(n) scan over all Bitcoin transactions ever.  (Someone pointed out to me on twitter that it isn&#x27;t O(n) if you have your database indices set properly.  Well, yeah, true.)<p>You&#x27;ll need to know what addresses you actually sent from, which is obscured by the sentoaddress API described above, for that scan to succeed, so essentially you&#x27;re going to reimpliment much of the Satoshi Bitcoin client, particularly around the area of wallet management.  Don&#x27;t reimpliment everything, though -- down that path lies madness.  Also, try not to make any bugs anywhere, particularly not the kind which only show up when someone tries to steal from you.<p>Good luck!"
2014-01-27T20:57:53.000Z,Why isn't People-Centric UI Design taking off?,"The article brings up a good point, sometimes it makes more sense to start with the person. For example, let&#x27;s say I need to get in touch with my friend to quickly inform them of a change to our plans.<p>Open Skype? Not online. Check Facebook, nope, they&#x27;re not on. Messenger? Nope. Ok, I&#x27;ll open my contact book, and get their number to call.<p>Wouldn&#x27;t it make more sense to simply select the person I&#x27;m trying to reach, and see what platforms they&#x27;re online, so I can choose my contact method?<p>Or what if I want to see what&#x27;s new with one friend? I should be able to click their name, and see their facebook changes, new tweets, status updates, etc.<p>Of course, this isn&#x27;t always the case, I might want to open Facebook without plans to browse a particular person, or I might open Skype just to see who&#x27;s online that I can video call.<p>So, there are times when I need to take both routes. They should both be available so I can choose either. It&#x27;s complicated to aggregate content from a variety of sources into a single page, so it&#x27;s not a surprise why this option isn&#x27;t frequently available. You would almost need a new standard, so HN could provide an API for a user&#x27;s comments, posts, etc, and Facebook, Twitter, Reddit, etc, all do the same. Then I can build an app that merges all of this information together. So a user opens the app, and creates a page for John, enters John&#x27;s Facebook profile, Twitter&#x2F;Reddit&#x2F;HN handles, and everything appears in a single place. However, these sources then get less direct traffic, and therefore less revenue, so it&#x27;s unlikely they would jump on-board."
2014-01-20T12:44:36.000Z,Show HN: Fetch your last tweet (to show on your site) hassle free,"Since Twitter changed their API to require authentication on every request about all the sites I&#x27;ve made got broken. They all had this &quot;Last tweet&quot; bubble that suddenly didn&#x27;t work anymore. Now I fixed it. Instead of changing every site back-end code to contemplate an authenticated request to Twitter&#x27;s API, I made a separate web app that does that and only that. It accepts cross-origin requests and delivers your last tweet in additional formats to fit your need. It even auto link your URLs and mentions. Now I made it public. Hope you enjoy it."
2014-01-08T03:14:22.000Z,"Hacker News down, unwisely returning HTTP 200 for outage message","Not every webpage is created equally.<p>When we say API, we usually think of it as Twitter API that sort of thing, which we can send a JSON or XML and get back something easily parasable.<p>Sites like HN doesn&#x27;t have that kind of service. Instead, it returns HTML. That&#x27;s fine. No one said API can&#x27;t return HTML.<p>When some part of the Twitter API becomes unavailable, the API server should return 503 when we asks those APIs to return response. If these bad APIs are also used to power some part of the frontend, then the frontend will not work properly. For example, viewing thumbnail from dashboard may be down. But the rest of the page is functioning. In that case, you can&#x27;t send 503 from the frontend. It doesn&#x27;t make sense. So if any crawler reading Twitter.com it shouldn&#x27;t see 503 when it hit the home page.<p>When HN is down, it should return 503. There are two reasons. First, HN is not functional anymore. The page you see may just be a maintenance page configured in Nginx, much like 404 error page. Secondly, HN is itself an API service. When it is broken, it is broken. It just doesn&#x27;t work anymore. When you try to access it through a Python script, it doesn&#x27;t return in the format you expect it to return. When you debug you realize it is not returning anything like you were expecting because most of the HTML structure is gone. This is not an API format change. It&#x27;s simply the backend is not functional anymore.<p>And semantically, when your site is under a maintenance mode, 503 makes sense. 200 is not that evil. It just doesn&#x27;t give anyone a better clue."
2013-12-19T13:37:20.000Z,How the first PHP functions were named,"I think the latest PHP APIs are the least of your problems if you&#x27;re running sites with code that hasn&#x27;t been touched in 15 years:<p>* new security threats that have been discovered in that time which needed to be coded against (In the last 15 years, a lot has changed with the approach we have to building secure sites).<p>* newer web standards and browsers - thus compatibility on the client side might now be an issue.<p>* different computing paradigms (we use touch interfaces where hover-over menus wouldn&#x27;t function. There&#x27;s a massive range of different client side screen resolutions and aspect ratios these days too).<p>* different methods of sharing content (for some types of sites, supporting OpenGraph and Twitter Cards is pretty important if you depend on your content getting exposure from &quot;word of mouth&quot;).<p>* different user expectations (a 15 year old site is unlikely to look any good compared their modern counterparts. While that might not matter for some sites, if you&#x27;re trying to generate traffic from the average layman, then they might be put off and prefer a site which is more aesthetically pleasing).<p>So if someone is trying to port 15 year old PHP code to a new server, then I&#x27;d expect they&#x27;d want &#x2F; need to do a sizeable amount of rewriting anyway - regardless of API compatibility. In this instance, API compatibility is the least of their worries as you can at least just use the &#x27;find&#x2F;replace&#x27; tool in your text editor to fix renamed APIs, where as fixing the other issues (eg switching from the older method of dropping variables into an SQL string, to the current preferred method of parametrized SQL which negates the risk of SQL injection attacks) will take <i>much</i> longer."
2013-12-18T08:23:53.000Z,"Extreme Programming, a Reflection","&gt;But other things have suffered IMHO; making code easy to test tends to over-abstract it, making it more parameterized and exposing more implementation details of high-level abstractions.<p>I think this highlights a deficiency in testing tools. It&#x27;s quite hard to, for example, change the system time when running a test which often means that you have to abstract out that part from the method you&#x27;re testing and pass it through as a parameter.<p>You shouldn&#x27;t need to do that (in python you don&#x27;t!).<p>Also, there is a lot of APIs out there with very real world effects and integrations that it is pretty cumbersome to build mock ups of. Most API providers also just don&#x27;t.<p>Mocking what would happen, say, when a twitter oauth token expires, isn&#x27;t as easy as it should be.<p>On the plus side, UI testing tools seem a lot better nowadays.<p>But yeah, there&#x27;s a serious dearth in good testing tools and bad language design (cough <i>Java</i>) that ends up making code unreadable."
2013-12-06T08:09:56.000Z,Why you should use OpenGL and not DirectX,"A series of relevant tweets from <a href=\""https://twitter.com/wolfire\"" rel=\""nofollow\"">https:&#x2F;&#x2F;twitter.com&#x2F;wolfire</a> :<p>My old OpenGL vs Direct3D post is #1 on hacker news! <a href=\""https://news.ycombinator.com/item?id=6852961\"" rel=\""nofollow\"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6852961</a>  Maybe time for a 2013 update -- a lot has changed since then.<p>1. D3D 11.1+ only supports Windows 8, which only 20% of Steam users have. OpenGL 4.4 works on all versions of Windows.<p>2. NVIDIA and ATI both now have good profiling and debugging tools for OpenGL that were formerly only available for DirectX<p>3. OpenGL Core is now lean and mean, making it easier for hardware vendors to create efficient and correct drivers.<p>4. Valve now strongly supports OpenGL with their own games and with SteamOS -- helps ensure the future of OpenGL itself, and vendor support.<p>5. Humble Indie Bundle creates an extra commercial incentive for indies to support Mac and Linux, which is much easier if you use OpenGL.<p>6. All the old points still stand -- OpenGL works on Mac, Windows, Linux, Web, iOS and Android. Direct3D only works on Windows and XBox."
2013-12-04T15:46:06.000Z,The lie of the API,"Tell that to Facebook and Twitter. Both are notorious for making changes to their API without informing their developers , especially the former. With site scraping, at least they have a better chance of telling you when a redesign is coming. And b&#x2F;c they rely so much on CDN&#x27;s, JS, caching, etc, changes to their site structure probably don&#x27;t change as much as their API."
2013-11-20T14:39:05.000Z,Xbox One: The Review,"I would say that people, and their reasons for objecting to surveillance or having privacy concerns far are more complicated and varied than you are imagining.  Some of the people who have expressed concerns may be:<p>Citizens concerned about government officials overstepping constitutional bounds and lying about it, but not particularly concerned about the practical consequences of the surveillance.<p>Activists for whom NSA surveillance confirms that government  is not on the side of the people, but whose sense of history leads them to the conclusion that if massive FBI files, Jim Crow laws, and lynching did not stop the Civil Rights movement, metadata is unlikely to prevent the arc of history bending towards justice.<p>“Airbus nationalists” in Europe who are, in their heart, more concerned about the fact the EU seems to be incapable of developing a Facebook, Google, Twitter, ect. They may ape the language of their fellow citizens whose privacy concerns are based on Nazi&#x2F;Stasi&#x2F;etc. historical experience, but actually view cloud computing as industrial policy struggle.  Video game manufacture is likely not their strategic priority.<p>People with specific consequentialist privacy concerns.  For example, someone who hates Facebook because it has caused something embarrassing to be shared without their truly informed consent. They may be indifferent to the notion that embarrassing information is hidden on a government database, and they may actually welcome and value that Google algorithms leverage their g-mail and search history to serve up more relevant ads.<p>People who once cared, but are so sick of monomaniacs hijacking every HN discussion that they are looking forward to buying an Xbox One simply as a sign of contempt.  They likely also once were vaguely sympathetic to Google Reader users, but now see the product discontinuation as just punishment of tiresome and entitled whiners.<p>You may feel that all of these types of  people are wrongheaded, but change often happens because large groups of loosely affiliated people band together, and rarely because zealots double down and fail to see why anyone might <i>consider</i> a different point of view."
2013-11-17T07:30:39.000Z,Dear Googles: G+/YouTube Anschluss – you've done outed me,"A comment I left a few weekends ago, which addressed the same topic but before the Youtube&#x2F;G+ story broke: [0]<p>&quot;Hijacking the top comment to talk about a big concern I have. This EFF article argues that there&#x27;s a place for Anonymity on the Internet [1], and I think most of us agree (especially if we emphathize with those in Iran, China, Syria, and the like).<p>But what HNers must realize is the following: The mainstream Internet <i>can not become</i> the Tor-visited Dark-Net (which restores anonymity) that many believe is inevitable WITHOUT losing its positive sociological impact. Sites like Reddit, Twitter, even HN rely on anonymity and also provide a great deal of such value.  Here&#x27;s a simple example of &#x27;sociological impact&#x27;: CNN (FoxNews, etc) pays attention to what the top links on Reddit are, because the site is in the public&#x27;s face -- and: the people have a collective voice.<p>Next: Without the perception of anonymity, sites like Reddit will stop flourishing.<p>Let&#x27;s go deeper:  Reddit&#x27;s culture thrives on &quot;anonymity&quot; in the form of throwaway accounts and people being themselves without representing themselves.  Throwaway accounts (heard of &#x27;Cation Bot&#x27; or &#x27;AWildSketchAppeared&#x27;?) are a form of expression unique to environments which allow for anonymity (pseudonyms). Who&#x27;s to say novelty accounts would be as risque or hilarious without anonymity?  Certainly these sites flourish because users feel comfortable playing a part and taking a chance.<p>There are two issues at play which threaten anonymity on Reddit. Now obvious (in light of Snowden&#x27;s leaks): 1.) Reddit usernames can, and probably are, being mapped to peoples&#x27; actual identity. ... Not as obvious: 2.) Users&#x27; up and down votes, even private messages, can also be sniffed with ease.<p>Reddit&#x27;s&#x27; devteam has retreated from the idea of providing HTTPS for its voting&#x2F;web API [2], so people&#x27;s actions (aside from comments) can be mapped as well. I tried to raise awareness of this issue five months ago [3].  I know there&#x27;s an argument to be made that SSL&#x2F;HTTPS is useless anyway (just use Tor!, they say), but the bigger question remains:<p>Can a mainstream community such as Reddit exist in tomorrow&#x27;s Internet?  I&#x27;d say that such web-societies are fragile -- likely targets of dragnet surveillance and subversion, especially given their disruptive nature.<p>People and the press are paranoid about Facebook&#x2F;Google privacy because its users (are encouraged to) identify themselves <i>explicitly</i>, but the reality is no different with sites like Reddit - just the perception. Just think about how much more is shared on a site like Reddit by its members because of their pseudonyms! Few people aside from the avid Tor-using&#x2F;&#x2F;r&#x2F;netsec crowd have realized this.<p>Reddit is the internet &quot;as we know it,&quot; and I feel the Internet is about to change.<p>In hindsight - Google&#x27;s initial &quot;no pseudonyms&quot; policy for Google+ was prescient -- though the company eventually capitulated to popular demand for them. [4] Perhaps they wished to save each of us the unsavory realization that aliases exist in name-only (pun intended). :&#x2F;&quot;<p>[0] <a href=\""https://news.ycombinator.com/item?id=6652909\"" rel=\""nofollow\"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6652909</a>\n[1] <a href=\""https://www.eff.org/deeplinks/2013/10/online-anonymity-not-only-trolls-and-political-dissidents\"" rel=\""nofollow\"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2013&#x2F;10&#x2F;online-anonymity-not-o...</a> \n[2] <a href=\""http://www.reddit.com/r/changelog/comments/l4n6y/reddit_change_log_in_with_ssl_javascript_fixes/\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;changelog&#x2F;comments&#x2F;l4n6y&#x2F;reddit_chan...</a>\n[3] <a href=\""http://www.reddit.com/r/privacy/comments/1n73s0/again_reddit_needs_fullsite_https/\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;privacy&#x2F;comments&#x2F;1n73s0&#x2F;again_reddit...</a> [4] <a href=\""http://www.ibtimes.com/google-allowing-nicknames-pseudonyms-aliases-399584\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.ibtimes.com&#x2F;google-allowing-nicknames-pseudonyms-...</a>"
2013-11-06T19:05:26.000Z,Show HN:  How much can you tell about someone from their tweets? ,"All Twitter API methods require authentication now-a-days. <a href=""https://dev.twitter.com/blog/changes-coming-to-twitter-api"" rel=""nofollow"">https:&#x2F;&#x2F;dev.twitter.com&#x2F;blog&#x2F;changes-coming-to-twitter-api</a>"
2013-11-05T02:16:18.000Z,Ask HN: Anyone want to build an app with me?,"I&#x27;m not sure exactly what you&#x27;re envisioning, but I&#x27;ve been working (on and off) a side project that sounds very similar. The name I have is InfoStream (not Trademarked), and the domain is infostre.am (not currently in use). I will E-mail and tell you more about what I was envisioning in terms of my project, and we&#x27;ll see how it matches up with your vision. If we have a match, maybe we can work on it together (or maybe I can contribute somehow). The problem I came up with was Monetization, specifically on the Twitter Platform. Twitter seems to be the best source of real time information, but when they introduced API 1.1 and the (IMO) extremely gray 1.5 rule (do not replicate the core twitter experience) I placed this project on the back burner. It just does not make sense to dedicate time to a project on a platform that will likely pull the plug [1]. In many ways, the vision I have (InfoStream) is replicating the core Twitter experience. I find Twitter&#x27;s approach towards filtering data (lists) and presenting data to the user (single context feed) to be extremely weak, and ripe for innovation. Yet delivering this information is the core Twitter experience, and thus even though I think I can provide methods to deliver information better (more contextually accurate, more valuable), this is not what Twitter wants. So I end up where lots of other people have ended up; Could build something cool on Twitter, but it&#x27;s just too unstable from a Developers perspective. If you can think of other Sources for real time data that are not as controlling, more trustworthy, and&#x2F;or easier to Monetize, I&#x27;m open to trying a different approach. Unfortunately, I don&#x27;t think Twitter is a good choice. And I am hoping that an IPO will change things (but I&#x27;m not sure).<p>[1] <a href=""http://www.linkedin.com/today/post/article/20130417052642-32720-my-worst-career-mistake-build-in-someone-else-s-garden"" rel=""nofollow"">http:&#x2F;&#x2F;www.linkedin.com&#x2F;today&#x2F;post&#x2F;article&#x2F;20130417052642-32...</a>"
2013-11-01T23:13:29.000Z,"My really successful, unfundable, piece of shit startup I hate to love","Some monetization ideas:<p>* Follow the 4chan&#x27;s method. Add captcha to search and offer captcha bypass for $15~ per year<p>* Make iOS &#x2F; Android app, sell it for $1.99~ (you can make it with HTML&#x2F;Javascript via PhoneGap)<p>* Offer API for affordable price<p>and please change current website design, make it simple and cleaner (Twitter Bootstrap is nice for that job and it&#x27;s easy to learn)"
2013-11-01T10:55:06.000Z,It’s time for Silicon Valley to ask: Is it worth it?,"To update the above comment (&#x27;edit&#x27; is disabled) -- to the &quot;And the devil of a bill is always in its details...&quot; line, I just saw this article headline on Techmeme: &quot;Feinstein Releases Fake NSA Reform Bill, Actually Tries To Legalize Illegal NSA Bulk Data Collection&quot; [1]  Pretty shameless on her part.  Here&#x27;s the HN item: <a href=""https://news.ycombinator.com/item?id=6653190"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6653190</a><p>[1] <a href=""http://www.techdirt.com/articles/20131031/12394625090/feinstein-releases-fake-nsa-reform-bill-actually-tries-to-legalize-illegal-nsa-bulk-data-collection.shtml"" rel=""nofollow"">http:&#x2F;&#x2F;www.techdirt.com&#x2F;articles&#x2F;20131031&#x2F;12394625090&#x2F;feinst...</a><p>--<p>Websites like Reddit and HN are extremely vulnerable.<p>Hijacking my comment here to talk about a big concern of mine.  This EFF article argues that there&#x27;s a place for Anonymity on the Internet [2], and I think most of us agree. Especially if we emphathize with those in Iran, China, Syria, and the like.<p>But anonymity is also the key to websites like Reddit and Twitter (including HN).  These websites represent breakthroughs in sociology: memes; open, real-time, transnational,  popular (upvote&#x2F;downvote, retweetable) discourse.<p>It&#x27;s not an understatement to say that Reddit, Twitter, even H.N. are some of the greatest manifestations of the Internet-age -- look at the impact they have had on mainstream media and raising the bar for popular discourse.<p>(Ex.1: I would argue that the Snowden revelations would not have persisted in the public conscious nearly as long if it hadn&#x27;t been for Reddit&#x27;s continued rage. \nEx.2: As it is, news outlets hawk Reddit&#x2F;HN for story-material, and build the story&#x27;s narrative with Twitter.)<p>But what HNers must realize is that: The mainstream Internet __can not become__ the Tor-visited Dark-Net that many believe is inevitable -- WITHOUT losing its positive sociological impact.<p>Yet without the perception of anonymity, sites like Reddit will stop flourishing.<p>Reddit&#x27;s culture thrives on anonymity, throwaway accounts, and people being themselves without representing themselves.<p>There are two issues at play. Now obvious: 1.) Reddit usernames can be mapped to people&#x27;s actual identity. Not as obvious: 2.) Users up and down votes can also be mapped to their identity.  Reddit as a dev-team has retreated from the idea of providing HTTPS for its voting&#x2F;web API, so people&#x27;s actions (aside from comments) can be mapped as well. I tried to raise this point 5 months ago [3]. I know there&#x27;s an argument to be made that SSL&#x2F;HTTPS is useless anyway (just use Tor!, they say), but the bigger question remains:<p>Can a mainstream community like Reddit exist in tomorrow&#x27;s Internet?<p>People and the press are paranoid about Facebook&#x2F;Google privacy because its users identify themselves explicitly, but the reality is no different with sites like Reddit - just the perception.  Just think about how much more is shared on a site like Reddit by its members because of their pseudonyms!\nFew people aside from the avid Tor users have realized this.<p>Reddit is the internet &quot;as we know it,&quot; and I feel the Internet is about to change.<p>In hindsight - Google&#x27;s initial &quot;no pseudonyms&quot; policy for Google+ was prescient -- though the company eventually capitulated to popular demand for them. [4] Perhaps they wished to save each of us the unsavory realization that aliases exist in name-only (pun intended). :&#x2F;<p>[2] <a href=""https://www.eff.org/deeplinks/2013/10/online-anonymity-not-only-trolls-and-political-dissidents"" rel=""nofollow"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2013&#x2F;10&#x2F;online-anonymity-not-o...</a> \n[3] <a href=""http://www.reddit.com/r/privacy/comments/1n73s0/again_reddit_needs_fullsite_https/"" rel=""nofollow"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;privacy&#x2F;comments&#x2F;1n73s0&#x2F;again_reddit...</a>\n[4] <a href=""http://www.ibtimes.com/google-allowing-nicknames-pseudonyms-aliases-399584"" rel=""nofollow"">http:&#x2F;&#x2F;www.ibtimes.com&#x2F;google-allowing-nicknames-pseudonyms-...</a>"
2013-10-25T16:09:22.000Z,Now Serving: Full-Text Sampler in IPython NotebookFormat,+1 mherradora - I got the first version right after twitter changed the API &gt;_&lt; and busted one of the examples in chapter 1. Not anymore with Mining the Social Web 2e :). Bonus style points for Vagrant so that the author doesn&#x27;t have to host (i.e. pay for) a VM and the massive bandwidth.
2013-10-20T23:18:06.000Z,Google Checkout Closing Down on Nov. 20th,"The more relevant question is not whether Google Maps could close down but whether it will change in a manner that adversely affects you. For example, with their new vector-based system, will Google phase out tiles at some point? There are some apps that might be incompatible with vector-based data, so this could matter. Or more relevantly, will Google restrict API access? Think of Twitter -- it&#x27;s never closed its Tweet stream, but it has changed the rules for API usage, to the detriment of certain Twitter clients."
2013-10-17T11:14:03.000Z,Did these guys just reinvent the Web?,"Since when did &#x27;the web&#x27; involve giving away all the source code and not charging people for things? Did Google open source their search engine and let anybody advertise on their site for free while I wasn&#x27;t looking?<p>I really don&#x27;t understand this meme about the web being &#x27;open&#x27;. Much of the native desktop software I use is open source. Practically none of the web services I use are open source. There is not much chance of a &#x27;GNU project&#x27; for the web (i.e. reimplementing an open google and twitter and facebook and so on). Open source web services of significance are few and far between and when it comes to controlling our data usually the best we get is a proprietary API that may or may not get shut down or changed tomorrow.<p>The web gave us RSS which was good[1] but since then it has been pretty much a non stop stream of proprietary APIs and platform lock-in. Even things built on RSS tend to be proprietary APIs rather than open standards: take Google Reader for example. Before it shut down it should have been trivial to pull your subscriptions out of it and point your clients at a new replacement rss-syncing server (like you can do with an email client). But it wasn&#x27;t because there was no damn standard for that, just proprietary APIs as various people wanted to lock you into their cloud service. The standards that have emerged have been, of course, ones that generally involve lock-in to proprietary platforms, like OAuth.<p>[1] interestingly many of the new generation of web developers seem to dislike RSS."
2013-09-26T00:17:26.000Z,"AMD Introduces ""Mantle"" API Initiative","Follow some of the top-end OpenGL developers on Twitter sometime; you&#x27;ll change your tune quickly.<p>There&#x27;s a significant amount of overhead in the existing OpenGL API, which currently can only be mitigated somewhat through vendor-specific extensions.  But extensions alone aren&#x27;t sufficient to address some of the serious issues that the OpenGL API has today.<p>OpenGL forces you to maintain a tremendous amount of state information that significantly increases overhead.<p>John Carmack and many others have explicitly mentioned this in past discussions.<p>While I&#x27;m horrified at the idea of revisiting the days of 3DFX glide and installing my own client ICD into a game driectory, if Mantle drives the OpenGL ARB to start seriously addressing those issues and increases competition, then I&#x27;m all for it."
2013-09-17T17:21:20.000Z,iOS App Store now allows legacy downloads to support older OSes,"I think this will help out consumers overall, but I don&#x27;t want customers posting negative reviews of my app because the old version they downloaded crashes due to a Facebook or Twitter API change that I patched the app for months ago. Considering that folks post reviews from to-be-released versions of the OS, I assume Apple will let these folks post reviews as well?"
2013-09-13T12:16:08.000Z,Big Lessons from HackFwd,"As for FlockOfBirds, we had to pull our app from the App Store due to the rate limit changes in the Twitter API v1.1. However the company still exists, and we are planning a come back for next year."
2013-09-12T17:09:10.000Z,"Facebook deletes Social Fixer page, blocks page admins","One of the most important lessons I&#x27;ve learned during the growing-up phase of my being an entrepreneur -- and one of the first things I&#x27;m doing with my next startup -- is putting together a list of &quot;doomsday scenarios&quot; right off the bat.<p>What are the _single_ actions &#x2F; events &#x2F; scenarios that could kill your business overnight?<p>I emphasize single because every business is going to have the potential for a series of unforeseen events kill them (i.e. Microsoft would probably not have seen &#x27;Apple releases a phone&#x27; as a business&#x2F;Balmer-killer), but every business should be keenly aware of the single-points-of-failure (SPoF).<p>It seems obvious, but so many folks either willfully ignore or choose to pretend that SPoF don&#x27;t exist or rationalize the scenario away.<p>Examples:<p>* You run on AWS in a single availability zone, and that availability zone goes down for a week (&quot;The cloud is super reliable.  Amazon won&#x27;t go down.&quot;)<p>* Your CTO is the only person on the company who knows the product, and he quits overnight &#x2F; gets injured &#x2F; becomes incapacitated. (&quot;He&#x27;s my partner.  He&#x27;d never abandon the business.  We&#x27;re in this together.&quot;)<p>* You rely solely on Facebook &#x2F; Twitter &#x2F; Apple App Store and are at the mercy of their changes in policy (&quot;Oh Facebook would never just shut us down.&quot;)<p>* You&#x27;re built solely on the Foursquare Places API. (&quot;Foursquare won&#x27;t just kill all the companies that rely on their API...right?&quot;)<p>Etc. etc. etc.<p>Now, this isn&#x27;t saying that you should be paralyzed by the potential for SPoFs to hurt your business -- it may make sense to proceed even with them around (i.e. lots of people have made a lot of money building FB apps).<p>But you MUST be aware of what they are, and you MUST have a plan in place to handle the continuation of the business if one of them comes true."
2013-09-11T13:23:51.000Z,Why cards are the future of the web ,"Well, of course cards are semantically equal to RSS feeds or HTML tags - the card is a presentation concept for the idea of a &quot;container&quot;, after all; programmatically, they can be treated the same as any other information block.<p>What changes is that they&#x27;re now visible to the end user, while their structure previously could only be accessed by the system&#x27;s developer. Now they can be published through an API, or directly manipulated from a GUI; that&#x27;s a change in focus - the same operations can be done on the content, but different people can perform them if they are published as atomic cards instead of embedded in larger, whole documents.<p>Semantic-aware interfaces are less based on applications and more on tasks. These interfaces work just like with the old CLI, where instead of loading data into an app (where available commands are selected and composed by the developer), you have a information flowing through a &quot;pipe&quot; of independent commands selected by the user from all commands available in the system. Environments like KDE Plasma Active [1] (still app-based, but with &quot;Activities&quot; that represent tasks), or the old Cannon Cat and its spiritual succesor Archy (which was a graphical version of Emacs, sort of) [2], are examples of this model of interaction. These are not new concepts, really, but they&#x27;ve never been fully realized in graphical interface (afaik only the Canon Cat and Emacs follow them, and both are text-based).<p>Yes, Google Reader is a good example of the kind of content aggregation and sharing that I&#x27;m pursuing with my ideal system (and many people found it useful, so there&#x27;s an 	
audience for it). Google Now is another system which has chosen the card metaphor to show information according to context. But Reader was not programmable, as it had fixed styling that couldn&#x27;t be changed by the end-user; and Google Now has fixed rules created by the provider, not the user. I believe that the card is a natural data structure for people that don&#x27;t have a programming background to create simple procedures, that would allow users to create new behaviors for these tools.<p>You&#x27;ve given me some thoughts to chew with the &quot;more confusing than twitter, less powerful than raw data&quot;; I&#x27;m certainly aiming for &quot;more powerful than twitter&quot;, and I&#x27;ll have to ponder how to achieve that without making it too confusing. I have some ideas, but it&#x27;s interesting that you identified this problem.<p>--<p>[1] <a href=""http://www.linuxjournal.com/content/plasma-active-new-approach-tablet-computing"" rel=""nofollow"">http:&#x2F;&#x2F;www.linuxjournal.com&#x2F;content&#x2F;plasma-active-new-approa...</a>
[2] <a href=""http://en.wikipedia.org/wiki/Archy"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Archy</a>"
2012-09-06T13:05:15.000Z,Show HN: Diligu: Our microblogging music-discovery site,"Hey Diligu friends - Great job launching something especially in the music business space.<p>Some feedback:<p>1. The head line ""we f*cking love music"" is not about me the user it's about you the company.  While it's nice to know it doesn't tell anything about the website.<p>2. Some spacing between the picture, the ""Want to ..."" and the list of songs would help give the elements some breathing room.<p>3. On the top bar on the front page you have ""Start"", ""Join Today"" and ""Sign In"".  The ""Start"" link just takes me back to the front page.  This was confusing as I thought that ""Start"" and ""Join Today"" were actually the same thing.<p>4. I like the idea though dislike the people you are going to charge.  Minor artists rarely have extra funds to through around on marketing that is not directly tied to concerts, t-shirts, stickers, etc.  Here you are asking minor artists to pay for people they want to reach without actually (at least where I could see) trying to convince me as a minor artist that a) you have enough people for me to care, b) that they are worth paying, and c) that they really are worth 10 cents per user.<p>5. Outside of the three free songs on the front page - it's not clear to me that is has anything to do with microblogging or music-discovery or that as an artist that I can buy audiences.<p>6. If it is a microblogging website, I'd love to browse users or artists without having to sign up/in with twitter and/or facebook.<p>7. Using uservoice - i'm not always a fan of this because I clicked on it and all I saw were problems that people had with your service that I hadn't even thought about.  Note - this isn't to say that you should hide the problems.<p>8. In the footer you link to API and then when I click into it you tell me that you don't have anything ready and that I should contact you to tell you what I want.  Perhaps it's better to not say anything until you actually have it?  Otherwise it really raises expectations and makes the product feel incomplete.<p>9. In the footer you also have twitter (blog).  For me these are two very different things so I was surprised that they went to the same place.  In a similar point to the API, if you don't have a blog, that's cool - just don't put it so that expectations are kept on the right things.<p>10. If you are going to sell audiences, are you going to provide some money back to users?<p>11. I tried to sign up using twitter.  What you want to do with my twitter account is pretty crazy - especially ""Update your profile.""  There is no way that I would ever sign up for a service has the ability to change my twitter profile.  Also, tweeting out for me is my boundary line.  Also somewhat shocking is following new people for me.  Perhaps I haven't been using all the new music startups, but for a website that i'm supposed to be using to discover new music, these seem like pretty harsh consequences for signing up.<p>12. So I signed up/in anyway to give feedback.  Once I sign up you then ask me to come up with a user name.  Couldn't you have used my twitter account?  This extra step doesn't add anything to your service (haven't seen what this user account will be used for or what it means) so it's just another step that would make me want to close the browser.<p>13. I selected a genre ""indie"" and then couldn't figure out how to move to the next steps.  I finally realized after clicking on a ton of stuff that I had to click on something that looks like a pasta shell.  When I hover over it the eye opens and it says follow.  This is really hard to understand and doesn't tell me what to do.<p>14. If I click on indie / electro / pop user ""Peng"" is at the top of the list for all of them.  If I click sequentially, I don't actually see the list of people change so it makes it look like these are the only people that I'll be able to follow.  perhaps make this random so at least it makes it look like there's all type of users.<p>15. I'm not entirely sure why I want to follow people or how it will make my life awesome.  Most of the text talks about Diligu not why following people will make my life awesome.<p>16. I followed user ""peng"", then I go to step two and you ask for more credentials to more services?  Here is where I stopped.  This is way too hard and way too many steps to jump through before I can even start enjoying the service.<p>17. I skipped the rest of the steps and the first thing I see when I finally get in is a huge ad telling me to give you my facebook credentials so that it can find new friends for me.  So far i've spend like 10 minutes trying to get into the website and no value has been provided to me yet.<p>I like the idea of a twitter where the followers I can follow are based exclusively on their musical tastes.  However, I think you have to rethink your onboarding process and how to add value to the user right off of the bat.<p>Good luck and keep us updated!"
2012-09-06T11:37:50.000Z,"New Twitter API Drops Support for RSS, Puts Limits on Third-Party Clients","Edit: I stand corrected. Apparently, a lot of people do use RSS twitter for various reasons. Presumably the resyndication clause is targeted to prevent people re-creating RSS feeds that they are using from the API, though I have no idea why.<p>I'm not one of the RSS doom-predictors, as I find it very useful to keep up to date with blogs/etc that don't update very often and aren't enough on my radar to check frequently. Saying that, who on earth was using RSS to keep track of twitter? I can't imagine it was at all efficient, or easier than the API.<p>The other change that seems to be listed here:<p>&#62; <i>Dont resyndicate data. If your service consumes Twitter data, dont take that data and expose it via an API, post it to other cloud services, and so on.</i><p>has several possible conclusions listed, which I don't think are warranted. This looks like it's to squash any possibility of people getting around the  user client limit by aggregating updates, before it happens. That said, vague hand waving seems to have been a large part of a lot of the recent twitter announcements."
2012-08-29T14:43:22.000Z,Unibox - A New Take on the OS X Mail Client,"I thought twitter didn't allow this kind of aggregation across services in native clients anymore?<p><a href=""https://dev.twitter.com/blog/changes-coming-to-twitter-api"" rel=""nofollow"">https://dev.twitter.com/blog/changes-coming-to-twitter-api</a>"
2012-08-27T21:43:56.000Z,Where did the Tweetbot for Mac Alpha go?,"&#62; If the app wishes to not show ads or to use twitter for more of an ""infrastructure-like"" purpose, then there should be some kind of use-fee-based pricing model on the API side.<p>No need for this complexity. They could just revoke API access for apps that don't show ads per their guidelines. It'd be easy to catch any Twitter client with a significant user base that isn't showing ads properly.<p>At the end of the day though solutions like this just aren't realistic. If Twitter's going to show ads and other content like cards in their stream, advertisers have to have confidence that the content and presentation will be preserved. The only way to truly do this effectively is to control how your product is presented in all cases.<p>The problem isn't that Twitter's making these changes. The problem is that Twitter's only getting around to doing this now, years after a vibrant ecosystem of third-party clients has been well established. No one complains that there isn't a rich market for third-party Facebook clients, even though the Facebook app historically has been pretty substandard. Facebook, wisely, never relinquished control over their platform.<p>Twitter, as ever, is cleaning up for previous incompetence, trying to clean up a mess that never should have existed. How could they not have assigned one or two people to build an iPhone client the minute the iPhone SDK was announced in 2008? How blind do you have to be to not anticipate that mobile will be huge for Twitter, a service originally engineered around being used over SMS?<p>Watching Twitter bungle issue after issue over the years gives the distinct impression that Twitter is successful in spite of their executive management, not because of it."
2012-08-17T23:41:23.000Z,Tapbots: Don't Panic,"&#62; That upper-right quadrant also includes, of course, ""traditional"" Twitter clients like Tweetbot and Echofon. Nearly eighteen months ago, we gave developers guidance that they should not build client apps that mimic or reproduce the mainstream Twitter consumer client experience.""And to reiterate what I wrote in my last post, that guidance continues to apply today.<p><a href=""https://dev.twitter.com/blog/changes-coming-to-twitter-api"" rel=""nofollow"">https://dev.twitter.com/blog/changes-coming-to-twitter-api</a>"
2012-08-17T12:47:48.000Z,Twitter to Client Developers: Drop Dead,"Are people missing the fact that <i>existing</i> Twitter clients can keep their token allocation <i>and double it</i>? And new ones are limited to 100K only <i>by default</i> (they can ask for more)?<p>Since when did people consider unlimited access to Twitter's API an unalienable right? It is <i>their</i> platform, and <i>their</i> API. It's also completely free.<p>Twitter is absolutely free to limit usage of their own API however they wish. If it means they want to change the rate limiting on their servers, I see no problem with that."
2012-08-17T07:32:14.000Z,What Twitter's Announcement could have said,"From the twitter announcement (<a href=""https://dev.twitter.com/blog/changes-coming-to-twitter-api"" rel=""nofollow"">https://dev.twitter.com/blog/changes-coming-to-twitter-api</a>):<p>""To ensure that Twitter users have a consistent experience wherever they see and interact with Tweets, in v1.1 of the Twitter API we will shift from providing Display Guidelines to Display Requirements, which we will also introduce for mobile applications. We will require all applications that display Tweets to adhere to these.""<p>If Marco's reading is wrong, it's still the most obvious reading of the original text.<p>Also:<p>""Nearly eighteen months ago, we gave developers guidance that they should not build client apps that mimic or reproduce the mainstream Twitter consumer client experience. And to reiterate what I wrote in my last post, that guidance continues to apply today.""<p>Apropos to the Anil Dash version of the piece, the original one is already heavily tarted up with euphemisms like ""guidance"" where ""warning"" would more clearly convey their intentions.<p>I understand the type of petty social engineering that Anil has attempted here, by spreading ""Awesome"" and ""Excitement"" around and accentuating the good instead of the bad, but I think it does developers a great disservice to assume that the biggest problem with bad news was the tone of its delivery and not the news itself."
2012-08-17T05:00:30.000Z,Interpreting some of Twitters API changes,"Question: is there anything stopping an app from using an invisible embedded web view to pull content from Twitter, mimicking a plain browser, and then scraping the content from the DOM as a poor man's API?<p>It would be tedious as hell, especially now that Twitter is all-Ajax-all-the-time, and it would be a moving target as they made changes, but could Twitter really do anything to stop it?"
2012-07-27T21:49:33.000Z,On building an API rating agency,"If you aren't paying for the product, you are the product. It is true. But now, so many applications are based on these monopolistic API, which can change terms and conditions and pricing at any time. More than 1 000 000 3rd party apps for twitter, even Google maps changed pricing recently. It is about charging money, but also about policy and involvment to developers, viable business model and company's roadmap. But without any ""rating"" how would you manage your cloud supply chain with thousand of APIs?"
2012-07-25T12:02:18.000Z,So you want to offer a public API ,"Interesting article. I wasn't aware of services like 3scale. Anyone got any experience of using them?<p>I developed, and am responsible for, a moderately complex b2b web API that is been in use for about three years. A b2b API embodies a contract between organisations, and it's important to understand that this is different to b2c (e.g. Twitter) which is less restrictive.<p>The biggest issue for me has been dealing with change. User requirements change. The underlying system changes and accretes new features that need to be exposed in the API. How to deal with this without either compromising the integrity of the API's design or (at the other extreme) breaking systems that use the API, is not easy. I don't know of any easy answers, but design your URLs and data schemas with versioning in mind and get to know the developers who use your API.<p>Documentation is very important. If your API exposes complex data then make sure that you have good documentation on what every data element means."
2012-07-20T08:30:35.000Z,Fred Wilson is wrong about Free,"I think it's a great idea that will fail in this implementation.<p>The first barrier in social networks is people - getting enough people on your network to incentivize others to follow. Is the fact that app.net paid enough to draw people away from Twitter &#38; Facebook? As a developer, perhaps, but as a user, I really doubt it.<p>A much better sales pitch would be just ""you own your data"". Give users amazing import/export tools from the get go. Allow third parties to fork your system and allow seamless user migration. Build a protocol, not a service.<p>With a business hat on, I also worry about the single silo of data in app.net. Say it does become successful, then they're a monopoly again. How can we be sure they'll fairly charge for their API usage when they realise how much it costs to hosts that much real time data? Can we be sure they won't change the playing field again?<p>Besides all that, I don't get why he wants $500,000 up front. If he wants to ""align our financial incentives with members &#38; developers"", I would have thought he'd charge a set fee to allow revenue to scale with usage.<p>Also the language on the site is just so damn confusing. They have lots of ideas jammed in together. Most of the discussion about the idea has been people trying to figure out what they're on about. They need to figure out a sales pitch people can understand and stick to it.<p>Anyway, lots of huge holes in this implementation IMO. I doubt it'll even get funded."
2012-07-13T23:38:44.000Z,Dalton Caldwell: Announcing an audacious proposal,"What pain point exactly is this trying to solve? 
That twitter is ad-spammed? I'll admit I rarely use twitter, but I can't recall ever seeing ads on it. (I can, as a side note, recall how /slow/ twitter pages load.)
That twitter changes its API frequently and doesn't give adequate notice to the people who develop for it?
How exactly does a user interact with app.net? I signed up for a twitter account because I wanted to hear a lot about a beta for a video game. How does this work with app.net? Are only broadcasters paying members?<p>Kudos for taking on the big dogs, though."
2012-06-30T20:14:07.000Z,Twitter Continues to Restrict Access to Our Tweets,"As a developer I too a, disappointed by Twitter's move to restrict API access as it has but again, still as a developer, I can understand Twitter's point of view and I'll actually say what they're doing is smart and other sites should follow suit.<p>We all want our API access, we want it now, we want it free, and we want it unrestricted whether we monetize our use of another app's API or not. But unfortunately we can't just feed off Twitter's teet and expect them to just cater to our every want. API access is a privilege, not a right. By monetizing their API as they are they are avoiding the most common mistake that afflicts tech startups - the problem of monetization. They have their ""verified"" accounts and ""promoted tweets"" which is a good start and now that the API has become so valuable they are monetizing this. They're a company that offers a free service and making a true profit instead of just taking on VC money and hoping someone will figure out how they'll make money later. They did this at just the right time too. They are now an established player much like Facebook. Now that users are locked in and so many people are getting value from Twitter's quick information sharing and marketing capabilities they made a smart decision with this new monetization strategy.<p>We all should have known the free ride would end eventually. In many cases, apps using the API are actually competing with twitter itself! Surely you can't expect Twitter to allow competing apps like iOS and Android apps to outshine them. So these restrictions force those competing clients to actually innovate still! Yes, access to tweets are limited but apps like Hootsuite and others have found ways to use the API in other ways like scheduling tweets.<p>I'll definitely concede that I think their limits are a bit strict and they are pretty much only useful for hobby projects. At the same time, though, we've become spoiled and entitled and I can definitely understand the restrictions. Reactions to policies like this are to be expected. Everyone always throws a fit when these things happen but we'll live and we have to understand that Twitter needs money to run so they can provide an API at all and if we want to make a buck off Twitter's API we can't expect a free ride. That's like asking the owner of an office building to let you use office space free because... Well... It's there. That said, they need to be smart about this too. Too much restriction will hurt them but too little will mean they aren't generating what they need. But right now I don't think we can judge whether these policies are really that bad because, like I said, any time a service makes these changes everyone starts complaining and a lot of exaggeration goes on."
2012-06-30T18:26:21.000Z,"Has the notion of ""files"" outlived its usefulness?","Web APIs change on the whim of the provider and have no permanent basis to build on. No one benefits from pretending that web APIs are as stable, composable, or as powerful as <i>proper</i> files.<p>I italicized proper there because my real point is that you're simply defining yourself the win with the word ""proper"" and not comparing like to like. You can win any comparison by accounting for only the good of one proposition and only the bad of the other, but that's not a valid argument. If, for instance, we ask our web API to have some sort of assurance that it'll be there next year... hell, next <i>week</i>... suddenly ""proper web API"" turns out to resolve to absolutely no concrete noun at all. (How ""proper"" would you have called the Twitter API last week? You know, back just before Twitter started shutting huge swathes of third party apps out of it?)<p>But that's just one definition. The truth is you need the right tool for the job.<p>It is all, in the end, just bits. The bits don't have color [1], and they don't acquire color by being in a web API instead of a file.<p>[1]: <a href=""http://ansuz.sooke.bc.ca/entry/23"" rel=""nofollow"">http://ansuz.sooke.bc.ca/entry/23</a>"
2012-06-29T19:06:13.000Z,Im Done Developing for Twitter,"Back in 2009, I was doing a lot of social network research with the Web Ecology Project (<a href=""http://www.webecologyproject.org/"" rel=""nofollow"">http://www.webecologyproject.org/</a>).<p>Among other things, we captured a 100% set of tweets surrounding the election in Iran in 09, and released a paper on them. It was interesting, because it ended up all being a bit of a precursor to the Arab Spring and many current events in the middle east today.<p>I loved doing it. The API team was responsive, and although we were never able to get full Firehose (despite offerring large amount of money) we were able to easily play with and access a lot of data.<p>Much/all of that has changed. The API has gotten really complex to work with. The terms of service are no longer friendly. Getting whitelisted accounts for standard API calls is impossible, and overall feeling like we have any influence or use to Twitter is dwindling.<p>Whereas at one point I felt it was a joy to work with, now I feel its impossible. Getting the data to study is impossible (or expensive, since a few companies control the firehose), and there's the constant feeling of getting shut down at any moment. Plus, there's just too much data to grab given the clunky methods you have to use to do it. I'd kill for a hard drive of the 'network graph' with diffs over time. As-is, its impossible to answer certain academic questions.<p>To a certain degree, while Twitter is used far more now than in 2009, it feels boring, obvious and less important to me. So at the end of the day, nothing of value was lost, but I do miss it as it was interesting at one point."
2012-06-07T21:25:39.000Z,Twitter shut down my startup.,"Hopefully Twitter will embrace this form of user communication in the long run. Although, if someone started using their API for this purpose out of the blue I can see them shutting it down as a first course of action. Definitely try to get in contact with someone on the inside and see what changes need to be made for them to allow it.<p>My political junkie side loves the idea as an attempt to improve democracy. I could see it expanding into snail mail and phone (twilio)."
2012-05-02T13:59:42.000Z,Simplicity Matters By Rich Hickey (Keynote at RailsConf 2012),"With web services, documents are your public API.  Once a service is public, there is a contract between you and the consumers of the API that it will not change until a new version comes out.  This is why we see the /v1/ convention in REST services.  /v1/ MUST not change on people.  You wouldn't do that with a public C library, you shouldn't do that with web services. It is anti-social to change that API on developers.<p>These documents are very complex. Just take a look at a twitter timeline JSON response.  Having a getter and setter for every field in that document would get ridiculous.<p>The problem with JSON is it is so easy to change that it takes self discipline to enforce your own social contract.  We all know that when faced with deadlines some developers get a little fast and loose to meet that deadline."
2012-04-26T13:55:35.000Z,RSS will never die,"One point I am missing on the whole ""RSS is dead, long live Twitter"" topic are their differences on the technological and on the legal side.<p>RSS is an open protocol, free for everyone to implement either way, producing or consuming, filtering or aggregating. Twitter and Facebook offer access to their feeds via their API, which you can only use when you agree to their terms of service. And they retain the right to change the API any time or to restrict access at their own sole disgression.<p>RSS is free as in freedom, Twitter and Facebook are not. And that alone is a good reason to keep RSS around."
2012-04-21T02:03:42.000Z,"APIs Are Forever, Wait No...They Can Go Away at Any Time","as I have tried to start a business building on top of API's, this is in general a risky business. Not only can they disappear, but also work incorrectly, go down, change overnight without notification. Also your access can be shut down just because of a change of heart on their side<p>If you don't pay for access and have some kind of contract (Twitter firehose, Bing API), yes your business goals are not aligned and you'd better prepare for the worse."
2012-01-20T22:10:28.000Z,REST worst practices,"I don't really understand the obsession with using HTTP methods. OP brings up a good point that using only GET/PUT/POST/DELETE to only represent CRUD is extremely limiting, but suggests that using even more obscure HTTP methods would be less limiting? I would argue not only is it limiting, it is also obscure, what is it about ""PUT"" that implies update vs. create?<p>If you look at the twitter API (<a href=""https://dev.twitter.com/docs/api"" rel=""nofollow"">https://dev.twitter.com/docs/api</a>) (commonly held up as exemplary REST) you will see exactly 2 methods, GET and POST. GET means no state change other than logging, POST implies state change. This makes so much more sense because then you can use ?command= and have any command you want and not have people confused about what it means."
2012-07-27T21:49:39.000Z,Dave Winer: An open Twitter-like ecosystem,"hm, don't be so sure. I was of your opinion and recently changed that when learnt about Instagram success.<p>It seems like internet is still a very young thing and people jump the ship or move on to a new thing very often, without much sentiment, like a child on a playground going from one toy to another.<p>Twitter introduced photos sharing long time ago, but it didn't stop guys from Insta to literally rip it off (adding ""follows"" and similar features). Where one thought ""well I cannot build photo sharing service because the giant in the room (twitter) just introduced it"" -- the others just continued pushing the code and eventually exit for $1B.<p>I think at some point users will move on from Facebook like they did from MySpace. MySpace biggest problem was javascript, audio and graphical clutter that rape you fresh out of the screen once the page finished loading. So others (hello Facebook) took advantage of it and come up with similar page but this time nice fresh and cleancut. So let's move further and ask ourselves a question: what is the biggest Facebook problem? I believe right now it is overclutter with irrelevant info served from your network. Having more than 100 ""friends"" makes your wall so clutter than no information is of value anymore.<p>So you want to come up with Facebook killer? no problem -- just build a system (whether mechanical or manual) where users can take real advantage out of their network, not miss important update from important friends and miss the unnecessary garbage they are not interested in. Don't be fooled by ""oh they wont come because they did all this work building up their facebook profiles"". Not only there is FB Api that you can connect to and download all FB user data in minutes, but if FB would close that gate, you can still program a info scrapper that would do so.<p>Bottom line: Facebook won't be here forever, and next stage of social is million connected friends but only relevant info rendered."
2012-07-13T21:32:44.000Z,App.net is crowdfunding their realtime feed platform,"I appreciate the need for vagueness in your answer to the question of ""What exactly are you building?"" I'm sure in many ways you and your team don't know exactly how it's going to grow and change, and I for one would rather have the team making this thing be flexible and reactive as opposed to building to a spec that was promised to customers.<p>I think you would be able to reach more people more powerfully if you spent more time talking about your vision for what Twitter could have been had they not gone the ad route. As a designer working in the web industry, I am just as excited as you are about the potential for this thing, but I think most people need it explained a bit further to really get on board.<p>Perhaps you could highlight some of the really cool stuff that was built with the Twitter API that they then squashed. Talk about the potential OUTCOMES of this system, not just the origins of it. Hell, maybe even take some proposals from excited designers/developers for what they would do with said API, then use those proposals as a demonstration of the system's potential.<p>You've got my money."
2012-07-12T15:15:29.000Z,"Thoughts on Rails, Node, and the web apps of today","I heard the first call for ""Rails is dead"" around 7-8 months ago. While then I completely disregarded it, now I'm even more so disregarding it.<p>I choose the right tool for the right task. Linger on that over-used saying for a moment.<p>I use Rails when I'm not familiar with the domain enough (this is the business of Software Engineering, we never are as familiar with the domain as the domain experts) and it provides me a platform for radically fast development, in the end I may also have a product that can withhold 2-3 years of evolution, before we need to scale, if even needed (premature optimization..).<p>I also use Rails when the quality levels are set high, and when I need tons of libraries, and I need those fast. In node, the quality level of such libraries are much worse (if you haven't seen it, you're not doing Node enough time - because I haven't seen it at my first half a year on Node). The number of quality libraries / npm modules are probably several magnitudes of order less than that of Ruby gem world. You're going to need to wait 4 years until you get that level of diversity and quality and it sets up in a comparable way.<p>And I use Ruby when I don't care about slow clients, or doing system-level work.<p>At any given time, I keep myself the option to use JRuby, which has comparable to MRI (the ""normal"", C implementation of Ruby) performance and better on a considerable number of criteria. IMHO DynamicInvoke on the JVM will be a game changer in terms of people considering JRuby against, Groovy, or Scala.<p>I use node.js when I know the domain will remain small, non-complex, and I'll be dealing with slow clients (real users).<p>To top all of that, backend systems will NOT turn into thin api servers. Not by any chance. Twitter themselves are rolling back their SPA and bringing back server side template rendering. The number of problem you get into while moving all of your logic and rendering to the client requires a huge blog post which I'll probably make one day. Most people are not aware of that because they never came from full-fledged enterprise level desktop apps -- I used to design CADs and pretty familiar with complex client-side architectures, there are so many dragons there, I'm very happy I now live on the server side, where things are much more predictable.<p>So no, Rails is not dying and neither is Ruby. With the advent of progress on the JVM and JRuby they never will -- this whole discussion reminds me of ""Java is about to die"" when Scala came around and ""Java is about to die"" when Oracle came around. And guess what - it didn't (go read about Java 8).<p>tldr; I use both, and I'd recommend anyone would, too. Server-side will never be just a thin api, Ruby or Rails will not die (at least not by that sword), and the only thing one might want to work on is a good foundation of intuition of when to use which of those.<p>@jondot"
2012-07-01T15:43:37.000Z,Ask HN: Freelancer? Seeking freelancer? (July 2012) ,"SEEKING WORK - Preferably in Chicago NW Suburbs or Milwaukee<p>Natural born computer nerd who likes python, php, online development and user experience consulting. Moonlighting as the president of a LLC-S and a C-corp (currently seeking funding for patented/copyrighted work).<p>I'm not much on the actual developing side anymore since there are people better than me who can handle that, though I am pretty darn good at making sure your user experience is perfect.<p>What most people miss the essential steps on corporate pages, sales pages and every other type of page that helps their readers/viewers move happily and properly through their sales/marketing funnels.<p>I'm not all too interested in which technologies are used so long as they are safe, secure, PROPERLY DEVELOPED and well maintained.<p>I'm looking to work with companies and people who own companies that are stable and finally need to grow or growing and need help in getting things right. I'm not interested in working with small businesses anymore. Only funded start-ups, larger small businesses ($500,000 and up in gross profit to owner(s)), medium and large businesses.<p>I don't have a portfolio but you can check out my personal site at:<p><a href=""http://piotrkrzyzek.com/blog"" rel=""nofollow"">http://piotrkrzyzek.com/blog</a><p>My consulting companies page: <a href=""http://chykalophiagroup.com"" rel=""nofollow"">http://chykalophiagroup.com</a><p>The C-corp doesn't have a site yet.<p>I've worked with Department of Defense contractors, helped bring a complete fashion business from zero into life and profit, and have partnered with international telecom companies on side ventures for fun.<p>I'm part of two local Chambers of Commerce. An active Ambassador (the guy at the chamber who meets and greets you and shows you the ropes) at one.<p>Working on another in-house project where we now joined the Chicago Lean Start-up Challenge. <a href=""http://frespiration.com"" rel=""nofollow"">http://frespiration.com</a> or the old site at: <a href=""http://mag.frespiration.com"" rel=""nofollow"">http://mag.frespiration.com</a><p>Writing one infoproduct: <a href=""http://quantumfanpages.com"" rel=""nofollow"">http://quantumfanpages.com</a> ... but stopped for now due to Facebooks constant API and business changes. Little time to keep up with it. Need a ghost writer for it!<p>Working with an international Start-up to bring their whole company online and deliver their SaaS properly to the UK public (London area only at launch).<p>As a side note, I do have an insurance license that I don't use.<p>I'm available on LinkedIn, Twitter and preferably by e-mail.<p>LinkedIn: <a href=""http://www.linkedin.com/in/piotrkrzyzek"" rel=""nofollow"">http://www.linkedin.com/in/piotrkrzyzek</a>
Twitter: <a href=""https://twitter.com/#!/piotrkrzyzek"" rel=""nofollow"">https://twitter.com/#!/piotrkrzyzek</a>
Quora: <a href=""https://www.quora.com/Piotr-Krzyzek"" rel=""nofollow"">https://www.quora.com/Piotr-Krzyzek</a><p>eh, and many more online profiles.<p>Best way to reach me e-mail me directly at piotr @ piotrkrzyzek.com
or call (GV number) at 847-929-4718"
2012-04-25T23:31:03.000Z,"Introducing Google Drive... yes, really","What you are referring to isn't part of the OAuth spec, as far as I know, is it something particular to Google's API?<p>The cached access token could also be considered a factor, although it depends on the token expiry policy. If the token doesn't require a refresh using a refresh token (which must prompt a password) often enough its security is compromised.<p>I don't know what kind of expiry Google's OAuth token has, but last time I tested this, it was a very long time. I believe Twitter's live forever. Facebook's offline access scope (which you will need for a normal app) lives forever until the user changes his/her password (see <a href=""http://developers.facebook.com/blog/post/2011/05/13/how-to--handle-expired-access-tokens/"" rel=""nofollow"">http://developers.facebook.com/blog/post/2011/05/13/how-to--...</a>)."
2012-04-22T18:55:08.000Z,Facebook Scripting Language - A really rough idea,"This is what I always have thought to be a huge problem in RESTful API design of all major companies like Twitter, Facebook, Google etc. It is mainly pull-technology. One has to ask the Facebook-server all the time: get a list of friends, get a list of friends, get a list of friends.<p>I'd love to see an API model based on events and callback URL's.<p>pseudo, but you'll get the idea:<p><a href=""http://api.facebook.com/event/on-friend-connect?callback=http://myserver.com/event/friend-connected"" rel=""nofollow"">http://api.facebook.com/event/on-friend-connect?callback=htt...</a><p>IMHO, WebServices should communicate in an evented fashion. If I want to draw an umbrella on myserver if it is going to rain in The Netherlands, I don't want to ask the weather server every X minutes: is it going to rain? is it going to rain? is it going to rain?<p>No, I want:<p><a href=""http://api.weeronline.nl/event/on-weather-change?location=Utrecht,NL&#38;callback=http://myserver/event/weather-changed"" rel=""nofollow"">http://api.weeronline.nl/event/on-weather-change?location=Ut...</a><p>pubhubsubbub solves this issue for RSS feeds, but pubhubsubbub is way too narrow to me. I hope evented API's will become the next big thing, enabling developers to create a whole new bunch of awesome products."
2012-04-18T00:13:52.000Z,A Call for Google+ to Enable Posting via its API,"In the case of Twitter, people actually might if the interface was better. People did, before the interface changed.<p>Now, adding a large group of people to a Twitter list via web Twitter is such a painful exercise, I often turn to an API solution (tweetbe.at in particular) to do it."
2012-03-26T17:11:32.000Z,Using Objective-C On The Server,"A few months ago I was making plans for what is now my home base website for App Store &#38; other projects. I'd been working in obj-c for about 2 years both on the Mac and on iOS, but also had a fair bit of python experience with Django, App Engine, etc. I decided to give it a shot with obj-c.<p>I knew about the handful of ""big"" frameworks for handling this task with obj-c, but rejected them in favor of getting more hands-on experience building it, pushing myself and learning in the process. It was, of course, a personal project, something I alone was responsible for working with, so I decided it was OK if I experimented a little.<p>I went into the project knowing I would eventually have to port it to Python (and I did), but it was a lot of fun :)<p>I hand picked some lightweight libraries to handle specific parts of the server. One has to be cautious knowing that a library developer who thinks their sole target is a tiny cellphone, may not be worrying about things you will eventually have to worry about on a server.<p>I picked CocoaHTTPServer to handle requests and responses, and someone else had written a nicer ""route"" style interface for it which meant all of the possible responses to an http request were simply a series of blocks defined in a row, each with a regex or named parameter style URL route defined right there next to the code that would handle it. This works out to be quite a similar layout in code as something like Bottle/Python or Express/Node.js, both of which I've worked with now and I very much prefer this style.<p>I made good use of blocks &#38; dispatch queues elsewhere as well, firing off an async block whenever I needed to pull new tweets from Twitter's api, or update Github repo stats (both are cached and displayed on the site).<p>I picked a Mustache template library and a Markdown parser library I found on Github for handling dynamic page generation &#38; blog post syntax, respectively. Sqlite for storing anything that needed to be stored, Regexkit-lite for properly checking and handling anything that may be passed in to a url query or post body, etc.<p>I changed the Xcode project type to build me an executable binary that lived inside a bundle (Server.bundle) containing all the pages and assets the thing needed, so it could be deployed as a single ""thing"".<p>I also got Lion's sandboxing to work quite easily, which in theory would give some moderate protection against the entire server being compromised if someone managed to get an exploit to run inside the process.<p>Other than some CPU usage issues with the template library (easily solved by nginx caching pages), it all worked really, really well. I threw enough abuse at it, and did enough debugging that I was confident it would hold up well in production (which turned out to be wrong).<p>And then it came time to deploy somewhere, a problem I had been working on since day one, so i knew what i was getting in to.<p>There were only a few options: a cross-compiler framework like Cocotron (compile on Mac, run on Linux), one of the native *step libraries like GNUstep running on Linux or FreeBSD, or simply deploy on a Mac somewhere.<p>I tried all combinations other than Mac first, I built out a GNUstep environment with libobjc2 on FreeBSD, tried the cocotron-&#62;linux stuff, each time watching something blow up in my face due to my choice of components and my requirements.<p>While obj-c is cross platform, some of the libraries and features I chose to use were not. CocoaHTTPServer is built on top of CFNetwork, which is not part of any obj-c framework/library, but rather a lower level Apple C library only found on Macs. There's a ""lite"" open source version, but I quickly discovered that solving one issue like that would only bring up another. For instance, dispatch blocks will only work with GNUstep at the moment, and only when it is compiled with clang, against libobjc2, a combination few if any Linux distros actually ship in their repos.<p>Not a lot of people interested in deploying modern, dispatch/block-heavy, obj-c 2.0 code to Linux, not nearly as many as there are deploying such things to OS X or iOS.<p>So I decided why not just run on a Mac server somewhere? After all I can't solve every problem all at the same time, and on a Mac a lot of those problems were non-existent, plus the Mac approach would allow me to use things only available on a Mac, like easy sandboxing and potentially keychain integration for auth.<p>I found a Mac VPS provider that ran Xserves and hosted copies of Lion server inside VMware (HostMyApple, not someone fudging the licensing in moms basement). It worked really, really well, as long as I treated it like a headless server (issues with Lion Server are another story for another time). My sandboxing worked, performance was fantastic aside from the CPU usage during a cache miss, so I was fairly happy.<p>Long story short though, memory leaks in 3rd party libraries (that only someone running a server would likely hit), coupled with higher hosting costs (and fewer choices), smaller community and a desire to use some things that are really only ""mature"" in other languages (database adapters, etc), caused me to spend a few days porting the entire thing to Python.<p>My site now runs on a Linode, and is a nearly identical clone of the obj-c version, ported as a Python/Bottle app. There was nothing particularly wrong with the obj-c approach, but the primary focus of nearly all obj-c developers and libraries is iOS, where processes never live longer than a few minutes, or Mac where a crash or leak is only going to affect one person rather than a few hundred in-flight requests. I expect if I had stuck with one of the ""frameworks"" intended for this purpose it would have been a viable option but as I said before I wasn't looking for turn-key, but wanting to get my hands dirty :)"
2012-02-16T14:37:33.000Z,Apple announces Mac OS X 10.8 Mountain Lion,"Don't forget all the API changes that present themselves with each new major version. For example, Notifications, GameCenter and Twitter are all new core libraries on the Mac that are accessible to developers."
2011-12-27T03:27:38.000Z,The Facebook Platform Is A Trainwreck,"Twitter?<p>I'm working on Facebook and Twitter and the latter just seems generally nastier (ill documented, ambiguous, not based on a simple graph...). A lot of Facebook the Facebook API is pretty good - well documented, clear and simple. And however bad Oauth 2.0 might be, Oauth 1.1 is worse. Oauth 1.1 is pathologically irrational.<p>And Facebook is only, ONLY directly responsible for THE API ITSELF. If they've maintained some Java or Python stuff, that's right nice of them but it's not their main job. If you are complaining about particular SDKs offered by Facebook, you aren't complaining about ""The Facebook Platform"", you're just complaining. When they change the interface (as they've done several times), then complain.<p>I think the site's motto probably explains things better ""Of course it sucks, it's made of software""."
2011-10-01T20:07:37.000Z,Ask HN: Who is Hiring? (October 2011),"Toronto, Ontario, Canada<p>Senior Ruby on Rails Developer<p><a href=""http://www.uniiverse.com/jobs"" rel=""nofollow"">http://www.uniiverse.com/jobs</a><p>ABOUT UNIIVERSE
Ever wonder what it was like to work at Facebook or Google when it was just five people? Imagine building a web platform that will change the way people think and improve live their lives.<p>Uniiverse is an exciting startup building a person-to-person marketplace for services and activities  the eBay for Time. Our primary dimensions are: temporal, local and social. We have developed a revolutionary concept that leverages the existing social graphs to allow people to save time, share and discover passions and build the worlds trust graph.<p>Uniiverse is seeking a talented Ruby Developer to lead the development of core elements of our platform.<p>TIMEFRAME
 You will join us full time during Fall 2011  we are quite flexible on timelines<p>RESPONSIBILITIES
Own product sprints for front and back-end build-out of Uniiverse's technology platform, e.g.:
 Thought partner and shape design and functionality of our product
 Drive development of back-end technology (e.g. billing systems, proprietary recommendation algorithms)
 Lead development of key front-end functionality (e.g. calendarization, jQuery widgets, etc.)
 Implement analytics, tools, and admin panels
 Build test cases in parallel to development, design and implement A/B testing environments<p>TECHNOLOGIES WE LOVE
 Ruby on Rails + MongoDB
 JavaScript / jQuery; AJAX / JSON
 HTML5 / CSS3 + HAML / SASS<p>REQUIREMENTS
 Proficient in Ruby on Rails 3
 Familiar with MongoDB, Linux, Amazon Web Services (AWS), OAuth, Facebook Graph API
 Experienced in JavaScript, jQuery, HTML and CSS (HAML and SASS)
 Excited about BDD, automated deployment, fixing bugs, and shipping code
 Keen eye for clean, simple design aesthetics, and usability
 An independent, fast-learning, self starter who takes ownership over solving ambiguous problems
 Energetic, passionate (does not matter about what!), and driven
 Believes strongly in The Joel Test<p>BONUS IF YOU ARE
 Proficient in mobile development (iOS / Objective-C)
 Savvy with machine learning / natural language processing / recommendation algorithms
 Experienced in developing accounting and billing systems<p>APPLICATION
Please email jobs@uniiverse.com with your CV, links to your GitHub, LinkedIn, Twitter, and technical blog<p>BENEFITS
Learn how to build a massively scalable social web application in a sexy technology stack. Get paid to work in a fast-paced, fun, start-up environment. Build valuable references.<p>ABOUT US 
Our team is comprised of experienced, talented and passionate people with deep expertise in strategy, technology and web and app development. We'd be excited to tell you more about us and our vision during an initial conversation.<p>REFERRAL BONUS
$1,000* if the person you recommend is hired.<p>* Payable for full time employee hires (i.e. contractors and freelancers excluded), for this particular dev position, after the completion of any probationary period, if applicable. Does not apply to candidates with whom Uniiverse was already in contact."
2011-09-09T11:45:50.000Z,Twitters new and blazingly fast interface,"I hate #newtwitter more than anyone, but I disagree with the logic that just because people don't like it, it's neccesarily a bad move - lot's of people don't like change.<p>I've seen it a couple of times on big community websites when people complained about a new design, and then a week later realised that just because it started off not feeling like the site they grew to love, it didn't mean it wasn't a huge improvement.<p>They key is that, after you force users to switch, it has to be good enough that they realise you were acting in their best interests - if you force them to switch to something that really is much worse, that's when it becomes a problem.<p>I was wondering: if someone used the Twitter API to create basically a clone of the original site, would that be against the Ts &#38; Cs, and if not could this be got around somehow. For example if someone made it and open sourced it, I could host it myself with my own API key, and without marketing it anyone other than myself and my friends Twitter wouldn't know or care?"
2011-09-09T03:31:44.000Z,Twitter will start serving you promoted tweets from accounts you dont follow,"So what stops me from writing a client that whitelists only the users I want to see?  Unless Twitter completely changes their API, or camouflages ads as tweets from my follow list, how can they lock you into seeing ads?"
2011-08-08T16:58:13.000Z,Show HN: Twitter API Helps Track Nefarious episod,"Just a fun little side I made while playing around with the Twitter API, nothing special.<p>For those unaware, Twitter's platform/API guy @episod changes profile pictures very frequently, so I decided to index his profile pictures to see how they get cycled out or change over time."
2011-07-29T20:09:57.000Z,House Committee Approves Bill Mandating That Companies Spy on Their Users,"Social Fortress currently provides transparent client-side encryption and decryption within Facebook, Google+, Thunderbird and Outlook for your messages and photos.<p>When you download and install Social Fortress your plugin is customized to sync with just your account and the key management server. This unique plugin is authorized to request keys for messages for your Trusted Contacts and generate new keys associated with your account.<p>The keys are generated in parallel on the client and on the key management server. They are always rolling forward and are synced in real-time with some unique variables within your custom plugin.<p>No two messages are encrypted with the same key and are only stored in memory during the encryption / decryption process. Every time a message or photo that has been protected is viewed by yourself or others authorization to that messages key is requested.<p>Your Trusted Contact list is managed globally by connecting with other users through Social Fortress. Within Facebook all of your friends are initially treated as Trusted Contacts and you can easily remove individuals from this list with the click of a button.<p>Social Fortress uses AES-256 CTR for the encryption and communicates over a 256 SSL stream from your device to the key management server. The data in this stream is also encrypted using aspects of your customized installation.<p>The technology for web services (Facebook, Google+) operates as browser plugin for Firefox, Chrome and Internet Explorer (not publicly available right now) and independent of any service's API.<p>The technology for Thunderbird and Outlook is a separate plugin which requires installation.<p>We integrate transparently into the products we support so the user experience is exactly the same. No extra clicks, no confusing decisions and nothing extra to learn. We designed Social Fortress to be used by individuals who don't even know what the word encryption is.<p>Within every environment you have the ability to enable / disable Social Fortress protection with the click of a button or using a keyboard shortcut (CTRL+Q). This only disables the encryption functions. The reader is always on so you can use Social Fortress just to view your friends protected content without having to protect your own. It's like having Flash or PDF Reader once it is installed you don't ever have to do anything again.<p>If your device becomes compromised / lost / whatever you can login to the site and disable all active installations in two clicks and this will not affect previously encrypted messages and we just disable authorization access to your old plugins and have no need to change any previously generated keys.<p>We also support other services but have yet to make them live:<p>Skype Chat, Twitter, mail.yahoo.com, Gmail.com, Chatter.com, Yammer.com, Blackberry Native Email support"
2011-07-21T01:57:15.000Z,Ask HN: Movie/film post-production tool - thoughts on the Landing/Beta page?,"Not bad. The app looks great and your page copy is very effectively targeted. However, there isn't enough of it. when I click one of the items in the cycling list of features, then I expect a new page or a significant amount of extra detail 'below the fold' - not a stock photo with a one-line explanation of a concept that is already self-explanatory to anyone working in the industry.<p>there are other features that I want that I don't see, which are increasingly important to ADs. These are not as critical as the 5 primaries identified already, but which in my view are essential for buy-in. If they're absent or not planned for, then a competitor is going to be able to add duplicate your existing features with little difficulty, add others not available here, and generally leverage their brand to drink your milkshake. The first-mover advantage is very slim, especially in a cutthroat business staffed by technological conservatives who are used to overpaying because they're spending OPM. If an existing provider goes mobile within the next 1-2 years (and they will) their install base will swamp yours. Delays to market will be explained away as 'making sure the product is really ready'.<p>So what are those missing features?<p>o screenwriting software integration - Final Draft at a minimum, also Adobe Story and other competitors. FD can generate breakdown lists, and being able to import these will reduce the work needed for breakdown by 80-90%.<p>o screenplay/breakdown versioning - on large projects, changes in shooting order or rewritten scenes are the norm. Assume they will occur and make sure the process of 'forking' is as easy as possible.<p>o Storyboards. I can't believe you don't have 2-way integration of location scouting and breakdown with mobile cameras.<p>o export to media/printing - in a remote location, you cannot safely assume access to the internet, cloud, or universal availability of smartphones or internet-capable devices among the cast and crew. You will still need to be able to produce sides and fall back on more primitive methods. On long nights in the middle of nowhere with terrible weather, paper, pencil and flashlight are going to be around for a while yet. When it comes to charging electronic devices, cameras and sound recorders are going to take priority over ipads and cellphones.<p>o allow for retroactive changes to be made under the cirucmstances described above; sometimes a weary crew will come back to base camp with a list of necessary changes that are handed to a confused production manager, and which must be entered correctly for the following days' shooting schedule to work.<p>o contact management - naturally you want to have that information centralized, but nobody likes having to enter everybody's contact details into a yet another database program with yet another set of misspellings, incorrect phone numbers, yadda yadda. Allow contact import from GMail, Facebook, google+ hotmail, and other major providers. Allow the creation of a contact address that automatically harvests email information and builds the mailing list. Provide call sheets that include hyperlinks and/or graphical maps leveraging some popular mapping API. Use email, Twilio, Twitter, checkin and location services to automagically alert and monitor call times, navigation planning, ride-sharing, and general logistics.<p>o Ensure that the logistical functionality also applies to location/prop management, gear rental, suppliers and so forth.<p>o Include templates for model, location and service releases and allow for digital signature and post-production hard-copy transmission to reduce presale clearance issues. Releases matter, but to so few people on set that they are frequently overlooked during production, leading to expensive headaches later. The closer to sale or release, the more expensive the headache.<p>o Pre/post breakdowns - breakdowns are such a hassle that they are often prepared only for production, while project management before and after principal photography is often done on the back of an envelope. Get pro with this from the outset. Which also means...<p>o input for shooting logs from the AC/Sound team<p>o digital slating - again, this should be out front - scene/shot # and shot clock on an iPad or Android tablet are a no-brainer, and a key visual sell for your branding. A major missed opportunity in your existing design.<p>o Not to mention GPS on mobile devices. Don't just do an electronic implementation of what's already on paper or a laptop and then make people manually add information from digital sensors.<p>o Hell, start planning now for being an input vector for video/audio recording. I have posted audio that was recorded on an iPod because the director suddenly got inspired while he was having coffee with one of the actors and had the means of production in his pocket.<p>o Platform agnosticism - although Apple dominates in the film world, it is by no means universal. Don't confine yourself to a single platform, especially when 95% of your functionality can be achieved with html, css, and node.js.<p>o Build marketing in from the getgo. Eastwood should also be the tool of choice for image tagging tagging, media assets, managing a social media, and driving your marketing campaign from pre-production onwards using the most enthusiastic and committed members of your team - your cast and crew, who stand to benefit directly from the film's success. You'll also need to coordinate their availability for post-production, sales, and release phases, from wrap parties to reshoots to private screenings.<p>o I'm not 100% sure about your branding; the name 'Eastwood' is very clever but might be misinterpreted as implying the authorship or endorsement of a certain Famous Actor...who has more money, fans, and legal experience than your whole team put together. If I were your lawyer, which I am not and which I could not be because I am not a lawyer, then I would advise against infringing on Clint Eastwood's right of publicity because that would basically require you to give him a Large Amount of Money or ownership of the company in lieu. Great name, now pick another. Sorry."
2011-05-19T05:13:08.000Z,Twitter’s Shit Sandwich,"At what point is someone going to just say ""fuck Twitter, Inc."" and create a library of simple web-scrapers that emulates most of the API that twitter has been trying to claw back from the third-party dev community for the past year via the standard http interface?  Such a library may be brittle, but it can't be much worse than the ""yeah, we told you to do this a couple of months ago but now we changed our minds and you have two weeks to comply with our new policy"" status that exists now?"
2011-04-22T00:49:52.000Z,Building a Web Application that makes $500 a Month – Part I,"&#62; I recently had to make changes to my own service because the Twitter API policy team didn't like me telling people who unfollowed them.<p>Just curious: which section of the Twitter API ToS do you read as restricting notifying them of people that unfollowed them? I know that the API policy explicitly prohibits automated unfollowing and restricts automated following, but haven't ever seen anything that addresses notifications of a someone unfollowing another user."
2011-03-23T14:53:52.000Z,Stop Using Mocks,"I've been using ephemeral_response[1] in Ruby, there may be a similar library in whatever language you're working with.  The idea is that it makes one real call to the service and caches it for a specified amount of time as a fixture.  That way you don't constantly make calls against e.g. the Twitter search api, but when they change how it works in 6 months, your test will fail.<p>[1]: <a href=""https://github.com/sandro/ephemeral_response"" rel=""nofollow"">https://github.com/sandro/ephemeral_response</a>"
2011-03-14T09:19:28.000Z,Twitter explains why developers shouldn’t build new clients,"Seems the signals are mixed about what is ok and what is not ok, and people are going back and forth on that.<p>More importantly, what happens when something is not ""ok"", and for what level of ok-ness?<p><pre><code>    1. A client that spams people's Twitter streams without asking? Obviously not
    ok, loss of API token.

    2. A client that alters people's stream to include affiliate links? Presumably
    not ok, loss of API token? (Questionable)

    3. A client which ""enhances"" people's stream by making semantic clarifications
    to content? Example: Imagine if http://twitter.com/english50cent could be
    programmatically generated from @50cent. Is this not ok? It's certainly
    innovative. What are the consequences? Where is the line?

    4. A client that displays the Twitter stream verbatim but comes up with a new
    visualization? Sounds like this is not ok too, since it might ""confuse""
    consumers? Do you lose your API token for this?

    5. Generally, someone builds something that Twitter didn't think of and gains
    mainstream usage, what is the consequence? What is the risk of Twitter making a
    policy against it and shutting it down due to inconvenience to them?

</code></pre>
The Twitter team invented the medium — 140 character limited messages with a very specific style of graph-based visibility.<p>The rest of Twitter's mechanics were invented by third parties. @replies were not invented by the Twitter team, nor RT's, nor hashtags, nor search.twitter.com (acquired), neither was the Twitter iPhone app (acquired), neither were url-shorteners (t.co copied tinyurl, bit.ly, etc).<p>Many of these mechanics came specifically from third-party consumer clients. Someone came along and made a client where words prefixed with a hash were searchable on Summarize, and now Twitter's entire business model seems to be based around that.<p>What would have happened if Twitter said ""don't make any more clients, we got this"" before all this happened?<p>What's going to happen if Twitter says this now, before who-knows-what happens?<p>Twitter's greatest strength has been in recognizing value and innovation created by the community of users, but suddenly this changed. I really hope Twitter reverts their policy/suggestion, and apologizes to the community. Right now it comes off as very arrogant, presumptuous, and stifling to innovation and further progress."
2013-01-09T03:34:50.000Z,All Dashboards Should be Feeds,"I really liked the idea behind a product called Trendly (unfortunately it got shut down because Twitter bought the team).<p>They had some clever algorithms that simplified time series data from google analytics so that you could see at what points real changes occurred.<p>Some screenshots here:
<a href=""http://analytics.blogspot.com.au/2009/08/api-integration-to-measure-significant.html"" rel=""nofollow"">http://analytics.blogspot.com.au/2009/08/api-integration-to-...</a><p>You can see how it's able to take something noisy like time series data and turn it into a stream of discrete events. It's really quite clever."
2013-01-05T12:39:01.000Z,English Letter Frequency Counts: Mayzner Revisited,"Unfortunately Twitter no longer allow redistribution of tweet content (<a href=""http://readwrite.com/2011/03/03/how_recent_changes_to_twitters_terms_of_service_mi"" rel=""nofollow"">http://readwrite.com/2011/03/03/how_recent_changes_to_twitte...</a>).  Datasift and Gnip offer commercial access to the full firehose, but for a sample it wouldn't take long to build your own corpus from the official Twitter streaming or search API."
2012-12-29T11:52:43.000Z,Show HN: The home automation system with an API,"I backed the 'wireless sensor readings to internet' device Twine (<a href=""http://www.kickstarter.com/projects/supermechanical/twine-listen-to-your-world-talk-to-the-internet"" rel=""nofollow"">http://www.kickstarter.com/projects/supermechanical/twine-li...</a>) so I'm going to put down a couple things about my experience.<p>-- Production delays --
I waited almost a year longer than expected to get my unit. Because I just wanted to tinker I wasn't bothered. Ninja Blocks say their units are manufactured, just waiting for the enclosures. This might not be a problem for them.<p>-- Battery eaters --
Twine eats batteries like nobodies business. Two AA batteries last about two weeks. On the forums this seems like the typical experience. Ninja Blocks looks as if the central 'Ninja Block' can be mains powered. But will the wireless sensors have a short battery life?<p>-- Web app --
Twine has a website that the device must communicate with to report data and push rules to it. There's no (out-of-the-box) way to get it to talk to a local server via a clean API.<p>This was a big disappointment for me mainly because their web app is very limited:
- No data logging (just reports the latest figure)
- Rules can just be triggered over thresholds (ie when temperature reaches 20c then X) not when temperature changes
- For moisture the actual resistance isn't reported, just a wet or dry condition. This renders it useless for plant watering.<p>Twine can make a HTTP request when a rule is tripped. I plan to play with this but it's not that useful if it can't just HTTP request every time a value changes as I wanted to log temperature (plus it's a GET!).<p>The Ninja Blocks apps look better and appear to fill the gap between reading something then doing something. Twine can really only report something (twitter/sms/email/HTTP supported). But I'd caution that until you get your hands a device like this you don't know of its true limitations.<p>-- Sensors --
I didn't up my kickstarter amount when they announced new sensors. I wish I had, as only the temperature sensor is nearly useful. The other built in sensor is orientation... ? IMHO they should've thrown in the other sensors and maybe upped the price to increase satisfaction.<p>I prefer the sensor pack that ships by default with Ninja Blocks.<p>In spite of the above I'm optimistic about Twine as it really is early days. This space has massive potential if it can break out of communities like ours into the mainstream. I just hope Supermechanical doesn't get distracted and focusses squarely on their flagship product.<p>Ninja Blocks? I won't be ordering but will keep a close eye on what those who receive the first units think. Their approach so far seems to be a better path to market than Twine's crowdfunding and their presentation superior."
2012-12-27T15:53:40.000Z,Rails is omakase,"Rails doesn't have to be a one size fits all framework if you use it as a web delivery mechanism. That is the point of the Obvious Architecture <a href=""http://obvious.retromocha.com/"" rel=""nofollow"">http://obvious.retromocha.com/</a> You can see an example ""twitter"" app here: <a href=""https://github.com/RetroMocha/obvious_status"" rel=""nofollow"">https://github.com/RetroMocha/obvious_status</a><p>In the case of my example you could swap out the /delivery/web/app.rb or delivery/api/app.rb out for rails no problem. You wouldn't need to change any of the code in /app or /external to do so whatsoever.<p>Just because DHH thinks you should write your code one way and you don't agree doesn't mean you have to throw rails away entirely to have a different or better structure. Rails might be opinionated, but that's just like their opinion man."
2012-12-21T03:27:50.000Z,The Future is Hypermedia APIs,"I am having deja-vu. When I was just starting, everyone screamed about pure ""semantic"" markup and how all css class names should describe <i>what</i> was contained in a node, and have nothing to do with how it was presented. People bent over backwards to comply. I couldn't make it work, but assumed I was just far behind the curve. A few years later and that roar is gone. Bootstrap.css for everything, with class names that describe structure. I can't say I'm hurt by this as it is what I had resorted to all along. But the absolute 180 without even a hint of the old battle cry in the air is startling.<p>I feel like that is again happening here. I <i>can not</i> image how fully compliant REST api's would work in the real world. And when I ask for an example? <i>Twitter, check the Twitter API!</i> But no, that breaks the rules all over the place in the name of practicality. <i>Oh yeah? You want a real example? How about the whole web? The whole web is your example!</i>. That example is so far outside of instructive or helpful I don't even know where to start. I stand agape, unable to even speak. The way clients access my blog system should be based on the whole web? Even though it itself is on the web?<p>I'm done chasing prophets. In five years I do not believe this REST mania will exist anymore, and not because it is so ubiquitous as to go unstated. It will have died or changed drastically in the name of actually working. Bootstrap.rest. Either I am too dumb, or the movement is crazy, or both. But either way, I'm done trying to make things in a way I don't understand. The great and holy can thump their Fielding Bibles with faith that they will be taken home soon. Me, I've given up on salvation, and find the road to hell a much less exhausting one."
2012-12-20T18:05:14.000Z,Getting hyper about hypermedia APIs,"Bias alert: I'm the newest Rails committer and one of the bigger proponents of Hypermedia APIs in the Ruby world.<p>Anyway, many, many other companies _do_ find hypermedia principles to be useful. See Balanced Payments, for example:<p>&#62; Fun fact: our internal statistics show that client libraries that construct the uri receive roughly 2 orders of magnitude more 404 status codes from Balanced than clients which use the uri directly.
&#62; 
&#62; <a href=""http://www.theatlantic.com/magazine/archive/1999/03/the-market-as-god/306397/"" rel=""nofollow"">http://www.theatlantic.com/magazine/archive/1999/03/the-mark...</a><p>GitHub is starting to add hypermedia stuff to their responses:<p><a href=""http://developer.github.com/"" rel=""nofollow"">http://developer.github.com/</a><p>Here's their main API guy talking about the advantages even this partial implementation has achieved: <a href=""https://twitter.com/pengwynn/status/281849041707474944"" rel=""nofollow"">https://twitter.com/pengwynn/status/281849041707474944</a> <a href=""https://twitter.com/pengwynn/status/281849329243787265"" rel=""nofollow"">https://twitter.com/pengwynn/status/281849329243787265</a><p>Twilio has always had elements of hypermedia in their API, and are considering moving further in that direction in the future. They had me speak at their conference for the last two years in a row about the topic specifically.<p>That said, if not doing hypermedia doesn't hurt you, don't change what you're doing! If you're interested in evolving your API over time while supporting old clients and behaviors in a simpler way, then consider checking it out. REST/hypermedia APIs are focused on long-term stability, evolvability, and massive scalability. If you don't need those things, you don't need hypermedia.<p>That said, I'd be happy to answer any questions on the topic, though I'm really busy today, so it might take a while to get back to you."
2012-12-20T16:50:19.000Z,Getting hyper about hypermedia APIs,"Are there any examples of what, for example, the Flickr or Twitter API would look like under hal+json?<p>I'm struggling to see how application/hal+json would help me  write a client to upload a photo.  I imagine that with or without hal I'm ultimately going to POST the data to some endpoint.  The question is, how do I figure out what endpoint to use?<p>Without hal+json I need to read the API docs to discover that ""/photos/"" is the correct endpoint to post to.  But with hal, it seems I still need to read the docs to discover that within the hypermedia file, the key ""photos"" holds the value for the URI template.  So either way, I need to read the docs, and either way, my client breaks if the meaning of the string ""photos"" changes."
2012-12-01T22:04:27.000Z,Zynga Stock Dives as Facebook Keeps Backing Away,"Not really. Zynga isn't failing because they were screwed by a Facebook policy change or really anything Facebook themselves are doing (unlike, say, Twitter's recent API brouhaha), but because of their business model. AznHisoka in this thread said it better than I can; they have nothing to build a business on."
2012-11-28T01:04:42.000Z,Ask HN: What is the highest trafficked website run by an individual?,"The growth was pretty steady, but I was always extracting the maximum from the hardware I had to save money, so for a long time I had intermittent issues. I also had my own server colo'd for a while, which I do not recommend for a one man shop. It nearly broke me a few times having a server go down and spending all day trying to fix it. I had a sever go down hard 2 days before I got married, but I had to let it go until 2 days after the wedding. I didn't think the site would recover from that.<p>The hardest part was to scale it economically. I have always been a big fan of SSD's, which are instrumental in scaling a site that doesn't have the resources to put data they need fast access to in RAM. For example, a site with more money might use redis to cache all the pics for each user (sorted, unique lists), plus all the tweets that point to a pic, but there is too much for me to do that in RAM without selling organs. Also, redis is not very memory efficient. But the advantage is that technologies like that are easy to use and easy to scale. If you have money.<p>The Twitter rule changes freak me out every day but I have not seen any specific moves that make me think they are after me. It is probably a matter of time, but then you need to think about what form that will take. Will they just cut off the Streaming API? That would be a big move. Will they remove pics from the streaming API? I doubt it. Will they make moves to single me out? That would be weird. Will they come after me with lawyers for caching tweets? I don't see that either. But, while I don't see anything specific, there are a lot of what ifs.<p>My advice is to use Twitter to get off the ground and then move away from Twitter altogether if at all humanly possible. That's the strategy they are forcing with their stupid rules, so maybe they will see the light at some point and rethink their strategy."
2012-11-21T01:35:15.000Z,Show HN: Status page for Balanced - Payments for Marketplaces,"The page is driven via the @balancedstatus Twitter account via a protocol our CEO, Matin, came up with. Here's the relevant section from the README for the repo:<p>## Message Display Behavior<p>Messages are fed into the system via the @balancedstatus Twitter account.<p>Messages take the format<p>`&#60;SYSTEM&#62;-&#60;STATE&#62;: &#60;MESSAGE&#62;`; e.g.<p>* `DASH-UP: Everything is back to normal`
* `API-ISSUE: We are experiencing problems`
* `JS: Here's an informal message` _(non-error message)_<p>Where STATE is one of `UP`, `DOWN`, `ISSUE`<p>Messages with a state are displayed in the lower portion of the page idefinitely, `ISSUE` or `DOWN` messages will change the icon of the corresponding service. These messages must be followed by an `UP` state message in order to revert the displayed icon to its natural state.<p>Messages without a state are displayed in the upper middle portion of the page for 24 hours.<p>/----------------------------------------------<p>Beyond that we parse and feed our logs from the various services that make up the Balanced stack and then calculate the uptime percentages based on number of 500s (and slow requests) / non-500s."
2012-11-17T23:13:19.000Z,Twitter's descent into the extractive,"The issue is one of lock-in.  I think that we here on HN are a reasonable bunch.  It's why I like this community.  We don't begrudge our local pizza place earning profit off of us for providing us with a service.  Similarly, we don't mind people in our own industry earning profit in exchange for a service.<p>However, when a business involves network effects, the morality changes.  If WordPress.com started charging exorbitant fees, cutting off functionality, or putting annoying ads everywhere, I could simply move my blog to any number of other hosts or self-host it and none of my readers would be any the wiser.  However, Twitter grew because it offered this liberal, API-driven architecture that allowed tools to flourish and whatnot.  Now, we're feeling like we're in a bait-and-switch moment and we can't leave because our followers have followed us on Twitter.  If we left, we could no longer connect with them.  We're stuck and unless Twitter does something so crappy that we're willing to start over, we have to live with it.<p>Heck, if Twitter was like this from the beginning, would a competitor have gotten the growth that we gave Twitter?  Let's say that Twitter and Jaiku committed to a 15-year feature set as part of a community promise in 2006.  Twitter told us as users and prospective users (before we built large follower networks) that they were going to shut down third party access and plaster ads over the feeds while Jaiku told us that they would commit to ensuring third party access, but might run ads.  Would we have looked at Twitter and Jaiku and given Jaiku the growth and network?<p>I know it's unreasonable to ask a company to commit to a 15 year feature set.  I'm not suggesting that we have any rights to force Twitter to act how we deem proper.  However, when a company creates a lock-in system (like Twitter does with followers) and they perform a bait-and-switch, I think we do have the right to be mildly annoyed and to point out that this might not be the most moral way of acting.<p>Lock-in allows companies to act against their users in a way we should be against.  That doesn't mean we're against profit.  For example, there was a pizza place near me that offered a large cheese pizza for $5.  It wasn't especially good pizza, but it was $5 and my roommate and I loved it for that.  Later, they raised the price to $7.80 (IIRC).  I assume it wasn't so profitable at $5.  However, at nearly $8, we felt we'd rather pay an additional couple dollars to get better pizza.  We didn't begrudge the store their price hike.  We didn't feel they owed us cheap pizza.  Why?  Because they held no power over us.  We could re-make our decision as things changed.<p>For those of us using Twitter, we can't re-make that decision.  Twitter got some of us to use their service because of things they're now taking away.  Maybe other competitors would have had more traction if Twitter acted this way from the start.  But they locked us in and then acted in a way inconsistent to what got them the lock-in.  That's bad.  It isn't take to the streets bad.  It isn't quit the service bad.  But it is bad enough to blog and/or comment about.<p>The issue isn't that we want to deny Twitter the ability to profit.  The issue is that Twitter locked us in and now we feel like we don't have other options for that style of communication.  Twitter has become a sort-of monopoly over that type of communication and they might start using that monopoly power not to merely become profitable, but to become more profitable than a competitive market would allow - at our expense.<p>In some ways, it's tough to be a monopolist.  Everyone gets to take shots at you.  In a competitive market, people generally don't take shots so much because they don't care: they'll just move along to something else that makes them happy.  Twitter's changes are making some people unhappy.  Maybe no other service could be profitable doing less - that is entirely possible. It's entirely possible that Twitter is being as awesome as possible and that they're nearly saintly in their devotion to their users needs - as much as is humanly and technologically possible.  However, we don't and won't know that because of Twitter's lock-in and because of that lock-in, these changes might not feel like Twitter trying to merely continue along and earn a modest profit for its investors, but an exercise of power over us.  That sounds more dramatic than I meant it to.  I mean, it's Twitter, not the heart surgery that someone needs.  Still, it's annoying when we feel someone isn't dealing with us in a square way.  When there are loads of competitors, we can say ""well, it just costs about that much to get me a pizza.""  When there's only one competitor, we become less forgiving because monopoly power has been levied against us in the past to our detriment.  There are loads of alternatives to 37signals' products.  There are loads of alternatives to WordPress.com.  There are loads of other local pizza places.  The same isn't true of Twitter."
2012-11-17T02:20:07.000Z,What Happens When A Twitter Client Hits The Token Limit,"A company builds an API and encourages lots of developers to use it across a wide variety of projects, and they do. After achieving almost unprecedented success in user adoption, the company decides to unilaterally change their terms to say, ""From this day on, not only do we want you to use our API only in ways that drive value to us, we're not really down with you getting any value in return beyond whatever value being able to say 'you can post to Twitter from our app!' brings you."" And they <i>are</i> really down with screwing over existing developers to bring them in line with the New Reality.<p>I'm pretty sure that I would, at that point, <i>not</i> be keen on developing anything that used that API, even if it complied with the new rules, because the company has at that point demonstrated that they <i>will</i> knife me in the back if they think it's going to further their own business goals. How is that reaction ridiculous and immature on my part?"
2012-11-13T13:41:40.000Z,Things that Ruby on Rails people tell you,"&#62; K&#38;R than GoF.<p>Very different comparison to the patterns Fowler presented. The patterns GoF presented were very basic, and were interesting <i>then</i> with languages like C++ when people were still fucking up many of the basic patterns. The number of horribly broken C++ Singleton implementations I've seen, for example, beggars belief. Today that's less of an issue.<p>The patterns Fowler presents are, as the title says, about architecture not low level implementation, and they are patterns you will tend to find in pretty much any large software project today yet that people still manage to fuck up royally, which is the reason the patterns matter.<p>Patters are nothing but recipes of best practice. They're not meant to be ""intriguing"" once you understand the tradeoffs. They're meant to become boring and bland and trivial once people are comfortable with them and their implementation is well understood. They're also meant to give people a shared vocabulary for talking about it. That's the <i>entire</i> <i>point</i>.<p>Most of the patterns in EAR are nowhere that for most people, judging by the code I see regularly and judging by how there's still this cargo cult around the AR pattern by people who in many cases have not even heard about the other ORM patterns presented by Fowler, much less other alternatives.<p>&#62;  There is limited time and large number of books - one has to be picky.<p>If I were to pick <i>any</i> book on software development from the last 10-15 years I'd like everyone to read, it'd be Enterprise Software Architecture, for a simple reason: I still see people using those patterns every day, yet screwing them up in horrible ways. Maybe you don't need it, but the developers I come across for the most part sure do.<p>&#62; Person.where(""last_name = ?"", last_name) is the most concise way to issue that query. Abstracting last_name so that if the field name changes, the query still is relevant is overkill.<p>That is only true if you're dealing with a query that simple (even then, the ""Rails way"" of doing your example would be Person.find_by_lastname(lastname)). On the other hand, I've read the code of dozens of Rails apps that contains several lines long SQL queries littered just because they could.<p>The biggest problem in <i>your</i> example as why you are asking for persons with specific last names in the first place. 9/10 when I see code like that, it is the wrong (too low level) question, and leaks domain logic that should be confined to the model.<p>Also, what happens when you need to serve that query from a web API instead of your database? From a full text engine? From file? From a noSQL database? From on disk hash table? I've had to do all of these - often several from the same application. With a suitable architecture you just plug in your new storage and implement the finders you need supported, and won't have to play ""hunt the raw SQL"". Changing column names is the least of my concerns - that can be fixed with a simple search replace.<p>You also miss the point when you say you can do a base model class and do a mapper yourself: The point is the architecture of AR makes leaking SQL which often ends up in controllers and other places they don't belong all over the place the easy default, while implementing cleaner abstractions is more work.<p>The end result is that most places where AR is used end up with high degrees of coupling for no good reason.<p>If everyone used AR in a disciplined way and avoided littering their controllers and other code with query details that belongs in their models, there wouldn't be a problem.<p>Your argument reminds me of the old memory-protection vs. no memory-protection in the 80's, where the Amiga camp for example tended to be bitterly against memory protection because it was seen as expensive, slow and enabling lazy developers. Expecting developers to write clean code with ActiveRecord is a bit similar to expecting developers to write code free of bad memory accesses without memory protection - it makes it far too easy to do the wrong thing.<p>&#62; github, twitter, heroku et al would like to disagree.<p>And Ebay at least used to be written using ISAPI modules, and large parts of Yahoo runs or used to run on a horrific mess of PHP and Perl (I used to work at Yahoo; there was a lot of dreadful code). Your point again?<p>(and Twitter is a particularly bad example given how much time they spend moaning about how they've needed to move most stuff off Ruby)<p>Besides, pointing to web startups as the pinnacle of engineering quality is ridiculous at best of times - while some of what happens in web startups is amazing, there are also plenty of areas where we're still lagging 20 years behind engineering practices in the enterprise space. Active Record was not by any means a <i>new</i> pattern, for example - none of the patterns in EAR were. They were Fowler's cataloguing of well established patterns with years of use in industry.<p>Rails, and AR, is still better than a lot of the alternatives. That does not mean there are not better ways for a lot of uses than resorting to AR.<p>&#62; Person.where(""last_name = ?"", last_name) makes it unsuitable for large projects?<p>Strawman. If you think simple cases like that is what it is about, you've not seen much complicated Rails code, and it's a waste having this discussion with you.<p>&#62;  It has been long enough to call it time tested.<p>So is BASIC. That doesn't mean it's good. ""Time tested"" is not in itself an argument for anything.<p>&#62;  If Person.where(""last_name = ?"", last_name) is not abstract enough and makes it unsuitable for your projects(still the only concrete complaint from you), look for alternatives.<p>I don't use AR the library unless I absolutely have to, which means I only use it if I help out on Rails projects where I can't dictate policy. Otherwise I'll generally use Sequel, which though it suffers from many similar flaws drawn in large part to inspiration from AR, is cleaner in many ways. There's many things I'd love to change about it, but I already have at twice as much stuff to do as I should.<p>For small projects I might use the Sequel schema module which implements the AR <i>pattern</i>, and which allows for a lot of the same crap that people do with AR the library, but still makes it a lot easier to avoid raw SQL. The AR pattern has its place.<p>But for larger projects I'd generally be inclined to implement mappers, then often with Sequel (<i>without</i> the schema/model module) used internally by the mappers only."
2012-11-12T09:53:10.000Z,Watch Mitt Romney's Facebook Likes Decrease in Real Time,"<i>""I find it an extremely good example of the new types of data historians will get to use in the future.""</i><p>Potentially, but I have two concerns about this. First, I'm not familiar with the facebook api, but does it does it provide a way to determine an account's like count retrospectively? Or does this kind of analysis rely on scraping pages over the time-period of the analysis? Put it another way, could a historian in twenty years time reproduce this data, or does it have to be collected now because no historically useful record is kept? I suspect that online sources actually leave much less historically useful data than, say, newspapers on microfiche, despite online data being much easier to analyse.<p>And secondly, what happens to the data if/when facebook or twitter or google disappear or merge or change massively. As commercial entities, none of them are in the historical data business for anything other than short-term commercial gain. They have no obligation to the more distant future.<p>I wonder what historians think about everything going digital?"
2012-11-08T19:44:04.000Z,You Might Have Gotten An Email From Twitter About Your Account Being Compromised,"Unless Twitter has made the ludicrous mistake of not hashing passwords, a bulk compromise probably means one or more (hosting providers, some weird API middleware) third parties were compromised and leaked access tokens. A password changes invalidates all the old ones for an account.<p>Also, if you look it's mostly journalists, etc. complaining rather than normal people, so it seems more concentrated among those more likely to use third party services."
2012-10-26T18:10:51.000Z,App.net Hackathon: This Is The Energy Twitter Lost,"Hmm. No. If Twitter had lost energy then you could expect them to <i>start</i> holding hackathons- as it is, they have no need to do so. Their API is everywhere.<p>While I'd like to believe that their rule changes are driving developers away, I don't see much evidence- the huge user base is more than enough to make up for it."
2012-10-18T17:06:45.000Z,Tweetbot for Mac is available in the App Store,At least until Twitter changes their API TOS again.
2012-10-11T21:10:46.000Z,"Twitter Open-Sources Clutch.IO, Mobile A/B Testing Service","Good move, Twitter. They just bought an A/B mobile testing service for mobile apps which is super awesome given that their Twitter apps have always sucked and now they make it available for the rest of us for free. Making friends with both the users and the developers so maybe people will forget about promoted tweets and API policy changes."
2012-10-11T17:43:33.000Z,We got hit by a wave of deprecation on Twitter yesterday,"I didn't mean to say that it would be effortless. What I'm saying is that having the API on twitter.com can complicate twitter's web app, which should ideally be a separate service from their API. That might be a change worth making, even if it caused problems for some API users. I don't think keeping a non-versioned url at api.twitter.com would complicate things enough to justify turning it off, unless they didn't care about small API users."
2012-10-11T14:13:47.000Z,We got hit by a wave of deprecation on Twitter yesterday,"Yesterday I found that twitter wasn't working for my simplified posting interface and example node.js application <a href=""https://justtweet.herokuapp.com/"" rel=""nofollow"">https://justtweet.herokuapp.com/</a> so I set out to fix it. The first thing I did was add logging of the error. When I tried pushing it back to Heroku I found that something else broke, because I didn't specify versions for my dependencies in my package.json and it got newer versions with a slightly different API. When I got it working I had refactored my code and changed the API url to https and to specify the version number as 1.1. Thanks to Dave's work note I found out why:<p>&#62; ""All non-versioned API endpoints, such as <a href=""http://twitter.com/statuses/user_timeline"" rel=""nofollow"">http://twitter.com/statuses/user_timeline</a>, will cease functioning.""<p><a href=""http://worknotes.scripting.com/october2012/101112ByDw/unbreakingOurTwitter"" rel=""nofollow"">http://worknotes.scripting.com/october2012/101112ByDw/unbrea...</a><p>Mine was api.twitter.com without a version, not twitter.com.<p><a href=""https://github.com/resources/justtweet.herokuapp.com/commit/100dda50a34a51455e6cad553e07a28e66723646#commitcomment-1981403"" rel=""nofollow"">https://github.com/resources/justtweet.herokuapp.com/commit/...</a><p>I see why they felt the need to break twitter.com to simplify their deployment but I don't see why they thought it made sense to break api.twitter.com urls without a version number."
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
2012-06-30T18:26:21.000Z,"Has the notion of ""files"" outlived its usefulness?","Web APIs change on the whim of the provider and have no permanent basis to build on. No one benefits from pretending that web APIs are as stable, composable, or as powerful as <i>proper</i> files.<p>I italicized proper there because my real point is that you're simply defining yourself the win with the word ""proper"" and not comparing like to like. You can win any comparison by accounting for only the good of one proposition and only the bad of the other, but that's not a valid argument. If, for instance, we ask our web API to have some sort of assurance that it'll be there next year... hell, next <i>week</i>... suddenly ""proper web API"" turns out to resolve to absolutely no concrete noun at all. (How ""proper"" would you have called the Twitter API last week? You know, back just before Twitter started shutting huge swathes of third party apps out of it?)<p>But that's just one definition. The truth is you need the right tool for the job.<p>It is all, in the end, just bits. The bits don't have color [1], and they don't acquire color by being in a web API instead of a file.<p>[1]: <a href=""http://ansuz.sooke.bc.ca/entry/23"" rel=""nofollow"">http://ansuz.sooke.bc.ca/entry/23</a>"
2012-06-29T19:06:13.000Z,Im Done Developing for Twitter,"Back in 2009, I was doing a lot of social network research with the Web Ecology Project (<a href=""http://www.webecologyproject.org/"" rel=""nofollow"">http://www.webecologyproject.org/</a>).<p>Among other things, we captured a 100% set of tweets surrounding the election in Iran in 09, and released a paper on them. It was interesting, because it ended up all being a bit of a precursor to the Arab Spring and many current events in the middle east today.<p>I loved doing it. The API team was responsive, and although we were never able to get full Firehose (despite offerring large amount of money) we were able to easily play with and access a lot of data.<p>Much/all of that has changed. The API has gotten really complex to work with. The terms of service are no longer friendly. Getting whitelisted accounts for standard API calls is impossible, and overall feeling like we have any influence or use to Twitter is dwindling.<p>Whereas at one point I felt it was a joy to work with, now I feel its impossible. Getting the data to study is impossible (or expensive, since a few companies control the firehose), and there's the constant feeling of getting shut down at any moment. Plus, there's just too much data to grab given the clunky methods you have to use to do it. I'd kill for a hard drive of the 'network graph' with diffs over time. As-is, its impossible to answer certain academic questions.<p>To a certain degree, while Twitter is used far more now than in 2009, it feels boring, obvious and less important to me. So at the end of the day, nothing of value was lost, but I do miss it as it was interesting at one point."
2012-06-07T21:25:39.000Z,Twitter shut down my startup.,"Hopefully Twitter will embrace this form of user communication in the long run. Although, if someone started using their API for this purpose out of the blue I can see them shutting it down as a first course of action. Definitely try to get in contact with someone on the inside and see what changes need to be made for them to allow it.<p>My political junkie side loves the idea as an attempt to improve democracy. I could see it expanding into snail mail and phone (twilio)."
2012-05-31T12:30:29.000Z,Oops Now You Can Track the Tweets Politicians Tried to Delete,"Thanks, I should have indeed just copy and pasted the terms. Here is 1.D<p><i>Respect the privacy and sharing settings of Twitter Content. Do not share, or encourage or facilitate the sharing of protected Twitter Content. Promptly change your treatment of Twitter Content (for example, deletions, modifications, and sharing options) as changes are reported through the Twitter API.</i>"
2012-05-30T21:17:25.000Z,Reasons to use PHP,"I love ""x reasons to y"" because the point-by-point rebuttals are so fun to write.  Here we go!<p><i>PHP is stupid easy to scale</i><p>So is every other programming language.  The hard part is scaling your centralized database.  Considering most people using PHP are writing applications backed by a single SQL database, it's a bit disingenuous to call the language ""shared nothing"".  While true, it's completely meaningless and true of literally every programming language ever.<p>It's like saying, ""English makes it really easy to tell love stories.""<p><i>I wont need experts  If the event that my new ventures grow and I need to hire on more programmers I do not need the best and brightest to get the job done.</i><p>True of any language.  I can hire people that are bad at programming any language, cheaply.<p>The deeper problem is that PHP makes it tough to multiply effort by creating good abstractions, so there is a lot of repetitive grunt-work that's best outsourced to a country where people are happy making five bucks an hour.<p><i>It is tied to the web</i><p>""PHP doesn't work very well when not serving web pages, so I use it to serve web pages.""  The tautology department called, they want their tautology department back.<p><i>When it fails, it doesnt fail hard</i><p>I am not sure what this means.  Each request is handled by a single UNIX process.  That's, again, how the author happens to architect applications, not an intrinsic (or unique) property of PHP.<p><i>Other languages need a lot of plumbing to handle that.</i><p>Citation needed.  This is standard CGI that's been around since the 80s.<p><i>There are a plethora of frameworks to chose from</i><p>That's fine.  Again true of any language.  Even Common Frickin' Lisp has several frameworks.<p><i>Best documentation on the web</i><p>The author does not explain why, only that he wishes he could log in with his Twitter account to propose changes.  (What ever happened to emailing the author?)<p><i>Tons of blogs</i><p>True of everything, from programming languages to pictures of cats.<p><i>The PHP Community</i><p>True of pretty much every language I've ever encountered.  Even C.<p>I like the Perl community best because of the infrastructure that the members build for each other.  Want to get an email when your module's tests fail on HP-UX?  Someone has built a service for that.<p>Answering questions is nice, but that's the tip of the community iceberg.<p><i>It integrates with everything</i><p>I read this as: ""PHP has a socket API.""<p><i>Dynamic typing</i><p>I'm just going to quote this one verbatim because I can't come up with anything more hilarious:<p><i>But how do you know if youre working with an int or a string?  By using your brain.  HTTP does not do typing and so PHP does not do (strong) typing for scalars.  Quite frankly, it makes complete sense to do it that way.  Want an int?  Cast the damn thing and stop complaining.  Dynamic typing significantly reduces the amount of code you need to write and error conditions you need to check for.
It plain works  Programmers have it wrong.  The technical solution is not the end goal.  Technology should be an enabler.  Do you have a wonderful technical solution that doesnt solve a problem?  Bye, bye.  PHP solves problems faster, easier and with a lower cost of ownership than almost anything out there.  A lot of that is based on assumptions (or shortcuts) that PHP takes to solve a problem.  Most often those shortcuts work, and the workarounds are very easy to implement (Im thinking mainly about strict type checking here).</i><p>Little does the author know that you can have dynamic typing in any statically-typed language:<p><pre><code>   /** Immutable scalar value. */
   public final class Scalar {

       private final Integer intValue;  // not int so that ""null"" is meaningful
       private final String stringValue;

       public Scalar(String string) {
           stringValue = string;
       }

       public Scalar(int i) {
           intValue = new Integer(i);
       }

       public String toString() {
           if (stringValue == null) {
               fixupString();
           }
           return stringValue;
       }

       public int toInt() {
           if (intValue == null) {
               fixupInteger();
           }
           return intValue.intValue();
       }

       private void fixupString() {
           stringValue = intValue.toString();
       }

       private void fixupInteger() {
           intValue = Integer.parseInt(stringValue);
       }
    }
</code></pre>
All PHP adds are operators like + that are typed Scalar -&#62; Scalar instead of Number -&#62; Number, making up arbitrary behavior for non-numeric values.  If you wanted dynamic typing in Java, you would just write a special math library over your Scalar type and write your application in terms of those operations instead of the built-in ones.  The reason nobody does that is because the static typing, though verbose, makes for nice self-documentation.<p>At some point you need to decide on a type for a value and most people try to do that as soon as possible.  When I write in a dynamically typed language that's not Python, I usually assert well-formedness immediately after reading the data from outside my program.  At that point, dynamic typing is a <i>loss</i> in safety to me.   (When I write Python, I never explicitly check types and let mistyped operations fail at runtime, because that's the convention.)<p>Anyway, that was a fun article."
2012-05-02T13:59:42.000Z,Simplicity Matters By Rich Hickey (Keynote at RailsConf 2012),"With web services, documents are your public API.  Once a service is public, there is a contract between you and the consumers of the API that it will not change until a new version comes out.  This is why we see the /v1/ convention in REST services.  /v1/ MUST not change on people.  You wouldn't do that with a public C library, you shouldn't do that with web services. It is anti-social to change that API on developers.<p>These documents are very complex. Just take a look at a twitter timeline JSON response.  Having a getter and setter for every field in that document would get ridiculous.<p>The problem with JSON is it is so easy to change that it takes self discipline to enforce your own social contract.  We all know that when faced with deadlines some developers get a little fast and loose to meet that deadline."
2012-04-26T13:55:35.000Z,RSS will never die,"One point I am missing on the whole ""RSS is dead, long live Twitter"" topic are their differences on the technological and on the legal side.<p>RSS is an open protocol, free for everyone to implement either way, producing or consuming, filtering or aggregating. Twitter and Facebook offer access to their feeds via their API, which you can only use when you agree to their terms of service. And they retain the right to change the API any time or to restrict access at their own sole disgression.<p>RSS is free as in freedom, Twitter and Facebook are not. And that alone is a good reason to keep RSS around."
2012-04-25T23:31:03.000Z,"Introducing Google Drive... yes, really","What you are referring to isn't part of the OAuth spec, as far as I know, is it something particular to Google's API?<p>The cached access token could also be considered a factor, although it depends on the token expiry policy. If the token doesn't require a refresh using a refresh token (which must prompt a password) often enough its security is compromised.<p>I don't know what kind of expiry Google's OAuth token has, but last time I tested this, it was a very long time. I believe Twitter's live forever. Facebook's offline access scope (which you will need for a normal app) lives forever until the user changes his/her password (see <a href=""http://developers.facebook.com/blog/post/2011/05/13/how-to--handle-expired-access-tokens/"" rel=""nofollow"">http://developers.facebook.com/blog/post/2011/05/13/how-to--...</a>)."
2012-04-22T18:55:08.000Z,Facebook Scripting Language - A really rough idea,"This is what I always have thought to be a huge problem in RESTful API design of all major companies like Twitter, Facebook, Google etc. It is mainly pull-technology. One has to ask the Facebook-server all the time: get a list of friends, get a list of friends, get a list of friends.<p>I'd love to see an API model based on events and callback URL's.<p>pseudo, but you'll get the idea:<p><a href=""http://api.facebook.com/event/on-friend-connect?callback=http://myserver.com/event/friend-connected"" rel=""nofollow"">http://api.facebook.com/event/on-friend-connect?callback=htt...</a><p>IMHO, WebServices should communicate in an evented fashion. If I want to draw an umbrella on myserver if it is going to rain in The Netherlands, I don't want to ask the weather server every X minutes: is it going to rain? is it going to rain? is it going to rain?<p>No, I want:<p><a href=""http://api.weeronline.nl/event/on-weather-change?location=Utrecht,NL&#38;callback=http://myserver/event/weather-changed"" rel=""nofollow"">http://api.weeronline.nl/event/on-weather-change?location=Ut...</a><p>pubhubsubbub solves this issue for RSS feeds, but pubhubsubbub is way too narrow to me. I hope evented API's will become the next big thing, enabling developers to create a whole new bunch of awesome products."
2012-04-21T02:03:42.000Z,"APIs Are Forever, Wait No...They Can Go Away at Any Time","as I have tried to start a business building on top of API's, this is in general a risky business. Not only can they disappear, but also work incorrectly, go down, change overnight without notification. Also your access can be shut down just because of a change of heart on their side<p>If you don't pay for access and have some kind of contract (Twitter firehose, Bing API), yes your business goals are not aligned and you'd better prepare for the worse."
2012-04-18T00:13:52.000Z,A Call for Google+ to Enable Posting via its API,"In the case of Twitter, people actually might if the interface was better. People did, before the interface changed.<p>Now, adding a large group of people to a Twitter list via web Twitter is such a painful exercise, I often turn to an API solution (tweetbe.at in particular) to do it."
2012-03-26T17:11:32.000Z,Using Objective-C On The Server,"A few months ago I was making plans for what is now my home base website for App Store &#38; other projects. I'd been working in obj-c for about 2 years both on the Mac and on iOS, but also had a fair bit of python experience with Django, App Engine, etc. I decided to give it a shot with obj-c.<p>I knew about the handful of ""big"" frameworks for handling this task with obj-c, but rejected them in favor of getting more hands-on experience building it, pushing myself and learning in the process. It was, of course, a personal project, something I alone was responsible for working with, so I decided it was OK if I experimented a little.<p>I went into the project knowing I would eventually have to port it to Python (and I did), but it was a lot of fun :)<p>I hand picked some lightweight libraries to handle specific parts of the server. One has to be cautious knowing that a library developer who thinks their sole target is a tiny cellphone, may not be worrying about things you will eventually have to worry about on a server.<p>I picked CocoaHTTPServer to handle requests and responses, and someone else had written a nicer ""route"" style interface for it which meant all of the possible responses to an http request were simply a series of blocks defined in a row, each with a regex or named parameter style URL route defined right there next to the code that would handle it. This works out to be quite a similar layout in code as something like Bottle/Python or Express/Node.js, both of which I've worked with now and I very much prefer this style.<p>I made good use of blocks &#38; dispatch queues elsewhere as well, firing off an async block whenever I needed to pull new tweets from Twitter's api, or update Github repo stats (both are cached and displayed on the site).<p>I picked a Mustache template library and a Markdown parser library I found on Github for handling dynamic page generation &#38; blog post syntax, respectively. Sqlite for storing anything that needed to be stored, Regexkit-lite for properly checking and handling anything that may be passed in to a url query or post body, etc.<p>I changed the Xcode project type to build me an executable binary that lived inside a bundle (Server.bundle) containing all the pages and assets the thing needed, so it could be deployed as a single ""thing"".<p>I also got Lion's sandboxing to work quite easily, which in theory would give some moderate protection against the entire server being compromised if someone managed to get an exploit to run inside the process.<p>Other than some CPU usage issues with the template library (easily solved by nginx caching pages), it all worked really, really well. I threw enough abuse at it, and did enough debugging that I was confident it would hold up well in production (which turned out to be wrong).<p>And then it came time to deploy somewhere, a problem I had been working on since day one, so i knew what i was getting in to.<p>There were only a few options: a cross-compiler framework like Cocotron (compile on Mac, run on Linux), one of the native *step libraries like GNUstep running on Linux or FreeBSD, or simply deploy on a Mac somewhere.<p>I tried all combinations other than Mac first, I built out a GNUstep environment with libobjc2 on FreeBSD, tried the cocotron-&#62;linux stuff, each time watching something blow up in my face due to my choice of components and my requirements.<p>While obj-c is cross platform, some of the libraries and features I chose to use were not. CocoaHTTPServer is built on top of CFNetwork, which is not part of any obj-c framework/library, but rather a lower level Apple C library only found on Macs. There's a ""lite"" open source version, but I quickly discovered that solving one issue like that would only bring up another. For instance, dispatch blocks will only work with GNUstep at the moment, and only when it is compiled with clang, against libobjc2, a combination few if any Linux distros actually ship in their repos.<p>Not a lot of people interested in deploying modern, dispatch/block-heavy, obj-c 2.0 code to Linux, not nearly as many as there are deploying such things to OS X or iOS.<p>So I decided why not just run on a Mac server somewhere? After all I can't solve every problem all at the same time, and on a Mac a lot of those problems were non-existent, plus the Mac approach would allow me to use things only available on a Mac, like easy sandboxing and potentially keychain integration for auth.<p>I found a Mac VPS provider that ran Xserves and hosted copies of Lion server inside VMware (HostMyApple, not someone fudging the licensing in moms basement). It worked really, really well, as long as I treated it like a headless server (issues with Lion Server are another story for another time). My sandboxing worked, performance was fantastic aside from the CPU usage during a cache miss, so I was fairly happy.<p>Long story short though, memory leaks in 3rd party libraries (that only someone running a server would likely hit), coupled with higher hosting costs (and fewer choices), smaller community and a desire to use some things that are really only ""mature"" in other languages (database adapters, etc), caused me to spend a few days porting the entire thing to Python.<p>My site now runs on a Linode, and is a nearly identical clone of the obj-c version, ported as a Python/Bottle app. There was nothing particularly wrong with the obj-c approach, but the primary focus of nearly all obj-c developers and libraries is iOS, where processes never live longer than a few minutes, or Mac where a crash or leak is only going to affect one person rather than a few hundred in-flight requests. I expect if I had stuck with one of the ""frameworks"" intended for this purpose it would have been a viable option but as I said before I wasn't looking for turn-key, but wanting to get my hands dirty :)"
2012-02-16T14:37:33.000Z,Apple announces Mac OS X 10.8 Mountain Lion,"Don't forget all the API changes that present themselves with each new major version. For example, Notifications, GameCenter and Twitter are all new core libraries on the Mac that are accessible to developers."
2012-01-20T22:10:28.000Z,REST worst practices,"I don't really understand the obsession with using HTTP methods. OP brings up a good point that using only GET/PUT/POST/DELETE to only represent CRUD is extremely limiting, but suggests that using even more obscure HTTP methods would be less limiting? I would argue not only is it limiting, it is also obscure, what is it about ""PUT"" that implies update vs. create?<p>If you look at the twitter API (<a href=""https://dev.twitter.com/docs/api"" rel=""nofollow"">https://dev.twitter.com/docs/api</a>) (commonly held up as exemplary REST) you will see exactly 2 methods, GET and POST. GET means no state change other than logging, POST implies state change. This makes so much more sense because then you can use ?command= and have any command you want and not have people confused about what it means."
2012-01-10T03:15:42.000Z,Twitter’s poor API documentation practices,"I don't know, Twitter API at least works in consistent manner.<p>If you ever tried Facebook API ... People complain that there are no examples for Facebook API: the problem is that they cannot keep up with example to work with constant changes, so they just gave up on examples."
2012-01-09T21:59:52.000Z,Twitter’s poor API documentation practices,"From the article: ""Of all the large product API’s I consume regularly, Twitter’s is the one I’ve had the worst experience with. ""<p>Clearly he hasn't worked enough with Facebook's API and its often broken documentation. It's always fun when Facebook decides to change the API when you're in the middle of a project, but keep backwards compatibility and only ""hide"" the documentation for the old API so you can't find it with search, and now you're left with trying to decide if you should try to keep using the old interface or change your whole code for the new API."
2011-12-27T03:27:38.000Z,The Facebook Platform Is A Trainwreck,"Twitter?<p>I'm working on Facebook and Twitter and the latter just seems generally nastier (ill documented, ambiguous, not based on a simple graph...). A lot of Facebook the Facebook API is pretty good - well documented, clear and simple. And however bad Oauth 2.0 might be, Oauth 1.1 is worse. Oauth 1.1 is pathologically irrational.<p>And Facebook is only, ONLY directly responsible for THE API ITSELF. If they've maintained some Java or Python stuff, that's right nice of them but it's not their main job. If you are complaining about particular SDKs offered by Facebook, you aren't complaining about ""The Facebook Platform"", you're just complaining. When they change the interface (as they've done several times), then complain.<p>I think the site's motto probably explains things better ""Of course it sucks, it's made of software""."
2011-11-12T19:57:50.000Z,Flash is dead. Long live the internet.,"I felt the exact same way for a very, very long time. A few things changed my mind.<p>The first was the realization that Adobe wasn't going to make any more cool fun stuff for me. I feel like they've just lost their way with all that and now that I look back on it, it seems like Macromedia actually made all the aspects of Flash that I enjoy. The most recent thing Adobe has done for me is Stage3D but even that is so technical that they're relying on 3rd parties like Away3D to build the friendly API on top of it.<p>The second was doing a project that was as close to an art piece as I've ever come doing ad agency work that was entirely in HTML/CSS3 and JS. It was actually this project if you want to see some pictures: <a href=""http://inchwormstudio.com/?portfolio=samsung-coast-to-coast-photo-post"" rel=""nofollow"">http://inchwormstudio.com/?portfolio=samsung-coast-to-coast-...</a>
What I found while I was doing that project was that the web has changed a lot while I've been doing Flash and I didn't realize how much annoying obtuse boilerplate I had to write in AS3 that just becomes total cake when you're using HTML for markup, CSS for style and JS for slick transitions and communication. My main love affair is with HTML and JS, I still think CSS is...CSS. With HTML I'm getting all the great structural stuff that Flex devs love, without the mind numblingly elaborate class structures they have to deal with. With good JS libraries like jQuery I'm getting the cross browser DOM support that I need because I just don't have those sea legs yet. And when you combine it all you can work really, really fast. I spent the whole first half of that project cursing JavaScript up and down the office. I would make little examples showing how setInterval loses scope and demo it for my team and be like ""look! this stuff is retarded! I want AS3 back!"" Then one day I had to build this twitter widget, and I sat down and I just cranked it out in no time. And I thought, 'You know, if I had been doing this in Flash I would have spent so much time dealing with URLLoaders and cross policy files and coreLib for JSON parsing...' It just felt like things had gone smoother because I wasn't fighting against the web to make it fit inside my Flash app. And that was about the time that I felt like I got over the hump, and from there it was all downhill.<p>It totally had warts and I got stung by IE transparency bugs but in the end we sorted it all out and now I know how to deal with those issues. And to be honest, they were pretty minimal. The Facebook API was far worse than the cross browser stuff.<p>If you're making the transition then read this: <a href=""http://jqfundamentals.com/"" rel=""nofollow"">http://jqfundamentals.com/</a>
I read it start to finish and it made things so much easier for me. Then once you're comfortable with jQuery, leave it behind and try the other stuff. It feels like there is SO much more to experiment with in the JS world than the AS world and I think that's largely because the community is exponentially larger. Hope that's helpful."
2011-10-25T00:31:12.000Z,"Netflix loses 800,000 subscribers (stock drops 28%)","cookiecaper is on to something when he says that Netflix needs to offer a white label service - but it goes deeper than that, and there is one very stupid road block to seeing it happen.<p>In order to obfuscate the entire business model and tie up legal battles, content providers consider streams to an iPhone, an Android device, a PC, a Mac, a PS3, a blu-ray player, and an internet TV to be completely different services - and the content providers want different rates and pricing to each device.<p>A stream is a stream is a stream is a stream! (...imho)<p>This is the major reason that Netflix hasn't yet been able provide an open streaming API and the real reason TV hasn't seen the explosive changes that music and mobile phones have seen over the past 15 years.<p>Almost all video services feel ancient when you're watching them - the user experience is marginally better or improved over what our grandparents were watching 50 years ago.<p>Where is the bottom line streaming my Twitter lists relative to the genre I'm watching? Where is the onscreen chat with my wife when we're in different cities when our favorite show is on? Where are the annotations on movies from friends, celebrities, and critics? What did my favorite sports writer think of the last play?<p>Why is the biggest screen in the house so dull? Why can't I buy once and play anywhere?<p>TV can and should be so much more, but content providers would want $2/user for every incarnation of each feature I described above - because to them, a stream isn't just a stream isn't just a stream isn't just a stream."
2011-10-16T02:12:24.000Z,Ask HN: What do you wish had SMS alerts for?,"- Forex changes
- Important emails
- Important tweets (twitter SMS does not work in many countries)
- Important RSS feeds
- Google News alerts on certain keywords
- Security alerts e.g. when someone hacks into some of my accounts
- Stocks alerts
- Important reminders from iCal, configurable not all like google cal<p>Would be cool to have a basic SMS altert app that can connect to many web services.<p>You can build a demo with Nexmo.com, the wholesale SMS API with gobal reach and direct to carrier model. (disclaimer: I work for Nexmo)"
2008-06-15T17:38:10.000Z,India's SMS GupShup Has 3x The Usage Of Twitter And No Downtime,"This is not what is usually meant by a third tier. Personally I take database connection pooling for granted.<p>What I mean when I talk about a 'data-tier' is the code that deals with accessing data <i>without knowing in whatever datastore it is contained</i>.<p>If you properly hide for example Twitter#getRecentMessagesForUserById(userId) behind a (Java) interface then you can easily change from an implementation where you do direct database calls to a sharded solution or a cached solution.<p>Other tiers that use this API will simply work because the interface has not changed. One day your app could be talking directly to a single MySQL database and the other day your app could be talking to a 60 node PostgreSQL cluster. It would never know since the details are hidden.<p>This is totally against what you see in every Rails book or example app where the first thing that is done is direct ActiveRecord queries.<p>Yes it is more work, but it pays off in the long term. It also greatly reduces local hacks for caching. All that is done in the right place. And automatically for all users of that tier.<p>S."
2008-05-12T22:56:46.000Z,Ask YC: Have you built a good website that nobody visits?,"Not that it was built to change the world, but I've personally been very happy with <a href=""http://www.iheartquotes.com/"" rel=""nofollow"">http://www.iheartquotes.com/</a><p>It was a two day project to bring the Unix fortune program to the web. You can browse online but I've gotten more use out of the API which I turned into a Twitter bot and include in my .bash_profiles.<p>The Paul Graham tag:
<a href=""http://www.iheartquotes.com/tags/paul_graham"" rel=""nofollow"">http://www.iheartquotes.com/tags/paul_graham</a><p>On Twitter
<a href=""http://www.twitter.com/iheartquotes"" rel=""nofollow"">http://www.twitter.com/iheartquotes</a><p>In my .bash_profile
curl -m 3 <a href=""http://www.iheartquotes.com/api/v1/random"" rel=""nofollow"">http://www.iheartquotes.com/api/v1/random</a>"
2007-10-16T01:59:40.000Z,"Ask: Text Message Providers? (Who do Buxfer,etc use?)","UPDATE: textmarks has an API. wow. there a total winner then <a href=""http://textmarks.com/dev"" rel=""nofollow"">http://textmarks.com/dev</a><p>Sorry I was sleeping&#62; Anyways here is your answer. 1. If you are broke, like me then consider using an email to sms gateway. you will need to know the subscriber's provider. It can work if you are offering a one-way sms service such as updates. Watch out for SMSC spam catchers . 2. If you have money, but no time then you can use a provider such as Clickatell or Verisign and they will do all the background work. All you will need is an access to their API plus a monthly fee of 500-1500/month on top of SMS fees. 3. You have money plus time plus contacts then Forget all these guys and provision your own short-code, then start emailing your contacts at Verizon and them to  give you access to their SMSC. When people say ""I don't know how twitter pays for 250k SMS/month"" they don't know that Twitter is probably paying less than your startup will for 10k SMS. that is the advantage of working directly with the carriers. SMS is super cheap for them. 4. You got money, but want to be careful, then I suggest <a href=""http://mobivity.com"" rel=""nofollow"">http://mobivity.com</a> or <a href=""http://textmarks"" rel=""nofollow"">http://textmarks</a>. This service charge you for zero to only a few bucks and give you a unique keyword plus short-code. You can easily talk to Greg Harris who is the CEO of Mobivity and he is very open to entrepreneurs looking to use his service which is why he has an API.I mean  he will literally let you launch a product competing with his. Textmarks doesn't have an API to my knowledge but you can certainly email Ariel Poller. i would try something like apoller or a.poller@textmarks.com. Be smart when you choose a provider that offers a short-code.When you rent a shared short-code, it can change at any time and now your 50k users have to know your new short-code. If you are doing a interactive SMS service, that can suck. If you are going for the private short-code, then you are safe as a long as you can shell out 1000/month. If you are proficient with Mobile applications, the best way to go is to build your own messaging application. Now when someone sends you a SMS or you send your user a sms ask send them a link as well and ask them to download it. there you have it, no more SMS fees for that guy and your messages can be 500 characters long. OOps I gotta go make more coffee. Email me if you like and I can be more detailed, i just went on here without knowing exactly what you are doing."
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
2011-04-14T00:30:50.000Z,Ask HN: How are lean startups easily accepting CC payments?,"If you want something simple without writing much code, go with PayPal. You'd expect some ""horror stories"" from a payment processor with 232 million accounts. Virtually all of them involve someone doing something that'd raise flags at any merchant account provider or bank, it's just that people think PayPal isn't a bank so they should be able to get away with anything. 10,000 horror stories still leaves 99.99% of users happy.<p>If you want to accept credit cards on your own site, you need to learn about PCIDSS compliance, you need to apply for a merchant account, and you need to a payment gateway that works with that merchant account.<p>It's well within reach of a lean startup. The application is usually a page or two long, you'll get approval from the underwriting bank within a week or so, and most MAPs also resell the payment gateway accounts so they set that up for you and you get everything at once. The fixed costs will be a statement fee and a gateway fee, $20-30 a month total.<p>It's terribly difficult to understand the fees you'll be paying with a merchant account. They're far more complex than whatever you get quoted will lead you to expect, and it's absolutely common for providers to change the fees on a monthly basis such that after a year you have no idea what you're paying. There can be dozens of classes of credit cards each with different rates when you charge them. My only advice for dealing with that is to try not to tie your code to your processor so that, when you grow enough for the fees to matter, you can shop around for a better deal.<p>You don't get to take shortcuts with the PCI stuff. The fine for a credit card being compromised from your server because you weren't PCIDSS compliant start at $500,000 per incident (paid to Visa/MC) plus legal fees and costs to provide credit monitoring to the victims.<p>If you accept credit cards directly on your site, you'll be required to fill out a self-assessment questionnaire and have a compliance scan against your server run on some basis. For most ecommerce setups, it'll be quarterly. What that costs depends on your merchant account provider; some contract with and pay a compliance company for you, others you have to pay some or all of the costs yourself, which can be a couple hundred dollars a year. SecurityMetrics seems to be the most popular service for the scans.<p>The technical part is easy. An Authorize.net integration will take you a couple hours <i>at most</i>. There are libraries for the popular payment gateways in every programming language known to man, and prebuilt shopping carts will have plugins/modules/whatever written by people already.<p>It's just like any other API. You POST some data to some server to make a charge/authorization/refund/etc and get a response to parse. If your app integrates with Twitter, you've already done much harder work than integrating a form with a payment gateway."
2011-04-01T22:10:36.000Z,How does an API become a platform?,"Unfortunately, noone who was trying to answer the question, seems to know what really platform is. People like to shrug off Microsoft as an old borg who lost its way in innovation, but these guys are the ones who actually know what platform is and what does it takes to keep 20+ years of backwards compatibility and workarounds for buggy clients in the code. Spolski was complaining that Microsoft invents too much new frameworks, but the truth is that even though there're 10s new frameworks, the old ones are still there and they will work if you need to use them in your rusty old LoB application. I can hardly imagine Microsoft doing with their API the same thing Twitter or Facebook does with theirs. Platforms can't change overnight because the owner is in search for monetization, otherwise it's not a platform, but a joke."
2011-03-29T19:16:59.000Z,I Hope This Bubble Kills The App,"My thoughts exactly. Doesn't anyone want to innovate, or ""change the world"" anymore?<p>If someone's going to go through all of the labor to make a copy of groupon or an iFart app or a twitter API mashup just for the cash, they should just write a Forex trading algorithm. They'll make more money that way, and their models will be infinitely more computationally unique than any consumer copycat."
2011-03-14T05:25:09.000Z,Twitter explains why developers shouldn’t build new clients,"Yeah, I think Twitter fucked up this PR pretty badly.  I get that it's time for them to make money, and that changes are necessary to that end.  Yes, some devs are going to get screwed in the deal, that's a matter of course, but the last thing they should be doing is spreading FUD about their own platform, which is exactly what this announcement was.<p>I get that they were trying to be transparent, but that's greatly overrated in this case.   API guidelines should be crystal clear.  There's no way for them to have made them crystal clear from the beginning given the rapid iteration of the business plan.  So what Twitter should have done is just iterate the guidelines along with their business plan.  Sure it's gonna piss people off when changes come, but there's no way to prevent that without freaking everybody out in advance."
2011-03-12T16:12:33.000Z,Dear Twitter,"Is there some mechanism where by a startup, or any company for that matter, might provide some guarantee with their API that they will not change it? Some kind of legal contract that isn't so onerous that it must involve expensive lawyers for every single developer sign up? What amount of time for API support would be satisfactory?<p>Seems to me that Twitter sort of did this via a simple terms of use and that now they are making changes for new developers not existing ones. APIs are never going to last forever. I agree Twitter's new stance is bad for developers and users but the way they went about it seems reasonable to me. The why doesn't seem reasonable but it doesn't really matter. This isn't the great API apocalypse of 2011 though. I do not feel less discouraged to make use of APIs today than I did yesterday."
2011-03-11T22:51:37.000Z,Twitter to developers: no new Twitter clients,"This has existed for quite some time now and is called identi.ca<p>I've used identi.ca almost as long as twitter, and my preferred client Twidroyd on the Android supports both of them (thanks to the fact that identi.ca has an option to use an API made to emulate the twitter-API).<p>I highly prefer identi.ca to twitter, and the only thing keeping me on the twitter-network at all is the fact that most of the people I follow only are on twitter, and for some strange reason it's very hard to convince people to change, even though, in my opinion, identi.ca is superior.<p>I really hope they soon manage to get a twitter-pull up and running (they have been talking about that for a long time now). If they managed that I would convert fully to identi.ca.<p>Edit: Got to update my browser more often... Sorry bingaman"
2011-02-08T04:41:18.000Z,What New Twitter Employees Do For The First Week,"Twitter.com is probably one of the great engineering feats of todays social Internet.<p>You tweet from your mobile phone app (maintained by twitter) or twitter.com, and that tweet gets posted on your public timeline. The tweet is parsed for mentions, and it is also copied on to the mentionee's incoming timeline and their mentions timeline.<p>The tweet is parsed for hashtags, and active searches (i.e. ones open on twitter.com, or via the APIs) and is also copied onto those timelines.<p>Also, you have followers. So Twitter also copies the tweet onto the inbox timeline of each of your followers.<p>Not only is all this information published in real time on Twitter.com, but it is also made available via JSON API, Streaming API and Firehose API.<p>All tweets (on all timelines) are stored forever.<p>Twitter's scale is hard to fathom - all of this processing is way beyond what your Rails / Django app could process with a MySQL backend. MySQL replication wouldn'e even come close to keeping up with the sheer volume of events to be processed.<p>To make matters more complicated - Twitter is expected to scale to meet the demand of emerging world events (eg: Egypt, Iran, snowstorms, hurricanes, earthquakes, bushfires). These events don't evenly spread traffic across Twitter's network, but instead provide ""storm surges"" of localised intense traffic.<p>Oh, and Twitter haven't just launched an analytics product?<p>I think for sheer engineering at scale, there are maybe only about half a dozen other companies in the same league.<p>(Edit: grammer changes for readability)"
2011-01-26T10:49:06.000Z,OAuth Will Murder Your Children,"So because some apps abuse the system, we all have to suffer writing lots of extra code?<p>In one of my apps, I request read/write access and then allow the user to select whether they want to tweet on an interaction basis, not on a connection basis. It would provide an extra pain point if the user did want to the application to tweet to have to go back to Twitter.com to change their settings (and if the setting can be changed via the API, then that defeats the purpose altogether).<p>It's not ideal when any app can spam, but it's better than having a user choose their access levels <i>before</i> they've even used the application (where the OAuth request dialogue tends to sit)."
2011-01-26T00:40:40.000Z,OAuth Will Murder Your Children,"Due to a long-standing bug in the Twitter API, you can not add write support to an app without deleting it entirely and re-creating the app in their system. It will let you change the flag for future users, but there is no way to request the additional privileges from a user if needed. As such, it unfortunately a ""good idea"" to always create your Twitter apps as read-write.<p>Reference: <a href=""http://code.google.com/p/twitter-api/issues/detail?id=669"" rel=""nofollow"">http://code.google.com/p/twitter-api/issues/detail?id=669</a>"
2011-01-19T13:36:30.000Z,JQuery Upgrade Causing Trouble for Twitter?,"At a fundamental level people end up putting jQuery through a huge number of unknown situations (millions of users on even more web sites in even weirder browsers). While we certainly strive to have as few issues pop up as possible they seem to be an inevitability.<p>That being said we aren't satisfied with the number of regressions that currently pop up and have instituted a number of changes into our development process:<p><pre><code>    - Significant core rewrites now only occur during
      major (1.x) releases.
    - New features are only added during major releases.
    - APIs are only added/removed/changed during major
      releases (unchanged, we've always done this).
    - Behavior of specific API calls are only
      changed during major releases.
</code></pre>
We've also changed our workflow. We're now doing minor (1.x.x) releases roughly every month and major (1.x) releases every three months. Thus we can still get a good flow of good features out in a consistent manner.<p>I should also mention that the jQuery core development team has <i>many</i> more people helping out now. Active participation has always been a challenge for the team (bug triage and fixing isn't very glamorous). We now have about 8 people who are entirely dedicated to bug triage, test case creation, and prioritization. These people work closely with the core dev team (which has recently more than doubled in size).<p>All of this will help to significantly improve the quality of releases (and has done so quite well with 1.4.4 - 1.4.4 was a very good release, better than 1.4.3. I suspect that if Twitter had issues with upgrading from 1.4.2 to 1.4.4 it was because they had issues with 1.4.3)."
2011-01-13T20:45:18.000Z,Twitter API bug still not fixed 3 years later,"Heh, good ol' issue 214. I get Google issue alerts about it every time someone complains.<p>I don't think this will ever be fixed. If Twitter hasn't officially deprecated the search API in favor of the streaming API, they have de facto, by not making any significant changes in the search API in years. The streaming API still can't do everything the search API can, but it has gotten somewhat close."
2010-11-23T10:47:12.000Z,Why you absolutely MUST write an API when you write your next app,"I'm a little more cautious about this and would suggest three caveats:<p>1. Building an API from day one can be premature. Typically when you start building something is the time when you know the least about the problem you're trying to solve and the issues you'll face solving it. That problem is subject to much more change early than late. If you build an API on day one may just be creating more work for yourself later on;<p>2. If you provide a public API, you are quite possibly exposing your data model and any assumptions that underpin it. This can make it much harder to change later as circumstances change. Think of it as making everything (including data members) public in class. It's abstraction; and<p>3. What value does an API provide <i>you</i> as the service provider?<p>Twitter is an easy example of this: it doesn't really matter where the Tweets (sorry nytimes) come from as Twitter owns the graph, the distribution and the Tweets.<p>Now consider a site like Stackoverflow. What if you could ask questions, search for answers, vote, view your summary information and so on completely via an API. What value would there be in the SO site? Not much at all and it's the ads on those pages that pay for the site (well that and $x million from USV)."
2010-08-22T13:51:17.000Z,"Foursquare iPhone app sends passwords in plain text, don't use","Ok - so welcome to last year?  I recall a PyCon talk on security a few years ago where one of the speaker's first slides was a list of passwords with the text ""if this is your Twitter password, change it, then change your Twitter client.""<p>Most of these startups treat the iPhone as if it were some magical device that's plugged straight into their API.  I actually participated on a Get Satisfaction thread for Gowalla where one person claimed they liked that it was iPhone only (which dates how long ago it was) because it made it ""secure"" and couldn't be ""hacked the way Foursquare can.""<p>Needless to say, they were disabused of that notion pretty quickly when checked in at the Gug, the Apple flagship store in London, and my home within the space of 30 seconds.  It literally took 3 minutes to figure out - most of which was spent setting up my iPhone to proxy through my laptop.  They were (and keep in mind, this is back when Gowalla was still iPhone only) sending everything in clear text.<p>They also didn't regenerate session IDs for anything at the time.  I logged out and logged back in, same session ID.  I logged out via my iPhone, loaded up their site and changed my password, then logged back in, same session ID.  Basically, once you had sniffed one session ID you were set.  I tried it a week later and was still able to use the same session ID without any problem.<p>It's amazing that things like session hijacking are so unknown and unfamiliar to people people relying on web frameworks to do everything for them. At the time they were using Merb---I found out by hitting an ""/unknown/and/unknowable/"" page and seeing their backtrace output.  Session hijacking is a solved problem, why they were subject to it I can't fathom."
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
2009-08-21T03:10:42.000Z,Creating Dynamic Websites with Lisp and Apache,"Maybe I can write that much needed Hunchentoot 1.0.0 document. All the tutorials are for version 0.15.7; the API has changed since.<p>There are two issues involved here: 1) Do you want a ""web app"", or do you want a web <i>platform</i>. It's trivial to get an app up and running in 15 minutes. install hunchentoot, load it into your Lisp of choice and fire away (start by writing handlers, using CL-WHO.)<p>If you want a <i>platfrom</i>, then there are many many engineering decisions to be made. Performance, scalability, security, availability and most of all easy of deployment, development, upgrade and code aesthetics. You can use fastcgi and write Lisp scripts for Apache, Nginx, Lighttpd or any other industrial strength web server. Over the last few weeks I have hacked together various things that should be useful to people; an RBAC implementation, a Redis based message queue, some rudimentary code for managing server farms, etc.<p>You can use your RDBMS of choice; CL-SQL, Postmodern and Cl-Perec are all powerful ORMs and middleware. There also NoSQL solutions readily available to make you both proud and buzz-word compatible.<p>Read Cliki and you can find everything you need to create a URL shortner or a twitter clone right there.<p>Scheme community should have similar tools as well, though they're  a bit more fragmented than we are."
2009-08-04T13:40:13.000Z,IP geolocation is a bad way to select a UI language,"Or assume a default language and then have a clear option to change to something else. That's the same number of clicks in the worst case, but less in the average case.<p>If you use the user agent string in combination with geo-location (and maybe a few other factors such as Facebook API or twitter API heuristics), you could lower the number of wrong languages using a sort of learning algorithm too."
2009-05-06T22:28:18.000Z,"Review my project: TweetSip, Reddit/HN for your Twitter links","I realize this is a bit obvious, but you have to find a way to expand the project beyond twitter. Otherwise they change the api and you're smoked."
2009-03-25T00:07:45.000Z,Ask YC: Feedback on our new service: messagepub.com,"The service sounds interesting, although the pricing is way too high for me (more on that later). I apologize if I sound harsh in my feedback, I'd be equally harsh to one of my own projects too. That said:<p>1) The color you've chosen for ""pub"" (#FFF191) doesn't contrast with the white background enough. I find it hard to read. The same problem arises in reverse on the ""Free Trial"" badge.<p>2) ""A dead-simple messaging API and web service"" doesn't do it for me. I still have no idea what your product is.<p>Spell it out for me:<p>""Get your app talking to Twitter, AIM, and Google Talk in 5 minutes.""<p>3) The goal of the homepage is to tell me what your product is before losing my attention. The best way to do that is getting me to watch a video. Make your video the center of attention on the homepage and optimize for getting people to watch it.<p>4) I like the bullet points, but just stick with the first set (no animation). I would also remove the last one, ""A cost effective solution!"", as it sounds like you made up a 5th item to round out the list. I would also make the copy more active.<p>5) The upgrade IE6 message is inappropriate for a business website, especially when trying to sell a web service to web developers. You're trying to convince me that I can trust your library to handle all the nuanced use cases that would take me weeks to discover. Remember, I'm a developer so I'm looking for a reason to write my own library - don't give me one.<p>So if I see ""function showUnsupportedBrowserAlert()"" in your Javascript it says 2 things to me:<p>- Your site doesn't render correctly in IE6<p>- You don't care enough to fix it<p>That's doesn't give me confidence in your messaging library, which is far more complex than HTML/CSS.<p>Also, suppose someone does come to the site with IE6, or a browser incorrectly identified as IE6. You're effectively turning them away, is that really what you want to do? What exactly is broken in IE6 and what would it take to fix it?<p>6) The video on the homepage doesn't perform well as a sales tool (I'm not sure if it was meant to).<p>I'd make a video that starts with you typing a message into an example app and clicking send. Then your AIM, Twitter, and GTalk alert new messages while your phone rings to play the message back with surprisingly high fidelity. Then show me the 2 lines of code it took (but don't show the install process or have me watch you type out code).<p>7) Pricing - I'd switch away from using different prices for Email/GChat/AIM/Twitter. Even if I'm a current customer it makes them too tempting to replace one by one. If I'm already integrating with your web service whats so hard about integrating with theirs?<p>If its feasible I would include a ton of free credits for those services in a monthly subscription, and make your money charging for SMS and speech-to-text over the phone. SMS is a traditionally expensive technology, and both it and phone are much harder to implement than a web service.<p>I might also change from 1 cent per message to $1 for 100 messages. To me it sounds cheaper, even though it isn't.<p>I'd also provide a way for your website to call me with a message I've typed in to showcase your text-to-speech accuracy.<p>That's about all I've got. Best of luck with the service!"
2009-01-14T15:53:06.000Z,Track Twitter users using Google Analytics,"""As of a few hours ago, it appears Twitter have changed their API authentication system to block this. Oh well, it was fun while it lasted… We’ll let you know here if there’s any update.""<p>less neat."
2007-09-19T04:38:31.000Z,Joel explains how a new monopoly will emerge around AJAX,"<i>""... Not just cut 'n' paste: cool mashup features like synchronization and single-point identity management (so you don't have to tell Facebook and Twitter what you're doing, you can just enter it in one place) ...""</i><p>I've been doing something similiar to this. Here's what I'm finding working with lots of different 3rd party sites ... <p>Using API's<p>- not every site has an API or RSS so you have to CUT+PASTE :(<p>- even sites with API's have poor documentation (code, txt) so it can be difficult to use<p>- posting data (say to twitter,flickr ) is way easier than extracting via an API/RSS<p>- no company(ies) want(s) their hard-won user data to be used commercially (check the legal agreements) so while you can integrate each site requires permission - yuk!<p>- solve the password &#38; authorisation problem for each 3rd party site  <p>Integration layer<p>- abstract an API to talk to each service (eg: as Perl does to databases in the DBI module)<p>- support the most popular sites that people use first (flickr, twitter, Facebook, MySpace etc)<p>- constrain the features you want to support for each 3rd party site (eg: notifications by friends in twitter, or flickr. New books suggested in <a href=""http://www.librarything.com"" rel=""nofollow"">http://www.librarything.com</a>) <p>- keep up with changes made to each service, handle bugs, quirky code<p>Extraction layer<p>- synchronise 3rd party added data and client side added data (the ""add in 1 place"" bit mentioned). This means being able to either/or add data at the client or get the data the user added at the 3rd party site as well and somehow sychronise them<p>- you need tools to extract, manipulate  RSS/ATOM feeds. A boon because you don't need API's<p>Messaging layer<p>- using your abstracted API be able to message various different services
 and here's the hard bit depending on the service. Do you want to send everyone on Twitter a photo update if you have entered 20 flickr photos? <p>- you need to capture store, query, link check and update the various links, metadata and information that message generates. <p>
Presentation layer<p>- layering of data. Intelligent hierarchies of data that be queried by other <p>- flexible presentation layers that can export variety of data formats web pages as to XML, RSS files, mobile phone SMS, etc.<p>- flexible presentation layer(s) that can support different levels of information from a complete archive of past posts to their titles or individual tags<p>- metadata ... support things like tags, microformats at a per document level and be flexible enough to allow for more formats that arise. <p>Of course on top of this you have to build something that others will use, that is bug free as possible in Javascript. Something on or along the lines of Yahoo's YUI ~ <a href=""http://developer.yahoo.com/yui/"" rel=""nofollow"">http://developer.yahoo.com/yui/</a>  Maybe this YUI or NewSDK is what Steve Yegge meant when he was talking about the <i>""Next big language""</i> ? ~ <a href=""http://steve-yegge.blogspot.com/2007/02/next-big-language.html"" rel=""nofollow"">http://steve-yegge.blogspot.com/2007/02/next-big-language.ht...</a><p>In all this I can't help think that maybe just solving a few little problems might be a better starting point and if you do so make sure it's the <i>open web</i> and not some roach motel that sucks up data instead of allowing data to flow.<p>"
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
