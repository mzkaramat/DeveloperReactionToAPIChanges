created_at,title,post
2018-07-05T23:08:09.000Z,"Vue.js: the good, the meh, and the ugly","For one: vue, vuex (centralized state library) and vue-router are stewarted by roughly the same people, which has a few benefits. The documentation is all pretty decent and uniform. I never sit for very long wondering how to do something.<p>Changes that break backwards compatibility are reflected across all three at the same time, and the correct versions are installed by vue-cli. I had several starts with react, react-router, and redux, and on almost every occasion something from my last attempt was broken because the api had changed, and the documentation changed with it (in the span of 3-4 months). That lead to several WTF moments. IIRC there was a period where react-router made some breaking changes from v2 to v3, and then less than a year later made more breaking changes for v4.<p>Vue is also a lot simpler to drop into an existing application. The .vue single-file component is very approachable, albeit a bit magic but about as magic as JSX. You can add a vue-loader for sass&#x2F;less&#x2F;etc. and simply specify lang=&quot;less&quot; in these as well.<p>Vuex was a little easier for me to grok, although I had the advantage of trying out redux first. It has the advantage again of sharing documentation with the rest of the project.<p>Also, because react has worked for big companies as you mentioned, does not mean vue couldn&#x27;t work for them as well. React gained a lot of momentum early among western programmers. Vue first gained traction in Asia - Evan You, the creator of vue, is from there. Also you might remember the massive amount of confusion for early React adopters regarding how to manage state. People liked react, but it only really had the view part ready out of the gate. Facebook&#x27;s explanation of what the early-best-practice flux model entailed was vague, and there were several slightly different implementations."
2018-07-05T13:44:49.000Z,Advice,"Sorry, but that&#x27;s just not true.  Silicon Valley is filled with stories of successful stalkings.<p>For example, in 2007, I loitered outside Facebook HQ on university ave until I had a chance encounter with someone who also attended my alma mater (!) and was starting his first day of work, so he took me inside with him[1].  I tried to meet with Zuck but they sicced Dave Morin on me.  I ended up getting incredible access to the FB engineering team and my app was ultimately acquired, and I partially attribute that to unfair advantage.<p>[1] I think he&#x27;s now successfully retired."
2018-07-05T10:39:40.000Z,Show HN: Generate your og:images automatically,"Hello Hacker-Newsers!<p>I’m Armin, co-maker of Placid. We deliver Social Images as a Service: Placid lets you generate nice Share Images for Twitter and Facebook via our API. (And more Social Image Formats soon!)<p>Here’s how it works:<p>1) Choose a preset design from our library.<p>2) Customize your template with default values for colors, text, photos &#x2F; logos.<p>3) Integrate the meta tags into your project.<p>4) Change parameters of the Image URL in the meta tag to dynamically fill elements of the template. You can f.ex. generate your blog article’s title on to the image or fill a browser window with a screenshot of a website.<p>We started building Placid as a tool to automate Social Image Generation for our own projects and we figured it’s something that other people could use too. For now, we concentrated on providing Meta Images, but we’re already testing Placid for other use cases, like generated Pinterest Images. So we’ll soon add:<p>* An editor to create templates from scratch (and with custom Image Dimensions)<p>* More options to customize Presets<p>* More Presets (also for Instagram Posts and Stories, Pinterest Pins, Facebook Posts,..)<p>We’d love your feedback and suggestions for missing features or preset options :)<p>Armin"
2018-07-05T09:06:01.000Z,WhatsApp sends Cease and Desists for apps that use Android's APIs to interface,The affected developers should “cease and desist” by stopping further development and releasing the code as open-source.<p>WhatsApp&#x2F;Facebook will then have to send C&amp;Ds to hundreds of potentially anonymous contributors if they want any chance of taking the open-sourced app down.
2018-07-03T01:29:50.000Z,Tim Berners-Lee’s Solid is a platform designed to re-decentralize the web,"There are two closely intertwined but separate issues: centralization and governance.<p>Current web technology typically sees one entity controlling the data; if you sign up for a website, your data goes in their database.  That&#x27;s due to the common stack we all build on: some form of API&#x2F;web server, some form of SQL&#x2F;NoSQL database, some form of client.  If we had a world where developers could simply and freely implement services on top of a <i>different</i> paradigm, we&#x27;d stop having to worry about big central entities like Facebook, Google, your local computer store, whoever -- being able to sell your data.  They simply wouldn&#x27;t have it.  I&#x27;m not sure what that paradigm is, but IPFS, Secure Scuttlebutt, Solid, the Dat Project etc. are all interesting takes on what a solution to that problem might look like.<p>At the other end of the spectrum is governance, which is something sorely lacking, and allows these misinformation campaigns to spread so freely.  Do we still have to worry about governance in a world where we own our own data?  Yes, probably, if the surge of illegal and genuinely nasty content like Child Pornography on the new big distributed networks (eg. ZeroNet) is any indicator.  Censorship is a spectrum, and while I can appreciate sticking to the view that free speech is best for all, there are some behaviours which society has mostly agreed are objectionable.<p>The current paradigm of each social service provider essentially being a self-determining fiefdom isn&#x27;t too dissimilar to how humaity&#x27;s always done things, I guess (for instance, different pubs&#x2F;bars will have differing clienteles and degrees of socially acceptable behaviour), except for the scale -- which unfortunately probably does merit a change in how our current major sites are run (YouTube and Twitter in particular seem like they&#x27;ve been gamed incredibly well by cynical parties).  I don&#x27;t know how we solve this problem, but better technical underpinnings might make this a simpler problem to solve.  Independently, however, I note that there are places like <a href=""https:&#x2F;&#x2F;social.coop"" rel=""nofollow"">https:&#x2F;&#x2F;social.coop</a> where they&#x27;re trying to take that problem on head-first.<p>It will be interesting to see what the next few years of the internet look like.  My hope is that we see some of the people interested in this problem start focussing on normal people instead of other techies; suggesting to my friends that they move to Secure Scuttlebutt is pretty hard, as the majority of them really only use their phones (or tablets).<p>Personally, I think something that tied together messaging and an event invitation&#x2F;calendaring system would take a <i>massive</i> knock out of the people who are only hanging onto Facebook for those two things, but that&#x27;s still a techy view of &quot;kill centralisation&quot; and not a social view of &quot;how does that new platform get governed?&quot;."
2018-06-22T14:58:19.000Z,Twitter ‘smytes’ customers,"You could say that an API implements a protocol, but a protocol is much more general. For instance IRC is a well known and widely implemented protocol. Facebook messenger implements a protocol for client server commination, but there are few or none implementations if either side and the main implementation can change the protocol arbitrarily and without notice."
2018-06-20T01:27:58.000Z,React Native at Airbnb,"Wow thanks, that explains a lot. So Facebook basically treats RN as an internal library, a single commit can change the framework API and the implementation at the same time so the constant API churn is not a problem."
2018-06-12T17:18:27.000Z,John Resig: Introducing the GraphQL Guide,"&gt; the fetching of data will have to go deeper and deeper into the data store.<p>Facebook long ago mastered server-side performance for this sort of use case [1]. Minimizing the number of network requests a mobile app has to make (enter GraphQL) is more important than mitigating costly requests, <i>especially</i> on slow or unreliable networks where the bulk of time in spent waiting on bytes. Entire pages&#x2F;screens can now be fetched in a single HTTPS request vs. multiple.<p>As an added bonus, it allows front-end engineers more autonomy and flexibility without having to involve back-end API changes to support ever-changing product updates.<p>[1] <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Facebook_Query_Language"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Facebook_Query_Language</a>"
2018-06-12T10:57:56.000Z,John Resig: Introducing the GraphQL Guide,"Which leaks a lot of implementation details through the public API, preventing changes without breaking existing clients. Which in practice means that you can&#x27;t change anything anymore once you have more than a handful of customers. At least if you don&#x27;t have the market power of a facebook who can say &quot;Adapt your client code or it&#x27;ll stop working. We don&#x27;t give a fuck.&quot;<p>Another big issue is that it forces the client to understand a lot about how your application works. While an API can abstract that and conveniently offer various computed properties which output what the client needs."
2018-06-04T17:26:57.000Z,Why We Disagree with The New York Times,"Incredible, they are using the current controversy to represent their locking down of the API in a good light. Facebook didn&#x27;t restrict their API because they were privacy-conscious. They restricted it so you could not build experiences they did not want:<p>- You cannot sync your address book contacts with facebook in order to get profile pictures (you used to be able to do this)<p>- You cannot write an alternative Facebook client (with a better timeline, no ads, ...)<p>- You cannot write a complete bridge to another social network (e.g. implement Federation)<p>- You cannot build a P2P (serverless) application over Facebook. E.g. a chat, or something to send a file to a friend on Facebook, or to initiate a TeamViewer-like session.<p>All of these are either explicity forbidden by policy, or have been closed by specific changed to their API.<p>To be honest, I don&#x27;t care too much that people were able to scrape data I put up voluntarily. The German Facebook clone was called StudiVZ - Student&#x27;s Directory. This sounds a lot like a telephone book, and that was the mindset and expectation I had when signing up to Facebook. Create and curate a profile for friends and friends-of-friends to see, and I didn&#x27;t care much if others saw anything, because it was irrelevant to them. I mostly cared about meeting people - being found, and finding other people. In this light, I&#x27;m more concerned about data freedom than data protection. While the latter is important of course, it&#x27;s unfortunate that the former is always forgotten."
2018-06-01T21:30:38.000Z,Microsoft and GitHub have held acquisition talks,"I am sure that some journalists interview PR people from Microsoft and some self-promoters who promote the idea of promoting themselves on LinkedIn and say it is great.<p>I think they&#x27;ve gone down the road of harvesting.<p>I don&#x27;t know if anybody is left at LinkedIn rather than life coaches,  scam artists,  offshore development companies,  self-promoters,  &quot;business development&quot; people,  salesmen who can&#x27;t sell (maybe that is what &quot;business development&quot; means?),  recruiters that can&#x27;t recruit (ex. they have been contacting you for years because you once said something about Cold Fusion and they badly need somebody to move to Nome,  Alaska but they never hire remotes...),  people who seem to write 20 articles about data science a day that verge on word salad (you&#x27;d think if they knew that much they could write a better neural network to generate the text.)  And people who are gullible enough to think that there is some value in sending somebody an InMail or using all of those search features they sell so you can do more refined searches of life coaches,  self promoters,  ...<p>Numerous design problems with how the forums work mean that good discussions get drowned out.  The same fraudulent messages get spammed that were being spammed six years ago and they won&#x27;t do, don&#x27;t do, or can&#x27;t do anything about it<p>LinkedIn has closed off most access to the API and you cannot get anything interesting out of it...  except all of the email addresses of your contacts so if you do that &quot;Lion&quot; thing you will probably need to change your email address at some point.  (I think many people don&#x27;t know they get so much spam because they have a LinkedIn account.)<p>I am on the threshold of nuking my Facebook account now that I&#x27;ve disconnected all of the sites that I need to log in that use Facebook.  I still haven&#x27;t decided if I nuke my LinkedIn account or just delete 95% of my contacts."
2018-06-01T14:12:15.000Z,Lost Circles – Visualize the hidden structure of your Facebook network,Very interesting! This tool only seems to collect the profile picture and provide a basic laggy interface to view it. Likely the tool you used previously for this dones&#x27;t work thanks to API Facebook changes.
2018-05-17T17:45:46.000Z,Twitter delays shutdown of legacy APIs as it launches a replacement,"Given the past 2 months of rage against Facebook, I don&#x27;t understand how it&#x27;s rational for any social media company to have a public API anymore.<p>If you go back look at when Facebook actually changed their API to stop the stuff that CA was doing, you&#x27;ll see similar comments about how it&#x27;s &quot;killing the developer ecosystem&quot;. But ultimately it was a good thing that they closed those loopholes."
2018-05-14T16:58:31.000Z,John Carmack: My Steve Jobs Stories,"For those who are unable&#x2F;unwilling to access Facebook:<p>John Carmack<p>Steve Jobs<p>My wife once asked me “Why do you drop what you are doing when Steve Jobs asks you to do something? You don’t do that for anyone else.”<p>It is worth thinking about.<p>As a teenage Apple computer fan, Jobs and Wozniak were revered figures for me, and wanting an Apple 2 was a defining characteristic of several years of my childhood. Later on, seeing NeXT at a computer show just as I was selling my first commercial software felt like a vision into the future. (But $10k+, yikes!)<p>As Id Software grew successful through Commander Keen and Wolfenstein 3D, the first major personal purchase I made wasn’t a car, but rather a NeXT computer. It turned out to be genuinely valuable for our software development, and we moved the entire company onto NeXT hardware.<p>We loved our NeXTs, and we wanted to launch Doom with an explicit “Developed on NeXT computers” logo during the startup process, but when we asked, the request was denied.<p>Some time after launch, when Doom had begun to make its cultural mark, we heard that Steve had changed his mind and would be happy to have NeXT branding on it, but that ship had sailed. I did think it was cool to trade a few emails with Steve Jobs.<p>Several things over the years made me conclude that, at his core, Steve didn’t think very highly of games, and always wished they weren’t as important to his platforms as they turned out to be. I never took it personally.<p>When NeXT managed to sort of reverse-acquire Apple and Steve was back in charge, I was excited by the possibilities of a resurgent Apple with the virtues of NeXT in a mainstream platform.<p>I was brought in to talk about the needs of games in general, but I made it my mission to get Apple to adopt OpenGL as their 3D graphics API. I had a lot of arguments with Steve.<p>Part of his method, at least with me, was to deride contemporary options and dare me to tell him differently. They might be pragmatic, but couldn’t actually be good. “I have Pixar. We will make something [an API] that is actually good.”<p>It was often frustrating, because he could talk, with complete confidence, about things he was just plain wrong about, like the price of memory for video cards and the amount of system bandwidth exploitable by the AltiVec extensions.<p>But when I knew what I was talking about, I would stand my ground against anyone.<p>When Steve did make up his mind, he was decisive about it. Dictates were made, companies were acquired, keynotes were scheduled, and the reality distortion field kicked in, making everything else that was previously considered into obviously terrible ideas.<p>I consider this one of the biggest indirect impacts on the industry that I have had. OpenGL never seriously threatened D3D on PC, but it was critical at Apple, and that meant that it remained enough of a going concern to be the clear choice when mobile devices started getting GPUs. While long in the tooth now, it was so much better than what we would have gotten if half a dozen SoC vendors rolled their own API back at the dawn of the mobile age.<p>I wound up doing several keynotes with Steve, and it was always a crazy fire drill with not enough time to do things right, and generally requiring heroic effort from many people to make it happen at all. I tend to think this was also a calculated part of his method.<p>My first impression of “Keynote Steve” was him berating the poor stage hands over “This Home Depot shit” that was rolling out the display stand with the new Mac, very much not to his satisfaction. His complaints had a valid point, and he improved the quality of the presentation by caring about details, but I wouldn’t have wanted to work for him in that capacity.<p>One time, my wife, then fiancé, and I were meeting with Steve at Apple, and he wanted me to do a keynote that happened to be scheduled on the same day as our wedding. With a big smile and full of charm, he suggested that we postpone it. We declined, but he kept pressing. Eventually my wife countered with a suggestion that if he really wanted “her” John so much, he should loan John Lassiter to her media company for a day of consulting. Steve went from full charm to ice cold really damn quick. I didn’t do that keynote.<p>When I was preparing an early technology demo of Doom 3 for a keynote in Japan, I was having a hard time dealing with some of the managers involved that were insisting that I change the demo because “Steve doesn’t like blood.” I knew that Doom 3 wasn’t to his taste, but that wasn’t the point of doing the demo.<p>I brought it to Steve, with all the relevant people on the thread. He replied to everyone with:<p>“I trust you John, do whatever you think is great.”<p>That goes a long way, and nobody said a thing after that.<p>When my wife and I later started building games for feature phones (DoomRPG! Orcs&amp;Elves!), I advocated repeatedly to Steve that an Apple phone could be really great. Every time there was a rumor that Apple might be working on a phone, I would refine the pitch to him. Once he called me at home on a Sunday (How did he even get my number?) to ask a question, and I enthused at length about the possibilities.<p>I never got brought into the fold, but I was excited when the iPhone actually did see the light of day. A giant (for the time) true color display with a GPU! We could do some amazing things with this!<p>Steve first talked about application development for iPhone at the some keynote I was demonstrating the new ID Tech 5 rendering engine on Mac, so I was in the front row. When he started going on about “Web Apps”, I was (reasonably quietly) going “Booo!!!”.<p>After the public cleared out and the rest of us were gathered in front of the stage, I started urgently going on about how web apps are terrible, and wouldn’t show the true potential of the device. We could do so much more with real native access!<p>Steve responded with a line he had used before: “Bad apps could bring down cell phone towers.” I hated that line. He could have just said “We aren’t ready”, and that would have been fine.<p>I was making some guesses, but I argued that the iPhone hardware and OS provided sufficient protection for native apps. I pointed at a nearby engineer and said “Don’t you have an MMU and process isolation on the iPhone now?” He had a wide eyed look of don’t-bring-me-into-this, but I eventually got a “yes” out of him.<p>I said that OS-X was surely being used for things that were more security critical than a phone, and if Apple couldn’t provide enough security there, they had bigger problems. He came back with a snide “You’re a smart guy John, why don’t you write a new OS?” At the time, my thought was, “Fuck you, Steve.”.<p>People were backing away from us. If Steve was mad, Apple employees didn’t want him to associate the sight of them with the experience. Afterwards, one of the execs assured me that “Steve appreciates vigorous conversation”.<p>Still deeply disappointed about it, I made some comments that got picked up by the press. Steve didn’t appreciate that.<p>The Steve Jobs “hero &#x2F; shithead” rollercoaster was real, and after riding high for a long time, I was now on the down side. Someone told me that Steve explicitly instructed them to not give me access to the early iPhone SDK when it finally was ready.<p>I wound up writing several successful iPhone apps on the side (all of which are now gone due to dropping 32 bit support, which saddens me), and I had many strong allies inside Apple, but I was on the outs with Steve.<p>The last iOS product I worked on was Rage for iOS, which I thought set a new bar for visual richness on mobile, and also supported some brand new features like TV out. I heard that it was well received inside Apple.<p>I was debriefing the team after the launch when I got a call. I was busy, so I declined it. A few minutes later someone came in and said that Steve was going to call me. Oops.<p>Everyone had a chuckle about me “hanging up on Steve Jobs”, but that turned out to be my last interaction with him.<p>As the public story of his failing health progressed, I started several emails to try to say something meaningful and positive to part on, but I never got through them, and I regret it.<p>I corroborate many of the negative character traits that he was infamous for, but elements of the path that led to where I am today were contingent on the dents he left in the universe.<p>I showed up for him."
2018-05-10T12:50:22.000Z,New Changes in Chrome 66 Break Audio in Thousands of Websites and Games,"Some quotes I like below.  I assume the resolution will be something along the lines of &quot;thank you for pointing out that <i>.withgoogle.com needs to be added to the whitelist. ;)<p><pre><code>    &gt; 2. The second issue is that Chrome allows its own products, and a few other select sites, to autoplay audio. JavaScript API changes should be all or nothing — currently this API change (with the secret 1000+ site index and MEI) favours major players like Google, Instagram, Facebook etc. over small independent artists and content creators.

    &gt; Here are some of the many Chrome Experiments listed on the official &quot;Experiments with Google&quot; page ( https:&#x2F;&#x2F;experiments.withgoogle.com&#x2F; ) that are now broken by this update.

    &gt; Note that there is no indication that audio is muted, and no option to enable audio in any way. Also, these experiments *designed for Chrome* all have audio that now works properly in Safari and Firefox on desktop, but not in Chrome.</code></pre>"
2018-05-09T02:59:56.000Z,Google Duplex: An AI System for Accomplishing Real World Tasks Over the Phone,"One time, a giant tech company staffed by geniuses released a super-useful tool that saw massive adoption. 10 years later that tool became technical debt.<p>Wait, it was way less than 10 years.<p>I&#x27;m talking about Google Realtime. Or reader? Or buzz?<p>No, wait, I&#x27;m talking about aggressive Twitter API deprecation&#x2F;removal.<p>Wait, nevermind, I&#x27;m talking about Facebook.<p>You get the idea. What&#x27;s revolutionary today sometimes becomes the substrate for future innovation. Sometimes it gets cast by the wayside, even in the face of significant &quot;user&quot; (developer) popularity.<p>That&#x27;s not proof of negativity; just realism. Negativity would be &quot;no new innovation will ever get traction&quot;. Optimism would be &quot;all new technologies will change the world&quot; (c.f. <a href=""https:&#x2F;&#x2F;www.npmjs.com&#x2F;browse&#x2F;depended"" rel=""nofollow"">https:&#x2F;&#x2F;www.npmjs.com&#x2F;browse&#x2F;depended</a>). This is neither."
2018-05-08T21:50:10.000Z,"Great technology should improve life, not distract from it","All [#] technology improves life, but the problem is <i>cognitive load</i>.  My electricity supply has almost zero cognitive load, and when i have to change a fuse, a actual freaking law made the electrician write which fuse controls which circuit (upstairs lights, downstairs mains)<p>But this only works for <i>commoditised, well understood tech</i><p>For everything else - where we are still getting to grips with the right metaphor for the tool, the right approach is not configuration - it&#x27;s API and openness.<p>All of the Facebook privacy issues go away if there&#x27;s is an ecosystem of API providers and scripts to manage the problems - look at how eu banking is expecting the Payments directive 2 to go<p>[#] handwave on nuclear weapons technology etc"
2018-05-01T21:23:42.000Z,Facebook is launching a dating feature,"Facebook deprecated just 4 weeks ago certain permissions from Facebook Login including relationship status, relationship details, about me, education history, work history. Tinder and Bumble for example relied heavily on those permissions in order to quickly fill the user profile with data.<p><a href=""https:&#x2F;&#x2F;developers.facebook.com&#x2F;blog&#x2F;post&#x2F;2018&#x2F;04&#x2F;04&#x2F;facebook-api-platform-product-changes&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developers.facebook.com&#x2F;blog&#x2F;post&#x2F;2018&#x2F;04&#x2F;04&#x2F;faceboo...</a>"
2018-04-26T20:39:01.000Z,Blocked by Facebook and the Vulnerability of New Media,&gt; creates its own aggregated newsfeed&#x2F;filter<p>I am trying to build this very thing but Facebook&#x27;s recent privacy issues have caused it to over react and I keep getting the below error:<p>&quot;Access to this data is temporarily disabled for non-active apps or apps that have not recently accessed this data due to changes we are making to the Facebook Platform.&quot;<p>The API call getting the error is to retrieve the list of posts from a page. Getting an error for that is just silly. If anyone can help please contact me!
2018-04-25T21:17:16.000Z,Facebook Q1 2018 Earnings Slides [pdf],"Facebook only started deploying its developer API and advertiser changes a couple of weeks ago, which means it already got most of its revenue, if not all of it (depending on how Facebook receives the money and accounts for it) by the time they closed the Q1 quarter.<p>You also can&#x27;t expect to see the full impact of Cambridge Analytica scandal so soon. Let&#x27;s see what happens over the next 12 months. Facebook engagement was already in free-fall last year, and I imagine a lot of people disengaged with Facebook after this scandal, and they plan on using it much less in the future, even if they don&#x27;t actually delete their accounts. Eventually all of these scandals (as well as the future ones) will catch-up with Facebook.<p><a href=""http:&#x2F;&#x2F;buzzsumo.com&#x2F;blog&#x2F;facebook-engagement-brands-publishers-falls-20-2017&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;buzzsumo.com&#x2F;blog&#x2F;facebook-engagement-brands-publishe...</a>"
2018-04-25T11:41:10.000Z,Startup School Beijing,"You can make an exact comparison. Not too terribly long ago I saw protests holding up poster sized pictures of prisoner abuse from Abu Gharib and Guantanamo Bay, which is roughly like holding up a poster-sized picture from the 1989 massacre. Nothing happened to these people in spite of the fact that these pictures are deeply embarrassing to the US government and intensely inflammatory in regions of the world where we don&#x27;t want to be inflammatory.<p>As much as I give Snowden credit for exposing what can be dangerous autocratic programs, I also must point out that Snowden was not just some random protester. Snowden violated a government secrecy oath that he signed, which is a crime and this fact is printed rather boldly on the contract. Nobody forces you to sign these oaths. You can always say &quot;I&#x27;m sorry, I can&#x27;t sign this, I quit&quot; and walk out and get another job.<p>That&#x27;s part of what &quot;the rule of law&quot; actually means. In a nation with the rule of law, the law applies objectively to everyone: crooks, politicians, and yes even do-gooders. If the law is wrong you can vote for representatives to change it, but until then what&#x27;s written is the law. If the law says it&#x27;s illegal to hop on a pogo stick, then anyone hopping on a pogo stick gets arrested even if they&#x27;re on their way to feed starving orphans.<p>(Secret courts are another matter, and I think those are un-American and should be shut down. But they are used far less in America than in China, and when they are used and the fact becomes known there&#x27;s generally quite an uproar.)<p>Also-- personally I find the NSA and CIA less alarming than Facebook and Google. Three-letter agencies operate with at least some democratic oversight and the intel they gather does tend to be used primarily for legitimate intelligence and national security purposes. Unfortunately we do not live on planet fluffy bunny hugs and we need an intelligence service and a military. Facebook and Google operate with zero oversight whatsoever and sell their surveillance services to the highest bidder. Private surveillance operations are completely lawless."
2018-04-24T08:14:40.000Z,Europe’s New Privacy Rules Favor Google and Facebook,"Due to the GDPR Facebook added all kinds of new controls. I looked through them today.<p>Stuff Facebook has tracked, despite not using their app on my phone (preloaded but completely disabled) and using their website only with uBlock Origin):<p>a) everywhere you ever used Facebook to login to a website. I thought I never did this but apparently I still had 5+ websites linked to this. They seem to use this to profile you. Facebook mentions about this _&quot;These are active apps and websites. This means that you recently logged in to them using Facebook, and they can request information you&#x27;ve chosen to share with them.&quot;_ I never wanted to share anything, but Facebook often changes settings or pretends I did<p>b) every time you connected an app to your Facebook account. Apparently I again did at a few times (to easily upload some photos). I also saw old phones in here, Runkeeper (don&#x27;t recall using that), Tinder (haven&#x27;t used in years). All of those seem to forever be able to get information from you.<p>c) topics (yet another new name). Not sure how they figured things like that out. Fortunately you can completely disable the personal tracking, though you need to do that in various different places.<p>d) advertisers whom added their contact list to Facebook. Really!! So some other company shared my details with Facebook. Which means they&#x27;ve also shared details of people not using Facebook with Facebook.<p>e) used websites and apps. This is surprisingly accurate and complete (hundreds of sites+apps!), despite having the Fb app disabled plus always using uBlock Origin. I really wonder if they somehow are able to retrieve the browser history. It seems Facebook also tracks you using &quot;apps using Facebook technology&quot;, which I guess is a library to show ads or something which uses the app permissions to further track the user.<p>f) it uses your profile (relationship status, employer, job title, education) to targets ads<p>g) somehow puts you into categories. E.g. &quot;uses a mobile device (xx to xx months)&quot;. I disabled this crap yesterday, it updated it today with more information. I assume through Whatsapp&#x2F;Instagram or maybe some kind of Facebook ad library? Again, I don&#x27;t want it to track me, yet they seem to be easily able to do this. I turned off all the settings but apparently still missed a few.<p>i) ads topics. Not sure how topics differs from the 3 other ways they call this.<p>j) your location. It doesn&#x27;t show what it does with this. You cannot disable the location tracking; it suggests to turn it off in the phone settings (which is a cop-out). I&#x27;ll need to download my data to further determine this. I&#x27;m pretty sure Facebook is big enough to figure out additional ways of location tracking than just what Android&#x2F;iPhone allows.<p>k) websites visited. I assume any link clicked. This is somehow different than all the other ways it already showed websites.<p>l) the existing &quot;Who can contact you using email address &#x2F; phone number&quot;. It says &quot;Who&quot;, but it is used for the API as well, that&#x27;s not a user so I find the usage of &quot;Who&quot; misleading.<p>Despite doing all of this, still not sure how to prevent something like Cambridge Analytica from downloading my data through others (&quot;friend&quot;). Further as I already mentioned it seems to continue tracking me despite turning everything off. Not cool."
2018-04-19T18:23:33.000Z,API and Other Platform Product Changes,"Much of this data can still be obtained through scraping without the API.  Depending on official APIs for data collection has never been a great idea, as they are often governed by very low rate limits etc.  The Facebook API has been useless for social apps since the 2014 changes anyway, so they have made something that was already useless even more useless. Hopefully everyone here saw the writing on the wall in 2014 and isn’t relying on the Facebook API for business processes or revenue in 2018."
2018-04-19T17:54:05.000Z,Facebook has effectively turned off its API,"For those who can&#x27;t&#x2F;won&#x27;t login to see this:<p>Facebook continues to make real-time improvements to its platform to protect people&#x27;s data. We are making the following changes to maintain trust with people who use our products. These changes are never easy, but by focusing our efforts, we can put stronger protections in place to combat potential abuse. Please find a quick summary of these changes below:<p>Facebook Login:<p>App review required to ask users to share checkins, likes, photos, videos, events, and groups<p>Following fields are now deprecated and will return empty data: relationship_status, religion, political, friendlists, education, work, about, website, interested_in<p>Following Open Graph permissions are also deprecated and will return empty data: books, fitness, games, music, news, video<p>Taggable friends and mutual friends APIs are now deprecated<p>Pages API:<p>App review required<p>Page conversations will receive a new thread identifier<p>Require a Page access token with a matching Page for specific endpoints: &#x2F;agencies, &#x2F;canvases, &#x2F;instagram_accounts, &#x2F;leadgen_forms, &#x2F;page_backed_instagram_accounts, &#x2F;promotable_posts, &#x2F;page&#x2F;userpermissions<p>Deprecated &#x2F;checkin_posts API and webhook<p>Remove social context elements: &#x2F;friends_who_like, &#x2F;friends_tagged_at, &#x2F;video_watch_friends, &#x2F;music_listen_friends<p>App review required to use the following edges: GET &#x2F;page&#x2F;events and GET &#x2F;me&#x2F;events<p>Events API:<p>App review required<p>Deprecated content edges on all events: &#x2F;feed, &#x2F;posts, &#x2F;comments, &#x2F;pictures, &#x2F;videos, &#x2F;live_videos, &#x2F;photos<p>Deprecated user edges on all events: &#x2F;attending, &#x2F;interested, &#x2F;declined, &#x2F;maybe, &#x2F;noreply<p>See User Node and Page API sections for details of &#x2F;events edges on these nodes<p>Groups API:<p>App review required; API use must meet a specific group admin need<p>Removed some fields returned by edges on groups: to, from, likes, reactions, name_tags, message_tags, with_tags, tags, admin_creator<p>Deprecated APIs that share data about people in groups, including &#x2F;members, &#x2F;admins, &#x2F;owner and a number of undocumented endpoints: &#x2F;member_requests, &#x2F;moderators, &#x2F;former_members, &#x2F;insights, &#x2F;links, &#x2F;tagged<p>Search API:<p>Deprecated Search API for pages, groups, events, and users<p>Games:<p>Updated Instant Games context_fetchPlayers API to limit users returned to those who have played in the specified context<p>Deprecated Scores API, Achievements API, &#x2F;taggable_friends, and &#x2F;invitable_friends<p>Deprecated &#x2F;{app-id}&#x2F;staticresources<p>App Insights API:<p>Removed age, gender and country information from the app_event metric<p>Instagram API Platform:<p>Instagram is accelerating the previously announced deprecation of the Instagram API Platform and has lowered rate limits<p>User Node<p>The following User node fields will no longer return information: about, education, friendlists, interested_in, political, relationship_status, religion, website, work.<p>GET &#x2F;user&#x2F;groups and GET &#x2F;me&#x2F;groups - This edge no longer returns any fields that contain User identifying information. This applies to all app Users, even app Admins querying their own User ID.<p>App review required to use the following edges: GET &#x2F;user&#x2F;events and GET &#x2F;me&#x2F;events (apps with user_events permission granted will still require re-review)"
2018-04-14T18:32:16.000Z,1 in 10 Americans surveyed deleted their Facebook account over privacy concerns,"Ironically, being able to keep track of who deletes their accounts disappeared when they closed that hole in their API that was used to extract friends lists (it broke this app I wrote years ago):<p><a href=""https:&#x2F;&#x2F;penguindreams.org&#x2F;blog&#x2F;discoverying-friend-list-changes-on-facebook-with-python&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;penguindreams.org&#x2F;blog&#x2F;discoverying-friend-list-chan...</a><p>Because I&#x27;ve lived in so many places and different countries, there are a lot of people who I can only communicate with over Messenger. I usually use the purple-facebook and purple-hangouts plugins.<p>I never read status updates. I only update my status to promote my other blogs&#x2F;websites.<p>I guess I could switch to sending international texts or ask people for their e-mails (which also means asking them to remove my e-mail from spam since I run my own e-mail server and Google&#x2F;Microsoft don&#x27;t really use DMARC&#x2F;DKIM&#x2F;SPF and always mark my stuff as spam), but messenger is just easier.<p>I think we&#x27;ll only see people get rid of Facebook when there are better alternatives to connect on. Even then it&#x27;s dumb to delete a Facebook account; just stop using it like people did with MySpace."
2018-04-11T11:27:20.000Z,Python 2 will be replaced with Python 3 in the next RHEL major release,"No that&#x27;s just how IT works.<p>Your games don&#x27;t work in windows XP anymore. Actually, your USB3 mouse doesn&#x27;t work on windows 7 out of the box.<p>Centos have LTS, but still EOL.<p>Ubuntu init system was changed to upstart. Then to systemd. Also gnome, then unity, then with new menu&#x2F;notif&#x2F;systray semantics, then back to gnome (but shell), and soon wayland. It breaks a lot of things.<p>Firefox new addons don&#x27;t work with some addons from last year.<p>NodeJS had 3 incompatible forks in it&#x27;s short life.<p>Twitter and Facebook API breaks every sunday.<p>JS frameworks are just madness.<p>Python break compat, ONCE.<p>Once since 1990.<p>Also gave 10 years to migrate.<p>In our industry, that&#x27;s not bad at all.<p>And the community hold. We worked. We wrote tools, doc, blog posts. We were there all the way. We have incredible libs like python-future to help.<p>And if any of that is not enough, well, Anaconda Continuum will be happy to do business with you.<p>It&#x27;s how it is."
2018-04-10T16:26:30.000Z,ISPs Aim to Use Facebook Fracas to Saddle Silicon Valley with Crappy New Laws,"Environmental regulations are a great example because large parts of the US population are in communities tied to industries that were eventually saddled with environmental regulations.  Many of those people believe that the regulations are part of why their industries declined.  For them, the environmental regulations are not highly defensible.<p>Similarly in tech, many of the people arguing against regulations are economically incentivized to minimize the regulations.  FB knew exactly what they were doing, third party developers <i>at the time</i> sounded the alarm [1] about how FB&#x27;s API structure guaranteed that abuse would happen.  What we&#x27;re seeing now is the digital equivalent of BP Deepwater, where people warned about the safety before the incident and no one cared.<p>[1] <a href=""https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2009&#x2F;12&#x2F;facebooks-new-privacy-changes-good-bad-and-ugly"" rel=""nofollow"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2009&#x2F;12&#x2F;facebooks-new-privacy-...</a>"
2018-04-09T16:16:10.000Z,Testimony of Mark Zuckerberg – Hearing Before US House of Representatives [pdf],"<i>&gt;But it’s clear now that we didn’t do enough to prevent these tools from being used for harm as
well. That goes for [...] data privacy. We didn’t take a broad enough view of our responsibility, and that
was a big mistake. It was my mistake, and I’m sorry.</i><p>I was going through some old news archives about Facebook and their privacy policies.  I came across the dire EFF warning in December 2009 [1]:<p><i>&gt;&quot;The issue of privacy when it comes to Facebook apps such as those innocent-seeming quizzes has been well-publicized by our friends at the ACLU and was a major concern for the Canadian Privacy Commissioner, which concluded that app developers had far too much freedom to suck up users&#x27; personal data, including the data of Facebook users who don&#x27;t use apps at all. Facebook previously offered a solution to users who didn&#x27;t want their info being shared with app developers over the Facebook Platform every time a one of their friends added an app: users could select a privacy option telling Facebook to &quot;not share any information about me through the Facebook API.&quot;&quot;</i><p>Well, it turns out EFF was correct and accurately predicted the unethical scenario of Cambridge Analytica siphoning data from Facebook users who didn&#x27;t even take their quiz.<p>The bullet points of &quot;fixes&quot; that MZ outlined don&#x27;t really address the fundamental problem.  Facebook&#x27;s &quot;data privacy&quot; problem is not fixable if they have to ultimately run valuable ads against that data.<p>[1] <a href=""https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2009&#x2F;12&#x2F;facebooks-new-privacy-changes-good-bad-and-ugly"" rel=""nofollow"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2009&#x2F;12&#x2F;facebooks-new-privacy-...</a>"
2018-04-09T03:35:10.000Z,Smartphone Security: You'll Never Guess Who Just Messaged You,"I can imagine how this evolved -- somewhere at Apple HQ, a whiteboarding session about classes of information and capabilities that the OS will gatekeep, which got us to Contacts, Photos, Camera, Microphone, Location. Presumably apps would be extensively curated, keeping out the scummiest of the lot, and apps were envisioned as asking for permissions directly relevant to their utility so having separate read&#x2F;write permissions would be overkill.<p>When Android cloned the same model, they got much more granular with permissions [1][2], but then completely undermined it by making it occur only once at app install. As someone put it [3], they&#x27;re not permissions because you can&#x27;t turn them off -- they&#x27;re warnings about what the app does. Then they further mucked this up, by eventually grouping them together into broad categories within which apps could automagically gain all other permissions without your approval [4].<p>Then, the following year, in 2015, they finally introduced iOS-style runtime-granted permissions, if your device was lucky enough to be up-to-date and your apps were gracious enough to target the new API level; otherwise you missed out on this change.<p>In fairness, by this point, hoover-style request-everything permission requests were extremely common among mainstream apps like Facebook, Messenger, Snapchat... so reigning in on contact-harvesting flashlight apps was a bit of a lost cause.<p>[1] <a href=""https:&#x2F;&#x2F;developer.android.com&#x2F;reference&#x2F;android&#x2F;Manifest.permission.html#READ_CONTACTS"" rel=""nofollow"">https:&#x2F;&#x2F;developer.android.com&#x2F;reference&#x2F;android&#x2F;Manifest.per...</a> [2] <a href=""https:&#x2F;&#x2F;developer.android.com&#x2F;reference&#x2F;android&#x2F;Manifest.permission.html#WRITE_CONTACTS"" rel=""nofollow"">https:&#x2F;&#x2F;developer.android.com&#x2F;reference&#x2F;android&#x2F;Manifest.per...</a>
[3] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7959925"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7959925</a> [4] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7959660"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7959660</a>"
2018-04-05T18:14:41.000Z,Ask HN: Anyone else suddenly lose access to FB's API?,"You&#x27;re going to need to do some reading:<p>1. <a href=""https:&#x2F;&#x2F;developers.facebook.com&#x2F;blog&#x2F;post&#x2F;2018&#x2F;04&#x2F;04&#x2F;facebook-api-platform-product-changes&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;developers.facebook.com&#x2F;blog&#x2F;post&#x2F;2018&#x2F;04&#x2F;04&#x2F;faceboo...</a>
2. <a href=""https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;graph-api&#x2F;changelog&#x2F;breaking-changes"" rel=""nofollow"">https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;graph-api&#x2F;changelog&#x2F;bre...</a><p>There is no easy way to get access re-enabled right now. If you have a direct relationship with FB, now is the time to reach out and let them know what you need."
2018-04-04T21:32:06.000Z,An Update on Our Plans to Restrict Data Access on Facebook,"&quot;Today, however, the company [Facebook] announced sweeping changes to many of its most prominent APIs, restricting developer access in a number of crucial ways.<p>Soon after, Tinder users started noting on Twitter that they had been kicked off the dating app and couldn&#x27;t log back on, as those who used <i>Facebook Login</i> were caught in an infinite loop that appears to be related to an unknown bug.<p>Since <i>you need a Facebook account to log into Tinder</i>, this bug has potentially affected Tinder&#x27;s entire user base.<p>...<p>Tinder has responded in a tweet, &quot;A technical issue is preventing users from logging into Tinder. We apologize for the inconvenience and are working to have everyone swiping again soon.&quot;<p>Source:<p><a href=""https:&#x2F;&#x2F;www.theverge.com&#x2F;2018&#x2F;4&#x2F;4&#x2F;17200034&#x2F;facebook-broke-tinder-down-privacy-api-fixes"" rel=""nofollow"">https:&#x2F;&#x2F;www.theverge.com&#x2F;2018&#x2F;4&#x2F;4&#x2F;17200034&#x2F;facebook-broke-ti...</a>"
2018-04-04T21:31:11.000Z,Instagram deprecates majority of their API,"Not surprising - as someone who has worked in the Facebook APIs for going on three years, the amount of undocumented breaking changes or abrupt API retirements is insane. Their overarching principle here has been &quot;we&#x27;re doing it now so you figure it out.&quot;"
2018-04-04T19:21:07.000Z,An Update on Our Plans to Restrict Data Access on Facebook,Are there any companies that rely on Facebook data that are going to face a rough patch (or cease to exist) because of the API changes?
2018-04-04T19:14:38.000Z,Facebook info of 87M people'improperly shared with Cambridge Analytica',"Two weeks ago we promised to take a hard look at the information apps can use when you connect them to Facebook as well as other data practices. Today, we want to update you on the changes we’re making to better protect your Facebook information. We expect to make more changes over the coming months — and will keep you updated on our progress. Here are the details of the nine most important changes we are making.<p>Events API: Until today, people could grant an app permission to get information about events they host or attend, including private events. This made it easy to add Facebook Events to calendar, ticketing or other apps. But Facebook Events have information about other people’s attendance as well as posts on the event wall, so it’s important that we ensure apps use their access appropriately. Starting today, apps using the API will no longer be able to access the guest list or posts on the event wall. And in the future, only apps we approve that agree to strict requirements will be allowed to use the Events API.<p>Groups API: Currently apps need the permission of a group admin or member to access group content for closed groups, and the permission of an admin for secret groups. These apps help admins do things like easily post and respond to content in their groups. However, there is information about people and conversations in groups that we want to make sure is better protected. Going forward, all third-party apps using the Groups API will need approval from Facebook and an admin to ensure they benefit the group. Apps will no longer be able to access the member list of a group. And we’re also removing personal information, such as names and profile photos, attached to posts or comments that approved apps can access.<p>Pages API: Until today, any app could use the Pages API to read posts or comments from any Page. This let developers create tools for Page owners to help them do things like schedule posts and reply to comments or messages. But it also let apps access more data than necessary. We want to make sure Page information is only available to apps providing useful services to our community. So starting today, all future access to the Pages API will need to be approved by Facebook.<p>Facebook Login: Two weeks ago we announced important changes to Facebook Login. Starting today, Facebook will need to approve all apps that request access to information such as check-ins, likes, photos, posts, videos, events and groups. We started approving these permissions in 2014, but now we’re tightening our review process — requiring these apps to agree to strict requirements before they can access this data. We will also no longer allow apps to ask for access to personal information such as religious or political views, relationship status and details, custom friends lists, education and work history, fitness activity, book reading activity, music listening activity, news reading, video watch activity, and games activity. In the next week, we will remove a developer’s ability to request data people shared with them if it appears they have not used the app in the last 3 months.<p>Instagram Platform API: We’re making the recently announced deprecation of the Instagram Platform API effective today. You can find more information here.<p>Search and Account Recovery: Until today, people could enter another person’s phone number or email address into Facebook search to help find them. This has been especially useful for finding your friends in languages which take more effort to type out a full name, or where many people have the same name. In Bangladesh, for example, this feature makes up 7% of all searches. However, malicious actors have also abused these features to scrape public profile information by submitting phone numbers or email addresses they already have through search and account recovery. Given the scale and sophistication of the activity we’ve seen, we believe most people on Facebook could have had their public profile scraped in this way. So we have now disabled this feature. We’re also making changes to account recovery to reduce the risk of scraping as well.<p>Call and Text History: Call and text history is part of an opt-in feature for people using Messenger or Facebook Lite on Android. This means we can surface the people you most frequently connect with at the top of your contact list. We’ve reviewed this feature to confirm that Facebook does not collect the content of messages — and will delete all logs older than one year. In the future, the client will only upload to our servers the information needed to offer this feature — not broader data such as the time of calls.<p>Data Providers and Partner Categories: Last week we announced our plans to shut down Partner Categories, a product that lets third-party data providers offer their targeting directly on Facebook.<p>App Controls: Finally, starting on Monday, April 9, we’ll show people a link at the top of their News Feed so they can see what apps they use — and the information they have shared with those apps. People will also be able to remove apps that they no longer want. As part of this process we will also tell people if their information may have been improperly shared with Cambridge Analytica.<p>In total, we believe the Facebook information of up to 87 million people — mostly in the US — may have been improperly shared with Cambridge Analytica.<p>Overall, we believe these changes will better protect people’s information while still enabling developers to create useful experiences. We know we have more work to do — and we’ll keep you updated as we make more changes. You can find more details on the platform changes in our Facebook Developer Blog."
2018-04-03T12:27:19.000Z,"Apple Plans to Use Its Own Chips in Macs from 2020, Replacing Intel","They are separate issues, but history has shown that changes in architecture (or form factor) is often used as a pretext to also make other changes.<p>Mobile transformed the computer into a portable surveillance and addictive media device aimed <i>at</i> the user rather than a personal computing device built <i>for</i> the user. Those are two separate issues of course -- there is nothing in mobile that mandates that it be designed to commoditize its users -- but the shift to mobile was used to also smuggle in a total inversion of the user&#x2F;machine relationship.<p>Apple is kind of a strange company. On one hand they have stuck up for the privacy and security of their users, but on the other hand they were a factor in this inversion of relationship. They weren&#x27;t the only or even the primary factor, but the locked down nature of their iOS platform helped other actors such as Facebook and Google implement surveillance-capitalist and gamified attention-capitalist user experiences there.<p>Whether or not I stick with Apple depends on whether or not they keep my computer <i>mine</i> even as they swap out the CPU. I could care less about the architecture as long as it performs well, but I do care about the nature of my relationship with the technology that I use. I care about this for both personal and professional&#x2F;pragmatic reasons."
2018-03-30T20:46:40.000Z,Internal Facebook posts of employees discussing leaked memo,"&gt; By letting the CA scandal happen, they seriously sold a lot of data.<p>The CA scandal did not involve any sale between CA and Facebook. CA sold insights gleaned from data pulled from Facebook&#x27;s public and free-of-charge Graph API.<p>&gt; Also, nothing changes the fact that Facebook is clearly harmful to the society in important ways, according to various researches.<p>I&#x27;m not sure how that&#x27;s relevant here. Arguing that Facebook is a bad company does not make misinformation more correct."
2018-03-30T00:42:46.000Z,React v16.3.0: New lifecycles and context API,"We maintain more than 50,000 components at Facebook, and I don’t believe your assessment that “APIs undergoes drastic changes every few months” is accurate. The component API has barely changed since the initial release five years ago.<p>When we need to make changes, it’s the team of 8 people that need to port all those dozens of thousands of components to new APIs. It would be infeasible for us to break APIs every few months, or to do so in a manual way. This is why we embrace automatic codemod scripts.<p>There have been some breaking changes between major releases (which have a roughly yearly—not monthly—cadence) but we always provided automatic scripts that convert your code as much of your code as possible automatically: <a href=""https:&#x2F;&#x2F;github.com&#x2F;reactjs&#x2F;react-codemod"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;reactjs&#x2F;react-codemod</a>.<p>We also call attention to the automated migration scripts in all major release blog posts (for example: <a href=""https:&#x2F;&#x2F;reactjs.org&#x2F;blog&#x2F;2017&#x2F;09&#x2F;26&#x2F;react-v16.0.html#upgrading"" rel=""nofollow"">https:&#x2F;&#x2F;reactjs.org&#x2F;blog&#x2F;2017&#x2F;09&#x2F;26&#x2F;react-v16.0.html#upgradi...</a>).<p>That’s the only way we could maintain dozens of thousands of components while still moving the library forward.<p>I hope this information is helpful. You can read more about our commitment to stability without stagnation here: <a href=""https:&#x2F;&#x2F;reactjs.org&#x2F;docs&#x2F;design-principles.html#stability"" rel=""nofollow"">https:&#x2F;&#x2F;reactjs.org&#x2F;docs&#x2F;design-principles.html#stability</a>"
2018-03-29T01:21:29.000Z,"Facebook pauses app reviews, disables new user authorizations","There are, obviously similarities. Yet there are, I believe, also two major differences:<p>(a) This was 8 and 4 years earlier. A lot changed in that timeframe. While, yes, there were always concerns about privacy, the string of data leaks, and the increasingly obvious power of statistical methods for targeting, have had a strong effect on the general public&#x27;s attitude towards the practice.<p>(b) The Obama campaign did not break their contract with Facebook. Facebook did apparently turn of their API limits, either because of sympathy or because that&#x27;s just what they did for big clients back then (FarmVille got the same privilege). But in the end, it appears that nobody broke any rules back then.<p>Now this probably won&#x27;t convince everybody. So let me say this: even if the reaction now is hypocritical, it seems everyone agrees that the current outrage is justified. If so, it would be foolish not take action now just because &quot;your team&quot; got caught while the other got away. After all, the chances of each party being advantaged by such practices going forward seem to be exactly equal.<p>(Not to mention the vastly larger universe of threats not involving the two US parties)"
2018-03-28T22:52:10.000Z,"Facebook pauses app reviews, disables new user authorizations","The Facebook API has been useless since 2014 when most access to friend data was cutoff.  Since then, if your objective was data collection, that could be easily achieved  by scraping publicly available information (many friends lists are public, there are many public posts, etc. - certainly enough to use in aggregate to formulate campaign strategies etc.). I suspect that will be the next “scandal,” since in 2018, people can’t possibly take personal responsibility for the things they post and allow to be public.<p>Ironically, the “scandal” that caused this whole thing is a non-issue. Pre-2014 Facebook apps could collect a lot of information about you and your friends, along with their Facebook user IDs, and that was scary because there was a time when you could simply submit a list of user ID’s that you wanted to show a specific ad to.  But since Facebook advertising cannot be targeted by user ID anymore, and this policy was in place well before the 2016 election, all of that data was essentially useless to any participant in the 2016 election other than for aggregate things like general campaign strategies.  I am intimately familiar with the advertise by ID issue - I was awarded a $2k Facebook bug bounty for spotting an exploit in the Custom Audiences feature that allowed an equivalent version of targeting by ID after they disallowed it.<p>So while it’s possible that Obama used his special access to the entire US social graph to successfully influence his elections, it is impossible for Trump or Hillary to have done it <i>even if they had the data</i> because of the changes in the FB ad platform in between 2012 and 2016.  This entire “scandal” was created and promoted by people that don’t understand, or actively ignored, this concept.  If you ask everyone that has read the recent headlines, including reporters that wrote the stories, I’ll bet 99%+ will tell you that they believe they could be specifically targeted with ads.<p>It would be interesting to see if the executives at any of the media companies that have managed to sell this scandal to the public took unusually large short positions in Facebook stock before releasing the story.  Since the story is effectively fraudulent (it was not possible for the election to have been influenced in the way that the stories imply), I assume that would be securities fraud."
2018-03-26T00:56:01.000Z,Zuckerberg Takes Steps to Calm Facebook Employees,"Because people are really, really bad at understanding threats that have vague, uncertain consequences. For the last 15 years, trying to get people to seriously worry about privacy has had about as much success as getting them to worry about climate change: they claim to care, but their revealed preferences tell a different story. The problem is that the downsides are uncertain and in the future, whereas the upsides are immediate and certain. Our ape brains are horrible at evaluating tradeoffs of this kind.<p>But the flip side to this is why the CA story has blown up: for once, the consequences— &quot;CA got Trump elected!&quot;— are immediate and graspable, in a way that &quot;Facebook is scraping your text info&quot; is not (even if it&#x27;s probably not true). When the effects are right in your face and not time-delayed, people sit up and pay attention."
2018-03-24T22:33:22.000Z,Facebook was warned about app permissions in 2011,"I remember building very innocent Facebook Apps for Marketing purposes back in 2011-14 and being very annoyed at the privacy changes as they made our &quot;cute&quot; usecases basically impossible. At the time I always imagined Facebook would monitor their API usage to prevent aggressive mining as this would surely be against their own interests, but as it seems they didn&#x27;t care.<p>If only someone would have used this hole to seed something like Diaspora to help break the critical mass problem for those kinds of projects."
2018-03-22T04:50:57.000Z,Obama campaign pioneered tactics used by Cambridge Analytica.,"This is not to mention that Facebook’s TOS have changed since the Obama 2012 tool. As anyone working with Facebook’s Graph API will know, the amount of data and filtering available to developers has been dramatically restricted in the last few years. This Cambridge Analytica approach seems to be a clear attempt to circumvent the spirit of the TOS and the ability of users to control their own privacy.<p>If anyone remembers the flood of spammy apps that used to be commonplace Facebook, those were built off of access to your friends lists. All you needed was one of your friends to play poker or take a quiz, and your personal information would be siphoned up by the app maker.<p>It’s unclear whether the users who took part in the sham academic study paid for by Cambridge Analytica will be able to obtain any legal remedy, but it seems pretty clear that what they were being paid for was not taking a quiz, but rather for access to hundreds of their friends’ information.<p>Edit:<p>It seems that these restrictions were implemented in 2015: <a href=""https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a>. However, Facebook’s “platform policy” at the time did prohibit using data of a user’s friends for advertising (<a href=""https:&#x2F;&#x2F;www.theguardian.com&#x2F;news&#x2F;2018&#x2F;mar&#x2F;17&#x2F;cambridge-analytica-facebook-influence-us-election"" rel=""nofollow"">https:&#x2F;&#x2F;www.theguardian.com&#x2F;news&#x2F;2018&#x2F;mar&#x2F;17&#x2F;cambridge-analy...</a>)."
2018-03-21T21:30:26.000Z,Zuckerberg on Cambridge Analytica situation,"The pre-2015 (FB Graph v1.0) API gave apps access to not only all of a user&#x27;s own data, but also all the friends-only data of their FB friends. This archive.org link shows the sort of information that the Friends API used to provide: <a href=""https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20130911191323&#x2F;https:&#x2F;developers.facebook.com&#x2F;docs&#x2F;reference&#x2F;login&#x2F;extended-profile-properties&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20130911191323&#x2F;https:&#x2F;developers...</a><p>This TechCrunch piece from 2015 talks about the reaction to the API access going away: <a href=""https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a><p>&gt; It was always kind of shady that Facebook  let you volunteer your friends’ status updates, check-ins, location, interests and more to third-party apps. While this let developers build powerful, personalized products, the privacy concerns led Facebook to announce at F8 2014 that it would shut down the Friends data API in a year. Now that time has come, with the forced migration to Graph API v2.0 leading to the friends’ data API shutting down, and a few other changes happening on April 30."
2018-03-21T20:37:57.000Z,Zuckerberg on Cambridge Analytica situation,"&gt; First, we will investigate all apps that had access to large amounts of information before we changed our platform to dramatically reduce data access in 2014, and we will conduct a full audit of any app with suspicious activity. We will ban any developer from our platform that does not agree to a thorough audit.<p>I remember the old days of the graph API - there was a whole lot you could do with someone&#x27;s account, and it was common for users, especially non technical users to blindly hit accept on the permissions screens.  If I&#x27;m not mistaken, you could even make a developer account without a verified phone number at the time.<p>I don&#x27;t think banning some of those apps is any kind of consolation really. The API sat like that for years. Anyone with nefarious motives already took what they wanted and ran. What repercussions will they face? The will be banned from Facebook? The apps are probably long gone. There was a time when Facebook apps were at their peak, that fad died off. The data is probably sitting in a database somewhere today. If I&#x27;m not mistaken, Facebook Games could still grab the friend list permission until quite recently.<p>Also what authority does Facebook have to do any kind of audit? How would that audit even work? If someone copies all the data to an external drive and locks it up, what will the audit reveal? &quot;Yep there&#x27;s no data here, pinky swear!&quot;<p>The basic premise of Facebook is flawed. If your private thoughts or photos are posted on a platform where you don&#x27;t control the data, the data is never safe. A good product that serves the user faithfully and takes this into account is probably closer to a decentralized product - maybe something like Mastodon (I haven&#x27;t looked into it in much detail). Facebook has already acquired the users - if they can figure out a way to make money and switch to a decentralized model at the same time, they can solve this once and for all. They would arguably even gain users who would now have a reason to trust their service."
2018-03-21T20:11:22.000Z,Zuckerberg on Cambridge Analytica situation,"There&#x27;s a short discussion about the changes here: <a href=""https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;23417356&#x2F;facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u"" rel=""nofollow"">https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;23417356&#x2F;facebook-graph-...</a>"
2018-03-21T19:23:15.000Z,Facebook Is Not the Internet's Only Privacy Villain,"Databrokers enable this - take a look at something like Acxiom&#x27;s developer APIs.[1] You&#x27;ll find that they have some quite interesting stuff, like whether someone&#x27;s interested in gambling.[2] Facebook partners with these folks (as do many others) to enable them to build this aggregated database.<p>Interestingly, you can log in and see your own profile there. I did that a few years ago, and introduced subtle errors into it (e.g. I changed my car to a different brand of car, and the &quot;extended warranty services&quot; robocalls around a year later started calling about my nonexistent vehicle).<p>[1] <a href=""https:&#x2F;&#x2F;developer.myacxiom.com&#x2F;code&#x2F;api&#x2F;data-bundles&#x2F;main"" rel=""nofollow"">https:&#x2F;&#x2F;developer.myacxiom.com&#x2F;code&#x2F;api&#x2F;data-bundles&#x2F;main</a><p>[2] <a href=""https:&#x2F;&#x2F;developer.myacxiom.com&#x2F;code&#x2F;api&#x2F;data-bundles&#x2F;bundle&#x2F;gambling"" rel=""nofollow"">https:&#x2F;&#x2F;developer.myacxiom.com&#x2F;code&#x2F;api&#x2F;data-bundles&#x2F;bundle&#x2F;...</a>"
2018-03-21T02:11:33.000Z,Facebook Sued by Investors Over Voter-Profile Harvesting,"I am a developer of an app that makes use of Facebook friend permissions and have seen the various API changes they have made since 2014.<p>Applications using Facebook Graph 2.+ (which is the only option since Spring 2015 or so) who access friend data may only access data of friends who have also given consent to your app. So if A and C log into a Facebook app, and A is friends with B and C, the app can only be aware that A and C exist. This is true of legacy and new Facebook applications. It used to be possible to get basically everything about B (name, age, gender, photo, etc), but that all got shut down when Graph API 1.0 was discontinued. If this is somehow not the case for some Facebook apps that got special permission or there is a hack to get at the data, that would be a huge breach of trust."
2018-03-20T21:06:35.000Z,Both Facebook and Cambridge Analytica Threatened to Sue Journalists,"Yes, it really went that deep.  But only if you pinky swore to only use that data to improve your app and then delete it!  Facebook changed their API in 2014 and removed that ability, allowing companies to only see the profiles of friends that already had the same app (which the developer already had access to anyway).  They claimed it was for user privacy, but really they realized they were giving away the crown jewels and allowing other companies to recreate large swaths of their social graph."
2018-03-20T12:32:00.000Z,Facebook’s Surveillance Machine,"As I understand it, originally the Facebook API allowed you to access friends of friends - hence the millions of records.  They changed this a couple of years ago (but apparently after CA had accessed the data).<p>It was also against the terms of service to download and store the information retrieved from the API.  They also changed this many years ago, in the name of developer convenience."
2018-03-19T19:15:35.000Z,Facebook has suspended acct of the whistleblower who exposed Cambridge Analytica,"This is hyperbole. He created an app, wrote in the description that it was for academic purposes, and then later amended the description &#x2F; TOS to allow selling of data. Facebook is faulting him because he did not update them on the purpose of the app.<p>There were no systemic barriers in place that Kogan had to circumvent to get access to the data; the Facebook API worked as expected and gave it to him. Regardless of the original “purpose” of the app (a small textarea input you supply to FB), the API would provide the data. The “purpose” of an app does not affect what data is available to it in any meaningful way.<p>The idea that he should have notified Facebook of the changes is laughable; all he had to do is change a few text inputs to update the TOS. The FB platform does not treat an app differently based on its purpose. This is CYA language from FB trying to obfuscate the fact that <i>any and every app</i> has access to this same data, and FB has no control over what happens to the data once an app extracts it. Indeed, much of their business model depends on this premise.<p>Further, the practice of changing terms &#x2F; functionality of an app is a laughably commonplace way of circumventing the nearly non-existent FB platform review process.<p>I have personally seen much worse incidents of FB app abuse in the wild. For example I once reverse engineered a top 10 iOS social app and discovered they were injecting custom JS into the WebView provided by FB to get the ID of all your friends, rather than the top 50 you can see. The app’s FB “app” was classified as a game which gave it the requisite permissions for abuse and even allowed the app to secretly invite all your FB friends to it without you ever knowing."
2018-03-10T20:55:03.000Z,Ask HN: Why was react-native recommended to me? Not seeing benefits,"&gt; last trivia question- I was considering using Reflux, but I saw an article saying reflux is dying. I&#x27;ve heard facebook is especially brutal with changes.<p>Not dying, just shrinking usage area. The community feels that it got overused. Kinda like you don&#x27;t buy an Oracle license to make a todo app. So there&#x27;s some backlash in the blogs. Upcoming versions of React include better&#x2F;expanded global state management (the context API). Some of what people use Redux for now will be better served by that API.<p>Redux also doesn&#x27;t tie in with any specific database or backend. As other vertically integrated solutions take shape, that will also cut into Redux&#x27;s usage. At facebook, this would be Relay, a GraphQL library. A lot of people are excited about using a query language to talk to the server. It makes versioning and supporting multiple generic apps&#x2F;features much simpler. Writing specific web service APIs locks you in if you need to support old client versions, etc. You end up with fetchUserInfo(), fetchUserInfo2(), fetchUserInfo3(), etc to avoid breaking clients. Ugh."
2018-02-22T03:22:38.000Z,Semantic Import Versioning,"This could still become a problem (if each dependency statically bundles its own dependencies) if any of the types are exposed in an API.  For example say there is a Twitch and Facebook SDK that both expose a SetUserProfile(Image) function, and Image is provided by a third library (that is used by both SDKs).<p>If both SDKs use different versions of the Image library, the internals of the Image struct may have changed (maybe they added support for black and white images).  Even though the change may be backwards compatible at a source code level, an Image struct v1.15 wouldn&#x27;t work as an Image struct v1.16 unless it had the same internal private fields (and they were used in the same way).<p>Now, your code that loads an Image from disk can&#x27;t work.  It will either use v1.15 and be compatible with Twitch, or use 1.16 and be compatible with Facebook, but not both.  A shared dependency works around this issue as long as the changes are backwards compatible - in this case Go would see that the minimum required version is v1.16 and both SDKs (and your code) would use that (or a newer version if you list it as a requirement)."
2018-02-20T19:06:58.000Z,Twitter and the Internet War,"I am not a coder by any means, but I am a heavy social media user and know a lot about politics, sociology, psych, organizing, health, comms---and I admit, until I read this thread, I liked this article because it gave me a better reason for all the screw ups, beyond, &quot;The Executives are dithering and have no business skills and social skills.&quot; Or the theory &quot;The Executives do nothing because they don&#x27;t care if women and vulnerable people die.&quot; Which is far more disturbing....it can&#x27;t be true, even if it <i>feels</i> true.
I would give anything if they&#x27;d listen to users who have been around awhile. So few people worked there and also used it at the same time. (And users longingly miss the Fail Whale logo...)
As a user (250,000+ tweets) under a pseudonym, twitter has incredible uses, things Facebook and other platforms didn&#x27;t do, because they were so closed and hard to search. They created echo Chambers, because you could only see people you already knew or were slightly connected too. Or worse, your mom or mother-in-law could find you. Twitter was so open--if I want to discuss philosophy or Japanese food or an MRI result, 24&#x2F;7 I just search and people who love that are there. And pseudonyms had to exist, because thousands of people in real life have the same name. (just like the rest of the Internet back then and yes, now too) They thought people would just post status updates like, hey eating lunch, but we did way way more. They made it 140 chars with 20 chars reserved for names because many people had expensive tiny data plans, but could update by text message; allowing a much wider demographic to use it, and across multiple countries, even low tech ones with limited access. 
The most critical piece tho is that users invented everything good about twitter (Sorry creators--but we did). TW allowed some html symbols, so a user put an @ in front of a user name to reply, and it worked! Users also invented hashtags, the first one was for organizing BarCamp--which was kind of a conference not about alcohol and the original manual RT, and MT for modified tweet, and commenting on top of  someone&#x27;s tweet, or at the end of it and we figured out how to shrink long urls to post links. bit.ly had no purpose til then, and many users became Developers and got full access to the API and we crowdsourced hundreds of changes and ideas, from pictures to videos to emoji to gifs to analytics, to accessible apps for people with vision, hearing, speech issues. All while making lots and lots of jokes.
They didn&#x27;t start out with a heavy respect for pseudonyms, and privacy, and free speech--but TW learned it fast after the Green Iran Revolution, and after many patient users wanted to keep privacy because they had rare diseases, and mental health issues, and parents of kids with autism and speech issues took to it and found each other and felt less alone. It was less complicated than blogging and writing long stories on laptops after events happened. I could do everything from live tweeting a doctor&#x27;s appt to an ER visit and get reactions from friends who could tell me what to ask. 
We still tweet everything from recipes to exact instructions on how to ride a bike, how to organize groups like #occupy to crowd sourcing Flu symptoms and rashes, to who is watching what TV show and how cool it is to watch live sports &quot;together&quot; even for people who can&#x27;t leave the house that night and meet.
Weekly hour long Chats take place under special hashtags like #hcsm for Health Care Social Media or #meded for medical education. (doctors and science fans and academics found twitter and they debate articles, techniques, crowdsource diagnoses)
Police and emergency responders and good Samaritans have used it to (swear to god, it&#x27;s true) befriend people who sound troubled or suicidal and validate their pain and sadness and find them help.
It is to this day, the only platform I know that allows people from many different areas to find like-minded people and to bring together people across multiple subject areas.
Nothing else does it quite the same way. Especially with the ridiculous algorithms other platforms use."
2018-02-04T11:30:03.000Z,Ask HN: How to understand the large codebase of an open-source project?,"My personal copy-paste summary of a similar topic on HN some time ago (<a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=9784008"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=9784008</a>):<p># Getting familiar with a new codebase<p>### Use the right tools<p>- grep, ack, ag, global search (Visual Assist)<p>- doxygen, javadocs<p>- sourcegraph, pfff (facebook), open-grok, SourceInsight<p>- Proper IDE, REPL<p>- chronon (dvr for java)<p>- SWAG (Software Architecture Group)<p>- Static code analysis<p>### Use the repository<p>- Find most relevant (frequently, recently edited) files<p>- Find dependancy graphs<p>- Get basic information like which languages are used for what<p>- Use good source control so that you don&#x27;t have to worry about breaking things<p>- Look at commits, in general or for specific issues<p>- Browse the directory structure, packages, modules, namespaces etc.<p>- Use &quot;blame&quot; to see when things changed<p>### Ask questions<p>- Talk to the customer, find out the purpose of the application<p>- Pair up with another developer who is more familiar with the code<p>### Read the documentation<p>- Look at use cases, diagrams describing architecture, call graphs, user docs<p>- Understand the problem domain<p>- Add more documentation as your knowledge grows<p>- Comments and docs might be wrong!<p>### Browse the code<p>- Skim around to get a general idea and a feeling for where things are<p>- Look at public interfaces, header files first<p>- Find out which libraries are used<p>- Take some important public API or function in the UI and follow the code from there. Find implementations of functions, dive into related functions and data structures until you understand how the it&#x27;s done. Then work your way back out.<p>- Use tools to quickly find declarations, definitions, references and calls of variables&#x2F;functions&#x2F;etc., usage patterns<p>- Find the entry point of the program<p>- Figure out the state machine of the program<p>- Focus on your particular issue<p>- Use a large, vertical screen with small font size with a pane to show file&#x2F;class structure<p>### Take notes<p>- Use pencil and paper to write down summaries, relationships between classes, record definitions, core functions and methods<p>- Write a glossary: Function names, Datatypes, prefixes, filenames<p>- Document everything you understand and don&#x27;t understand<p>- Use drawings to create a mental model<p>### Look at the data<p>- Find out how the data is stored in the database<p>### Build the project<p>- First make sure you can build it and run it<p>### Use the debugger, profiler and logging<p>- Set breakpoints, poke around the code, change variables, inspect local variables, stack traces, ...<p>- Watch the initialization process<p>- Start from main() and see where it goes<p>- Find hotspots with the profiler<p>- Set logging level to max&#x2F;add logging and use the output to go through the code<p>### Edit the code<p>- Adopt the existing coding style<p>- Try to recreate and fix small bugs, make sure you understand the implications of the fix to the rest of the program first<p>- Tidy up the code according to the common standard after talking with the team<p>- Make the code clearer (best with tests)<p>- Add TODO comments<p>- Add comments describing what you think the code does<p>- Hack some feature into the code, then try to not break other stuff, build up a mental model over time, re-write the feature properly<p>### Use Tests<p>- Run the tests, make sure they are all passing<p>- Create new tests<p>- Browse the tests as an examples reference"
2018-01-26T16:22:56.000Z,Webpack 4 Beta released,"Two years ago I would have invested some effort to read this thoroughly and try to stay on top of the API changes. I&#x27;m sure it&#x27;s helpful to a lot of folks.<p>For sure I do care about my build toolchain. The nice thing about being a React developer today, is that thanks to create-react-app, more specifically react-scripts [1], I&#x27;m thankful I get to choose to not worry about it. Just like I didn&#x27;t have to worry about 2.0 -&gt; 3.0 last time.<p>Cheers to the CRA maintainers. Thanks for giving me some time back!<p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;create-react-app&#x2F;blob&#x2F;next&#x2F;packages&#x2F;react-scripts&#x2F;package.json#L62"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;create-react-app&#x2F;blob&#x2F;next&#x2F;packa...</a>"
2018-01-25T22:45:16.000Z,gRPC-Go Engineering Practices,"Thrift used to support more languages (this has changed). gRPC was more performant (take w&#x2F; grain of salt, this is word of mouth) for a while -- unclear if it&#x27;s changed or if the difference was ever that significant except at very high scale.<p>I think they&#x27;re pretty similar and you can&#x27;t lose either way. Facebook&#x27;s support of Thrift and Google&#x27;s of gRPC make both decent options.<p>One thing I will say about gRPC is that it plays nice with Google&#x27;s build system (Bazel) and some Google APIs now have first-class gRPC support. If you choose thrift in your stack you&#x27;ll have to call APIs using JSON or support gRPC anyway if you want to use them for those API calls...so gRPC might be an attractive choice. Furthermore gRPC&#x27;s go interop is also excellent if you happen to be a fan of golang."
2018-01-10T21:31:44.000Z,The State of Atom's Performance,"If you think those are great, check out Facebook’s watchman: <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;watchman&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;watchman&#x2F;</a><p>It’s a cross platform file monitoring daemon with a json (and bser) querying API, with support for opaque cursors so you can poll for changes since the last time you checked."
2018-01-10T15:40:49.000Z,Buffett Says Cryptocurrencies Are Certain to Come to a Bad Ending,"Cryptocurrency is currently in the silly phase of bubble. It looks exactly like the peak of dot.com mania. A crash is coming fairly soon. My top end estimate for time remaining would be a year, but I&#x27;d warn anyone contemplating a shorting strategy that bubbles have a way of going far higher than anyone can predict. Many people lost serious money trying to short dot.com and housing. Still we are definitely in the fragile tail end and the crash could come literally any second now.<p>I lived through dot.com and housing mania and I&#x27;m having serious deja moo right now. Deja moo is when you&#x27;ve seen this bull before. On a recent flight I saw a long format in-flight advertising video for DASH, an altcoin. I repeat: <i>airline advertisements!</i> If you still have doubts that we are in gibbering flapdoodle land, head over to YouTube:<p><a href=""https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=hXRhIXp4idM"" rel=""nofollow"">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=hXRhIXp4idM</a><p>We have <i>celebrity endorsements</i> and <i>music videos</i>. Run away.<p>I think the crash is going to look a lot like a bank run. There will be some piece of news that triggers it (exchange collapse, policy change, who knows) and then everyone will scramble to cash out. It will quickly become obvious that there is insufficient USD&#x2F;EUR&#x2F;etc. on hand to actually back the current market cap of the top ten coins. At that point exchanges will halt trading. Lawsuits will be filed. Exchanges will go into receivership. More lawsuits will be filed. Criminal charges may start getting filed. You get the picture.<p>Most of the crime and financial fraud that will happen in this bubble is happening now or will happen during the crash itself. Most financial fraud is driven by frantic attempts to cover one&#x27;s ass. My guess is that top people at all the exchanges know they are in serious trouble and there are many frantic meetings going on debating what can possibly be done. Since a bubble is basically a naturally occurring emergent Ponzi scheme, the only way &quot;out&quot; is to get more dumb money in so smart money can exit... hence the airline advertisements and Facebook ads to buy coins. I am currently seeing a <i>lot</i> of the latter.<p>Sadly a lot of naive people will lose tons of money. People have been dumping their life savings and mortgaging their houses to get into this. It could have follow-on effects on the economy. Some of the big Bitcoin exchanges are privately insured, so I wonder if it could drag down a few insurance companies. The rest of the economy is fragile so it&#x27;s not impossible that this could trigger a recession.<p>Cryptocurrency will not go away post-crash any more than the Internet went away post dot.com crash. We&#x27;re just approaching the irrational exuberance peak of the new technology adoption hype cycle.<p>After the crash it will go back to being a semi-underground niche thing for a while. Valuations will return to sanity. Those exchanges and other businesses that do survive will gain a lot of experience and a reputation for stability. Ironically sometimes the best technical work gets done post-crash, so I wonder if after the crash we will finally see useful applications built on this tech beyond its core currency use case.<p>If you really believe in the long term promise of this technology, after the crash would be the time to buy in.<p>P.S.<p>I really wish high schools would teach a class on finance, and if they did it should include a lesson on bubbles and a study of a few recent ones like dot.com and housing. People should be educated about what a bubble looks like and how to avoid getting ruined by one.<p>It wouldn&#x27;t stop everyone. The allure of herd behavior and gambling is strong. But it would save a few folks from losing their life&#x27;s savings."
2018-01-09T09:57:38.000Z,Toapi – Let any web site provide APIs,"That was fine when (X)HTML was about semantics, but once it got used for presentation too, the contract was broken. I scrape a few sites (due to the lack of RSS feeds and the desire of UK organisations to treat Facebook pages as their &#x27;News feed&#x27;) and it&#x27;s easy... until they do a redesign and the HTML changes.<p>For that reason alone, an API response format that stays constant no matter how the site looks appeals to me."
2018-01-02T18:18:08.000Z,Ask HN: Does anyone use an alternative to a password manager?,"I don&#x27;t think this is a good idea.<p>Please don&#x27;t get me wrong, it would be <i>great</i> to have a service to centralize all your passwords including rotation, but this already exists. It&#x27;s Google&#x2F;Facebook if you choose to use oauth to sign in into other sites.<p>If this kind of api&#x2F;js would exist and work, an attacker could exploit it to automatically change user&#x27;s password.<p>Note that changing password is often used also as a simple mechanism to log out all the sessions (simple = easy to understand for the end user).<p>In summary, I really hope all website would do all they can do to protect their change password endpoints from automatic tools.<p>For me, passwords need to exist and need to be remembered, because if this is not the case, then many other security assumptions fail. With this I don&#x27;t want to say that the current state of affairs is good, I definitely think that we need to invest in more mechanisms to help users remember their passwords, or reuse them in secure ways."
2017-12-10T19:55:47.000Z,Why Google stores billions of lines of code in a single repository (2016),"&gt;Interestingly, they only do that for java code.<p>Not sure what you mean. I work at Facebook, and can confirm we keep <i>all</i> code in a monorepo (or, rather, one of two big monorepos) rather than just Java code.<p>This lets us easily do React API changes: we can deprecate an API internally, and update all JS code that references the old APIs in a single commit."
2017-12-10T11:52:38.000Z,Why Google stores billions of lines of code in a single repository (2016),"For me, refactors were the largest &quot;aha&quot; moment.  On large scale projects you can move a lot faster if you don&#x27;t have to maintain backwards compatible API&#x27;s.  We use Facebooks version of a mono-repo (BUCK [1]) for iOS dev. It&#x27;s really easy to change an API, see all of the upstream breakages, write tests, fix upstream and submit a diff (pull request).<p>With a fragmented large code base you&#x27;re in a world of hurt because you&#x27;re dealing with versioning.  There is no guarantee of when every other dependency will migrate to the latest code path.<p>But again, if you&#x27;re in a 1-10 person team working on some trivial codebase, a monorepo might not be helpful.  If you have 500 engineers working on a single codebase, tradeoffs change.<p>[1] - <a href=""https:&#x2F;&#x2F;buckbuild.com"" rel=""nofollow"">https:&#x2F;&#x2F;buckbuild.com</a>"
2017-11-18T08:43:49.000Z,"Microsoft and GitHub team up to take Git virtual file system to macOS, Linux","&gt; They decided to go with mercurial because it was possible to monkey patch<p>The ability to extend, swap and replace deep into the stack was always a core component of Mercurial, hence having to enable extensions for things many users would consider core features e.g. terminal colors or graph log<p>Facebook didn&#x27;t hack around like monkeys, they built extensions. And when they could not do it as extensions, they upstreamed improvements to the core.<p>The alternative would have been to fork the codebase entirely.<p>Monkey patching the internals would have been significantly less maintainable: having used it as a library, I can tell you that none of the internal stuff is considered stable and pretty major components will change between point releases (I was using the diff-parsing and patch-application routines for something else, the API changed basically every minor release, forking would at least give you a heads-up conflict when upstream changed, monkey-patching would either blow up at runtime or not go through the patch anymore)<p>&gt; They&#x27;re now talking about implementing parts in rust, which, ironically, would have prevented them from doing what they originally chose mercurial for.<p>No."
2017-11-17T11:15:33.000Z,Ask HN: What tech were you convinced would take the world by storm but didn't?,"Peer-to-peer file sharing.<p>There was a time when Napster, Kazaa, eMule were king. The content industry fought against it, but developers came up with decentralized solutions like DHTs or supernodes.<p>I was convinced the next step would be friend-of-a-friend sharing. You only share files with your direct friends. But they can pass on these files automatically, so their friends can get the files, too. The friends of your friend don&#x27;t know that the file is originally coming from you, it is completely transparent. The goal is to not let anybody you don&#x27;t trust know what you are down- or uploading.<p>I would piggyback on the social graph of existing networks to get started. I actually had a prototype of the friend discovery code, based on XMPP (using custom stanzas). You login with your credentials, and it shows you all your friends that are using the same app. It worked with GTalk, Facebook Messenger, and Skype (via Skype API). One nice feature was that this worked without getting an API key from Facebook etc., or having a central server. I was so pissed when they all changed their APIs to make this impossible. It felt like a conspiracy to stop this use case.<p>I still think if somebody pulled this off, it might work, and it would be pretty distruptive (in the good and the bad sense of the word). It would be the last word in the debate between &quot;data wants to be free, change society to enable what technology promises&quot; and &quot;data has to be a commodity, restrict technology because in capitalism we can&#x27;t feed artists otherwise&quot;."
2017-11-15T16:43:52.000Z,"Ask HN: Best tech for a web site 2018? (PHP, Rails, Django, Node, Go, etc.)?","When talking about API &quot;quality&quot; I mean &quot;does what it says on the tin, reliably&quot;.<p>Testing means you catch regressions.<p>You seem to be talking about API design, which is honestly a minor concern compared to whether it works reliably.<p>Have you ever tried to use the Facebook API? It breaks randomly such as endpoints suddenly return 404&#x27;s, and there is no followup to bug reports.<p><i>That</i> is what I&#x27;m talking about when I say &quot;quality&quot;.<p>A &quot;perfectly designed&quot; API that randomly breaks because someone made a change and the lack of tests means its an end-user who discovers it is worse than terrible IMO."
2017-10-21T16:23:57.000Z,Swipe Left: Privacy Practices of Online Dating Apps,"Our app has a somewhat Tinder-like feel, though it&#x27;s paid (escorts). I don&#x27;t want to go overboard plugging, so see my profile for details. For fun, here&#x27;s how we score on the article&#x27;s items:<p>1. No scammers. We require providers to be vetted in some way (references). Clients are going to need to provide screening to see providers.<p>2-A. We use our custom login system. Verifying your social media account is just a read-once thing we do; we don&#x27;t ever have access to post. In fact, it is unlikely we&#x27;d even get approved for an API key on most platforms.<p>2-B. For launch we&#x27;re pretty exclusionary :(. Focusing on cishet couplings, female provider. We&#x27;re going to address that as soon as possible. Queer sex workers face additional challenges for sure.<p>3. Data safety. Due to our company&#x27;s legal status (extrajurisdictional), we have to deeply hide all data. Our servers don&#x27;t have persistent storage, RAM only. (At boot, it&#x27;s a manual restore from something like Tarsnap.) Only a few people have root or raw DB access. This does not include most devops people - they go through a change approval process. Real access is limited to core members heavily vested in the company with a need-to-know. More at [1], please ignore the clickbait title.<p>Another key point: connectivity is heavily restricted. App servers only have inbound socket from their hidden service, plus outbound to the DB layer hidden service. DB layer only has that inbound socket. DB requests are rate limited globally plus per user.<p>4. We&#x27;ll wipe your data shortly after deactivation <i>if</i> there are no abuse reports on your account. In which case we keep a photo ID and birthdate so you can&#x27;t sign up again and get a clean record. This is needed to protect user&#x27;s safety. But at least a photo is not so readily searchable. Maybe Facebook can do it, but if we <i>were</i> to somehow<p>1: <a href=""https:&#x2F;&#x2F;medium.com&#x2F;@PinkApp&#x2F;pink-app-trading-latency-for-anonymity-and-other-techniques-815ee21c6da4"" rel=""nofollow"">https:&#x2F;&#x2F;medium.com&#x2F;@PinkApp&#x2F;pink-app-trading-latency-for-ano...</a>"
2017-10-17T06:42:09.000Z,Ask HN: Do you have a side project you want to sell?,"<a href=""https:&#x2F;&#x2F;www.menutabapp.com&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.menutabapp.com&#x2F;</a> 
More than 25,000 restaurants on board, more than 500,000 food pictures uploaded, more than 14,000 Likes. One of the biggest menu apps on Facebook. Freemium, it generated 1.5k - 2k a month - then Facebook&#x27;s payment api changed and I didn&#x27;t have the time to fix it. It&#x27;s free to use now."
2017-10-02T12:12:09.000Z,Does Even Mark Zuckerberg Know What Facebook Is?,"For the record: What Facebook is and wants to be is actually an <i>enforceable personal relations layer</i> on top of the web stack.<p>Uber agrees to send in my name a “Pay me £7.23 for that shared ride” to my Facebook friends, but not to people for whom I can’t prove I know well enough. Tinder shows shared relations with strangers. That is a powerful web of features unlocked thanks to this. That’s why building an API was such a key early change of what Facebook was.<p>Typically, Twitter does something similar to Facebook on the surface (a news feed) but is not planning on serving as an authentication layer, so they do a lot less to address grievers, inauthentic accounts and lately, unwanted political influence.<p>The News Feed was the first key feature, built internally and it boosted the business model that Facebook has started leveraging: targeted advertising. But neither the News Feed, not advertising is the core of Facebook — no more than ads are at the core of Google.<p>Google wants to leverage artificial intelligence to organise the world’s information. That your friends matter to you and that you trust them more, and that you want computers to tell who they are is what’s at the core of Facebook; the recent pivot to communities is clearly in that line: you also trust and are willing to help people that you might not have met before because you belong to certain groups, communities.<p>Ads are a simple and effective way to finance both projects. Because management had to place ad-focused people high up, they took over a bit of the attention, but leaders at both companies know to focus on the end-goal.<p>I can easily imagine Facebook making more money from transaction fee, or distributing 3D-content; I can imagine Google making more money similarly (typically, CPA is kind of that). Both have tried, and the results were underwhelming, and will most likely try again."
2017-09-26T16:33:35.000Z,React 16,"Lovely. The file size reductions are quite surprising.<p>Removing the need to wrap sibling elements in a single parent element is a welcome change.<p>I&#x27;d be interested in hearing some use cases for using the Portal API.<p>Lastly, the new licensing announced last week was fantastic news. I commented on last weeks thread, but I want to extend another round of compliments to Facebook and the React community as a whole for prompting this change. <i>Props</i> to them."
2017-09-26T04:59:59.000Z,Apache Arrow and the “Things I Hate About Pandas”,"I&#x27;m not putting the project down, but your comment &quot;as long as you are OK with occasional API changes &#x2F; deprecations&quot; is exactly my point.  Facebook doesn&#x27;t want a system borking because an Arrow dev decided that some API feature was redundant or needed a new name.  Presumably they have a test environment to check for that sort of thing.  They certainly don&#x27;t want to refactor a large code base because of some tiny API change.<p>If someone is using Pandas, Spark, or whatever for an important product, it&#x27;s probably best for them to maintain whatever underlying data layer until the Arrow devs (I guess that means you) are willing to commit to a somewhat stable API.  A <i>stable</i> API and a relatively bug-free experience is what typically marks a 1.0 release.<p>There are plenty of smaller projects that should be perfectly happy to use the 0.7 release and grow&#x2F;evolve as Arrow does.  Especially when using Pandas+Arrow, since it&#x27;s probably not a production environment and I can spare a few hours to fix a confusing bug."
2017-09-13T11:28:52.000Z,Better Database Migrations in Postgres,"At Facebook we discovered this is especially important for large sharded environments. As you add more shards, the chances that a migration will fail on at least one of them (simply due to hardware failure) increases. A declarative approach, where you have a repo of CREATE statements that your tools can diff&#x2F;sync automatically, is much easier to manage. You can have automation just retry in a loop until the shard converges on the desired final state.<p>&gt; I&#x27;ve been looking for something similar for Postgres and MySQL&#x2F;MariaDB without any luck<p>For MySQL, I wrote an open source tool to do this: <a href=""http:&#x2F;&#x2F;github.com&#x2F;skeema&#x2F;skeema"" rel=""nofollow"">http:&#x2F;&#x2F;github.com&#x2F;skeema&#x2F;skeema</a> -- it gives you a repo-of-CREATE-statements approach to schema management, like you describe.<p>Skeema&#x27;s CLI is inspired by Git (in terms of paradigm for subcommands) and the MySQL client (in terms of option-handling), so if you know how to use those tools, it&#x27;s a cinch to learn. Basically you `skeema init` to initially populate your CREATE statements (one file per table) from a db instance. You can then change those files locally and run `skeema diff` to view auto-generated DDL, or `skeema push` to actually execute it. Or if you make &quot;out of band&quot; changes directly to the db -- such as renames, or just someone doing something manually for whatever reason -- then you can `skeema pull` to update the files accordingly.<p>Skeema&#x27;s configuration supports online schema change tools, service discovery, sharding, various safety options, etc. I also hope to add integration with GitHub API at some point. That can provide a really nice &quot;self service&quot; model for schema management at scale."
2017-09-02T05:21:34.000Z,My first fifteen compilers,"I&#x27;d strongly suggest diving into compilers if you&#x27;ve never studied the subject. Learning a bit on the subject unlocks a ton of incredibly useful skills. That knowledge helps you implement stuff like autocomplete, linters, syntax highlighting, etc.<p>The Super Tiny Compiler [0] is a very gentle introduction to the subject. It&#x27;s great because it helps you quickly develop an initial mental model.<p>To give an everyday usage example: I&#x27;ve used jscodeshift [1] many times to safely refactor large amounts of code. In one case, I quickly migrated a project&#x27;s test assertion library to an alternative which the team agreed was superior. This tool is also typically used by the react team in order to provide a smooth migration path whenever they make changes to the public API.<p>[0] <a href=""https:&#x2F;&#x2F;github.com&#x2F;thejameskyle&#x2F;the-super-tiny-compiler"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;thejameskyle&#x2F;the-super-tiny-compiler</a><p>[1] <a href=""https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;jscodeshift"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;jscodeshift</a>"
2017-08-14T06:26:53.000Z,Founder Friendly,"The &quot;ecosystem&quot; was on the path to destroying the company. The 3rd party Twitter clients had huge chunks of the Twitter userbase - back in 2010-2011, 20% of Twitter users used EchoFon, 11% used TweetDeck, etc.<p>If they had let the system continue, one of the clients could have gotten enough market share that they could have simply changed the backend to their own app, and none of the users would have batted an eye. Or Facebook could have bought up 2-3 of them quietly then forced Twitter to sell on the cheap.<p>It&#x27;s easy to romanticize the wild-west period of Twitter&#x27;s API being completely open for all use cases. However, it was, from a strategic perspective, extremely dangerous to the company&#x27;s future - there&#x27;s a reason why companies now know to build walled gardens."
2017-08-03T11:08:22.000Z,Flash Is Dead: What Technologies Might Be Next?,"<i>Is questions asked really a good metric? StackOverflow actively discourages asking duplicate questions, and all the easy newbie questions haven&#x27;t changed in a while, it seems inevitable that certain technologies appear to decline. </i><p>This is addressed in the article. There have been 1.4 million javascript questions asked and the pace is increasing, which indicates that it&#x27;s hard to exhaust a subject.<p>I think it makes sense facebook api usage is in decline given that the game devs have moved away from it.<p>I also don&#x27;t think days a vacancy is open is a good metric, because having been on the hiring side of trying to find Delphi developers I can assure you it is very tough. Plenty of people have relevant experience, but none of them want those jobs because they think it is career suicide."
2017-08-03T10:19:12.000Z,Flash Is Dead: What Technologies Might Be Next?,"Is questions asked really a good metric?  StackOverflow actively discourages asking duplicate questions, and all the easy newbie questions haven&#x27;t changed in a while, it seems inevitable that certain technologies appear to decline. I feel like traffic to questions, searches or other metrics would be a better indicator.<p>In particular, is facebook api usage really in decline?  I&#x27;d be very surprised. For language&#x2F;platform specific technologies, I would imagine if there were a decline the market for devs would get less tight.  I&#x27;d argue that days a vacancy is open is a much better indicator than even raw number of job postings."
2017-07-31T12:32:37.000Z,"It is easy to expose users' secret web habits, say researchers","This business of using full HTTP requests with full cookies to domains that are secondary to the site I&#x27;m visiting needs to end.  When I go to Foo.com, the browser does not need to send all my cookies and info to bar.com, even if we&#x27;re fetching resources to display on Foo.com.  Bar.com in this case is acting as a dumb file server, it doesn&#x27;t need cookies.<p>Yes, this would make single-sign-on harder, but it would make it explicit and be worth the trouble so that when the user is talking to A, they&#x27;re not being tracked by A&#x27;s friends B, C, and D.<p>Of course, the big problem: the best browser is owned by the advertiser who stands to lose under such an arrangement.  So at best you&#x27;d need Safari or IE to spearhead such a change.  You can ape it with browser extensions, but without a big browser maker pushing for this kind of shift some sites would just break under such a model (particularly single-sign-on services like Gmail and Facebook)."
2017-07-30T14:48:37.000Z,Benchmarks of PHP 7.2 Beta: PHP Is Still Getting Faster,"I&#x27;ve been using PHP for many years now and I was very close to switch to NodeJS or Go a couple years ago until I discovered Laravel. That changed my view of PHP completely and it improved my code quality and potential by a 10x factor at least.
I think that what Taylor Otwell has done in the last years with Laravel and with its ecosystem has been really underestimated. Not just for Laravel that is an excellent framework in my opinion, but especially with all the other products and libraries that he built along the way.
It covers all the needs I had in building my last few SaaS products and it made my life soooo much easier.<p>A few examples:<p>Forge and Envoyer: setup and manage your VPS in a breeze and deploy your code with zero downtime.<p>Spark: create a SaaS product in literally a matter of minutes without having to care about all the boilerplates<p>Echo: real time notification across multiple channels (mail, Pusher, Slack, etc.)<p>Passport: OAuth2 API server as easy as it can be<p>Scout: Redis&#x2F;Algolia search with just a couple of lines of code<p>Dusk: test your app easily both for unit and browser testing<p>Cashier: payments with Stripe and Braintree in a breeze (both for one time payment and recurring ones)<p>Socialite: OAuth for all kind of services (Facebook, Twitter, Google, ...)<p>And beside all this, there is the excellent Laracasts by Jeffrey Way that made me learn not just Laravel but PHP and JS in general in a really great way.<p>And I could go on talking with the great and simple queueing system, the perfect integration with VueJS that I love as well, ...<p>As you can see I&#x27;m a big big fan of Laravel in general and I hope that it will become popular in HN especially over time."
2017-07-16T21:38:44.000Z,Apache Foundation disallows use of the Facebook “BSD+Patent” license,"&gt;  Its internals are fundamentally different and not a derivative work.<p>That would be a strong defence to a <i>copyright</i> claim.  We&#x27;re talking about patents, where there is no concept of &quot;derivative works&quot;, and what matters isn&#x27;t implementations but broad concepts.<p>&gt; Software interfaces cannot be patented<p>Right, but what makes Preact concerning isn&#x27;t that it offers the same API, but that it is built using the same underlying concepts.<p>Preact renders independent, encapsulated, nested, functional-ish components, usually but not always written in JSX, into a virtual DOM.  Components are rerendered to the virtual DOM when their inputs change, and then diffing is used to efficiently sync the virtual DOM with the browser DOM.<p>If Facebook has some sort of patent covering the virtual DOM (although thankfully as far as I know, they don&#x27;t), it&#x27;s hard to see how it would not also cover Preact.  And this is true even if, as I assume is the case, Preact shares 0 lines of code with React.<p>Edit:  To be clear, I don&#x27;t believe the patent situation is concerning, I think Preact is a great project, and I may well be using it in production soon.  But <i>if</i> I was worried about Facebook&#x27;s patent portfolio, I would be worried about using Preact."
2017-06-30T03:08:24.000Z,TDD did not live up to expectations,"This is terrific.  You know, I&#x27;ve spent the last ten years perfecting coding strategies around unit test frameworks and mocks.  I&#x27;m really really good at that.  Really.  I won&#x27;t be humble; if somebody wants this, then I&#x27;m one of the best in the business.  Yet, I&#x27;m slowly coming to the realization that that&#x27;s a perfectly useless skill.  Perhaps, even a negative skill.<p>It depends on the project, but for most projects I&#x27;ve worked on, the most difficult parts are the integrations with external systems.  Figuring out what headers you need to pass in a call to Facebook, or what certificates you need to access some third-party API, or what data to send over USB to activate some device.  Unit tests &#x2F; mocks let you blithely ignore all those things.  You mock them out, hide behind an interface, write your &quot;application code&quot; that uses these interfaces to do whatever your application does, make unit tests with mocks that behave the way you&#x27;d like, and viola your app is done!  With almost 100% code coverage even!  And it&#x27;s even fairly well-designed with fairly low coupling.  Except, it doesn&#x27;t work at all, the hard work is still ahead of you, and your interfaces are all probably leaky abstractions that you&#x27;re going to have to change substantially to make it work for real.<p>Anyway that&#x27;s the hole I&#x27;ve dug for my current project.  I&#x27;m pretty quickly coming to the conclusion that I need to unlearn quite a bit, retrain my instincts.  I like your posts.  Not even much for the content, but mainly for the concept.  Rather than cargo culting onto &quot;unit-testing-in-framework-X-to-achieve-100%-code-coverage-because-that&#x27;s-how-you-make-sure-your-app-works,-right?&quot;, it&#x27;s more of an intentional approach.  Step 1: determine what we <i>really</i> need to make sure of, step 2: determine the best way to achieve that.<p>Ultimately, what I think is wrong with TDD as most people know it, in a word, is that it&#x27;s a shortcut.  It&#x27;s easy.  You populate your mocks with fake data and it&#x27;s infinitely repeatable so yay.  Populating an actual database with fake data and making sure it&#x27;s deleted&#x2F;refreshed&#x2F;whatever between tests is difficult.  But that doesn&#x27;t mean it&#x27;s not the right thing to do."
2017-06-17T01:56:12.000Z,Reddit Is Raising Funds at a Valuation of $1.7B,"With the immense and demographically diverse userbase, I imagine keeping the site running smoothly and user analytics is their chief focus. Their strategy probably is to introduce changes slowly so as not to alienate or confuse people (I&#x27;m looking at you Facebook).<p>Also, they expose their data via an API that developers have used to make all sorts of features, giving them the luxury of being able to basically test features without actually implementing them."
2017-08-03T10:19:12.000Z,Flash Is Dead: What Technologies Might Be Next?,"Is questions asked really a good metric?  StackOverflow actively discourages asking duplicate questions, and all the easy newbie questions haven&#x27;t changed in a while, it seems inevitable that certain technologies appear to decline. I feel like traffic to questions, searches or other metrics would be a better indicator.<p>In particular, is facebook api usage really in decline?  I&#x27;d be very surprised. For language&#x2F;platform specific technologies, I would imagine if there were a decline the market for devs would get less tight.  I&#x27;d argue that days a vacancy is open is a much better indicator than even raw number of job postings."
2017-07-31T12:32:37.000Z,"It is easy to expose users' secret web habits, say researchers","This business of using full HTTP requests with full cookies to domains that are secondary to the site I&#x27;m visiting needs to end.  When I go to Foo.com, the browser does not need to send all my cookies and info to bar.com, even if we&#x27;re fetching resources to display on Foo.com.  Bar.com in this case is acting as a dumb file server, it doesn&#x27;t need cookies.<p>Yes, this would make single-sign-on harder, but it would make it explicit and be worth the trouble so that when the user is talking to A, they&#x27;re not being tracked by A&#x27;s friends B, C, and D.<p>Of course, the big problem: the best browser is owned by the advertiser who stands to lose under such an arrangement.  So at best you&#x27;d need Safari or IE to spearhead such a change.  You can ape it with browser extensions, but without a big browser maker pushing for this kind of shift some sites would just break under such a model (particularly single-sign-on services like Gmail and Facebook)."
2017-07-30T14:48:37.000Z,Benchmarks of PHP 7.2 Beta: PHP Is Still Getting Faster,"I&#x27;ve been using PHP for many years now and I was very close to switch to NodeJS or Go a couple years ago until I discovered Laravel. That changed my view of PHP completely and it improved my code quality and potential by a 10x factor at least.
I think that what Taylor Otwell has done in the last years with Laravel and with its ecosystem has been really underestimated. Not just for Laravel that is an excellent framework in my opinion, but especially with all the other products and libraries that he built along the way.
It covers all the needs I had in building my last few SaaS products and it made my life soooo much easier.<p>A few examples:<p>Forge and Envoyer: setup and manage your VPS in a breeze and deploy your code with zero downtime.<p>Spark: create a SaaS product in literally a matter of minutes without having to care about all the boilerplates<p>Echo: real time notification across multiple channels (mail, Pusher, Slack, etc.)<p>Passport: OAuth2 API server as easy as it can be<p>Scout: Redis&#x2F;Algolia search with just a couple of lines of code<p>Dusk: test your app easily both for unit and browser testing<p>Cashier: payments with Stripe and Braintree in a breeze (both for one time payment and recurring ones)<p>Socialite: OAuth for all kind of services (Facebook, Twitter, Google, ...)<p>And beside all this, there is the excellent Laracasts by Jeffrey Way that made me learn not just Laravel but PHP and JS in general in a really great way.<p>And I could go on talking with the great and simple queueing system, the perfect integration with VueJS that I love as well, ...<p>As you can see I&#x27;m a big big fan of Laravel in general and I hope that it will become popular in HN especially over time."
2017-07-16T21:38:44.000Z,Apache Foundation disallows use of the Facebook “BSD+Patent” license,"&gt;  Its internals are fundamentally different and not a derivative work.<p>That would be a strong defence to a <i>copyright</i> claim.  We&#x27;re talking about patents, where there is no concept of &quot;derivative works&quot;, and what matters isn&#x27;t implementations but broad concepts.<p>&gt; Software interfaces cannot be patented<p>Right, but what makes Preact concerning isn&#x27;t that it offers the same API, but that it is built using the same underlying concepts.<p>Preact renders independent, encapsulated, nested, functional-ish components, usually but not always written in JSX, into a virtual DOM.  Components are rerendered to the virtual DOM when their inputs change, and then diffing is used to efficiently sync the virtual DOM with the browser DOM.<p>If Facebook has some sort of patent covering the virtual DOM (although thankfully as far as I know, they don&#x27;t), it&#x27;s hard to see how it would not also cover Preact.  And this is true even if, as I assume is the case, Preact shares 0 lines of code with React.<p>Edit:  To be clear, I don&#x27;t believe the patent situation is concerning, I think Preact is a great project, and I may well be using it in production soon.  But <i>if</i> I was worried about Facebook&#x27;s patent portfolio, I would be worried about using Preact."
2017-06-30T03:08:24.000Z,TDD did not live up to expectations,"This is terrific.  You know, I&#x27;ve spent the last ten years perfecting coding strategies around unit test frameworks and mocks.  I&#x27;m really really good at that.  Really.  I won&#x27;t be humble; if somebody wants this, then I&#x27;m one of the best in the business.  Yet, I&#x27;m slowly coming to the realization that that&#x27;s a perfectly useless skill.  Perhaps, even a negative skill.<p>It depends on the project, but for most projects I&#x27;ve worked on, the most difficult parts are the integrations with external systems.  Figuring out what headers you need to pass in a call to Facebook, or what certificates you need to access some third-party API, or what data to send over USB to activate some device.  Unit tests &#x2F; mocks let you blithely ignore all those things.  You mock them out, hide behind an interface, write your &quot;application code&quot; that uses these interfaces to do whatever your application does, make unit tests with mocks that behave the way you&#x27;d like, and viola your app is done!  With almost 100% code coverage even!  And it&#x27;s even fairly well-designed with fairly low coupling.  Except, it doesn&#x27;t work at all, the hard work is still ahead of you, and your interfaces are all probably leaky abstractions that you&#x27;re going to have to change substantially to make it work for real.<p>Anyway that&#x27;s the hole I&#x27;ve dug for my current project.  I&#x27;m pretty quickly coming to the conclusion that I need to unlearn quite a bit, retrain my instincts.  I like your posts.  Not even much for the content, but mainly for the concept.  Rather than cargo culting onto &quot;unit-testing-in-framework-X-to-achieve-100%-code-coverage-because-that&#x27;s-how-you-make-sure-your-app-works,-right?&quot;, it&#x27;s more of an intentional approach.  Step 1: determine what we <i>really</i> need to make sure of, step 2: determine the best way to achieve that.<p>Ultimately, what I think is wrong with TDD as most people know it, in a word, is that it&#x27;s a shortcut.  It&#x27;s easy.  You populate your mocks with fake data and it&#x27;s infinitely repeatable so yay.  Populating an actual database with fake data and making sure it&#x27;s deleted&#x2F;refreshed&#x2F;whatever between tests is difficult.  But that doesn&#x27;t mean it&#x27;s not the right thing to do."
2017-06-17T01:56:12.000Z,Reddit Is Raising Funds at a Valuation of $1.7B,"With the immense and demographically diverse userbase, I imagine keeping the site running smoothly and user analytics is their chief focus. Their strategy probably is to introduce changes slowly so as not to alienate or confuse people (I&#x27;m looking at you Facebook).<p>Also, they expose their data via an API that developers have used to make all sorts of features, giving them the luxury of being able to basically test features without actually implementing them."
2017-06-10T21:40:21.000Z,"Are Google, Amazon and others getting too big?","It isn&#x27;t just a company trying to abuse market advantage as tool to exploit consumers and crowd out the sector - it is if they are successful at it.<p>I don&#x27;t feel locked in to Google Wallet. That <i>is</i> changing, since there are only three &quot;blessed&quot; mobile payment systems now in Samsung, Android, and Apple Pay (rather than what we should have, a standard mobile payment API handled by ISO). But before, Paypal and Amazon Checkout both provided payment solutions that were rivals, with significant market shares, to Google Wallet.<p>The ad blocking in Chrome is obviously anti-competitive, but it waits to be seen if Google <i>has</i> actual monopolistic power in the browser space where this change doesn&#x27;t drive consumers to competitors. If the advertisers Google is trying to bully fight back by having their affiliates block Chrome, either those businesses die or Chrome loses market share. We will have to see what happens, but I generally think if consumers <i>want</i> to use a web product, they would get another browser to do so and <i>stop using Chrome</i> in the same way we got 40% of people to drop IE for Firefox.<p>And finally, Google also doesn&#x27;t have any agreements with Amazon. That is why you have to manually download their app store APK, and why it doesn&#x27;t have first class installation support as a generic app like the Play Store. But Amazon is also making their own Android devices <i>without</i> Gapps, and Samsung is in a position to at least <i>try</i> it themselves if they wanted to, since they have their own app suite as well. And all Google does is require that <i>all</i> their apps be installed if a manufacturer wants to include any of them - which while heavy handed isn&#x27;t anticompetitive to do.<p>If anything, a real domain of monopoly exploit by Google is how they will punish companies they disagree with in SEO, when they <i>do</i> have an overwhelming majority of the search market, and it has been proven in the last 2 decades of business that consumers treat Google like gospel - if its not there, it might as well not exist. People don&#x27;t try using alternative search engines if they don&#x27;t find what they are looking for on Google.<p>&gt; Android is an example of an inferior product succeeding through monopoly control.<p>Android is first mover advantage. It has the same vicious feedback loop that gives Google, Facebook, Amazon, etc their monopolies - they act as middle men to third party products and services, and by capturing the audience capture the mindshare of retailers. It doesn&#x27;t matter if its user and app developers, users and websites, users and friends of them, or users and actual goods retailers - each one has dominance in their market because they have the mindshare.<p>I don&#x27;t see how Google is being particularly abusive with how they run Android. Nobody <i>has to</i> use their Play Store, and nobody <i>has to</i> develop against the Play Services thus bonding their app to the Google Suite. It is just consumers <i>want</i> the apps on <i>that</i> store, so developers use the services and ignore the competition and create a self fulfilling prophecy of monopoly.<p>And I&#x27;m not arguing Android doesn&#x27;t have a monopoly - just Google isn&#x27;t really exploiting it by only requiring all their apps come if someone wants the Play Store. The OS itself is liberally licensed, and anyone could either reuse Dalvik or write their own implementation to run APKs. I&#x27;m not sure how you would legislate to avoid the natural monopolies caused by things like the Play Store, Google Search, Facebook, or Amazon."
2017-06-08T15:07:17.000Z,"Powering Twitch and Medium, search startup Algolia raises $53M","We&#x27;re using Algolia (the free version) for all Facebook open source project websites (React, GraphQL, Yarn, ...) and it&#x27;s been nothing short of awesome.<p>You just include a js file and add an input where you want the search and it just works(tm).<p>It has required 0 maintenance, it didn&#x27;t go down, the api didn&#x27;t change, nothing to tweak on the backend... Users have gotten a quality and super fast search since then.<p>I highly recommend it!"
2017-06-05T10:52:12.000Z,Ask HN: Why Use Social Media Logins?,"As a &quot;user&quot;, I love logging in with social media. How awesome is it that I can just click a button and be logged in instantly? No worrying about setting up a password, at least, for most websites. I used to not trust it, but after becoming a developer and learning: it is just grabbing an email or a name is not too bad. Though sometimes, it may grab more than that, such as your friends list, etc. Somehow, that became okay and no one cares.<p>As a &quot;developer&quot;, things are quite different. There are a few libraries of code on Github and you can find examples across the Internet. For the most part, these examples do work after you have set up some API backend on the social media platforms themselves.<p>Code would almost seem straightforward. However, it is not always the case, especially, when a social media platform is ever-changing.  For example, last week, someone released a new product on Hacker News and went about his way, only to realize, that people were attempting to login to Facebook, which recently upgraded from SDK 4 to SDK 5. Massive changes occurred. How embarrassing to go live, only for one of your social media buttons not to work? It&#x27;s not his fault, but it&#x27;s Facebook who updated their code so older versions no longer work. Most developers are trying to focus on their own code and make sure it works. Now they have to worry about potential users being unable to access the front door?<p>When I went to update Facebook SDK 4 to SDK 5 on one of my own platforms, using Facebook&#x27;s very example that they provided. I couldn&#x27;t get it to work. I ended up removing Facebook from my registration and login screen. The three that remained were Google, Twitter, and LinkedIn.<p>After some careful testing with these three, they work for the most part, except occasionally, if someone logs into Google, and then tries to login again real fast, such as your code not remembering them and keeping them logged in, Google&#x27;s token expires and it won&#x27;t auto-generate a new one, and it creates a problem, an error that you can&#x27;t even catch, so your users are exposed to seeing that error.<p>Twitter, too, seems to have some issues. Using the examples you can easily find on the Internet, and I&#x27;m no genius when it comes to this stuff, but I managed to copy some code, put it together, and make it work with my database, this would also come with problems: It keeps looping and acquiring a new oauth token without ever going back to my website with the information.  After spending nearly an hour trying to figure out what the problem was and scouring the Internet with very few answers, I gave up. So Twitter has now been removed.<p>LinkedIn is my last resort, but to offer only one option: is it better at all?<p>The purpose of social media logins was to making logging in easier, but none of these social media platforms have beginner or even novice developers in mind. If any of the code was to change while your web application is live, than you are screwed, trying to come up with a patch for it. Lest, you might not even find out until someone actually reports it that your Facebook, Twitter, LinkedIn, or Google login isn&#x27;t working. How would you know otherwise, since you probably might only use one or none?<p>I sought to find out: Do we really need to use social media logins? In this day and age, it is supposedly expected. For the most part, researching claims, there is a 60% usage of social media login buttons. But are they necessary? I came across another article from a developer at MailChimp which makes a great point about social logins: while people use them, if people like your application or find it useful, they are going to register and login with a username or email address, regardless of whether you have social media or not.<p>Here is the article: <a href=""https:&#x2F;&#x2F;blog.mailchimp.com&#x2F;social-login-buttons-arent-worth-it&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;blog.mailchimp.com&#x2F;social-login-buttons-arent-worth-...</a><p>Navigating to MailChimp&#x27;s registration and login page: there is no social media presence.<p>So I know there are some attempts at making life easier for developers out there, such as Hybridauth Social Login PHP Library ( <a href=""https:&#x2F;&#x2F;hybridauth.github.io&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;hybridauth.github.io&#x2F;</a> ), which may do a good job, but I&#x27;ve not used it yet.  There are also other non-free solutions out there in which you pay for a script or a web company to handle it all for you. This too, might be good, but why? Why isn&#x27;t it easier for developers to set up social media buttons?<p>Maybe it is security concerns or whatever, but you would think that as large as these social media platforms are, they&#x27;d be better at giving you the email and username or whatever you need.. and making it easier. After all, it is technically free branding for them that you put on your website.<p>Anyone else struggle with social media login or just give up completely or maybe you found a really easy solution that grants you peace of mind?"
2017-05-28T17:31:18.000Z,Switching From React To Vue.js,"I&#x27;m not a fan of React Router but this sounds like you haven&#x27;t actually used any of those versions or even looked at the breaking changes.<p>Here&#x27;s what actually happened:<p>v1: <a href=""https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;v3&#x2F;upgrade-guides&#x2F;v1.0.0.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;v3&#x2F;upgrad...</a><p>v2: <a href=""https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;v3&#x2F;upgrade-guides&#x2F;v2.0.0.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;v3&#x2F;upgrad...</a><p>v3 mostly just removed APIs that were deprecated in v2. v3 continues being maintained even beyond the v4.0.0 release.<p>v4: <a href=""https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;master&#x2F;packages&#x2F;react-router&#x2F;docs&#x2F;guides&#x2F;migrating.md"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;ReactTraining&#x2F;react-router&#x2F;blob&#x2F;master&#x2F;pa...</a><p>In my opinion it would have been clearer if react-router v4 had been released under a different name but I guess the authors didn&#x27;t want to pay the cost of that.<p>The API changes between 1 and 2 as well as 2 and 3 are mostly cosmetic. It&#x27;s worth pointing out the authors released codemods which will likely be able to convert your app from one version of the library to the next as long as you don&#x27;t do something exceptionally clever.<p>The changes between 0.x and v1 were entirely expected. It seems the authors followed the common semantics that 0.x releases are considered experimental, v1 was based on the lessons learned. v2 and v3 then improved upon that design with relatively minor changes.<p>On the other hand v4 is an entirely new library using an entirely different paradigm: routes use component semantics and are part of the component structure, rather than just some JS router that uses JSX syntax for aesthetics.<p>But as I said: v3 is still being actively maintained, the authors have just decided that the v4 API fits React better. And for all major releases from v1 to v3 you should be able to upgrade practically for free by using codemods.<p>I think the importance of codemods can not be understated though many people are still ignorant of them: Facebook releases codemods for every major version of React and uses them internally to upgrade their tens of thousands of components automatically. Third-party libraries like React Router have also started providing them.<p>Codemods written well should allow app developers to migrate breaking API changes in dependencies with practically no development effort.<p>Additionally, like React, React Router seems to have adopted the approach of deprecating APIs in the final release of a major version that is no longer going to be supported so you can upgrade your manually code before moving to the new major version with no fear of things breaking. So when upgrading from v2 to v3 you should be able to upgrade safely by simply upgrading to the latest minor version and fixing any deprecation warnings.<p>Both codemods as well as deprecations of course assume you&#x27;re doing the sensible thing and a) upgrading one major version at a time and b) actually maintaining your project rather than just spending half an hour on it once a year to implement a new feature with no test coverage.<p>Personally I often end up doing the not so sensible thing where I end up having to migrate all third party deps to the latest version once a year or two, but libraries like React and React Router are the least of my worries because they are extremely safe and easy to upgrade -- even to the point where there&#x27;s no need to upgrade beyond React Router v3 unless you also prefer the v4 API."
2017-05-27T18:41:50.000Z,Aadhaar isn’t progress – it’s dystopian and dangerous,"You do understand that it doesn&#x27;t only rely on fingerprints, right? There is retinal verification in addition to phone OTP.  I had another phone number when I got Aadhar, I changed the city, lost my phone number and now there is no way, I can without physically getting somewhere and submitting the application to update my phone number.<p>API for commercial services isn&#x27;t a bad thing per se. A lot of time, it would save time in documentation. Btw, if you have such a privacy concern, Are you not using Facebook, Whatsapp and all other services for free that sell you data, you behaviour to commercial companies.<p>It&#x27;s really easy to believe the FUD going on and coming up some original ideas on how to tackle the problem. I hope you are in the second group that would help make our Country a better place to live in."
2017-05-27T03:21:05.000Z,Facebook's tentacles reach further than people think,"I created a Facebook account because I was doing something with a Facebook API, long enough ago that I have forgotten the details of the project. However, lurking in my spam folder there is always &#x27;you have more friends than you might think&#x27; as a subject line in there somewhere, from Facebook, trying to lure me back in.<p>The thing I find funny about this is that they only send out emails with that one subject line. I don&#x27;t open the emails so the suggested &#x27;friends&#x27; might be different with each email, however I am curious why they don&#x27;t change the subject line, to &#x27;A&#x2F;B test&#x27; me into being part of the known universe of Facebook. Clearly &#x27;you have more friends than you think...&#x27; has not worked.<p>If they had bothered with the &#x27;shadow account&#x27; then they would have targetted me a bit better, if they found a Facebook group that was likely to appeal to me then they could theoretically lure me in with &#x27;Cats with Facebook accounts in your area&#x27; or &#x27;Today&#x27;s pictures of squirrels enjoying lunch...&#x27; but no, let&#x27;s just try the email that didn&#x27;t work last time or the time before.<p>Sure they have surreal algorithms that are totally creepy in a stalker way that is totally Peeping Tom and should gross people out, but, as per the dumb emails there is nothing that smart about what they are doing."
2017-05-22T13:31:26.000Z,"GitHub announcements: Marketplace, Apps and GraphQL API","GraphQL is limiting as well, just in a different way. GraphQL uses POST by default, which means you don&#x27;t get browser caching.<p>It&#x27;s a tradeoff that makes sense for Facebook. It allows them to make changes to their API without needing to version it. And they can take the hit of more requests hitting their server.  For most apps though, I think the tradeoff is probably not a great one to choose."
2017-05-20T20:39:35.000Z,Ask HN: In the next 5 years which markets will grow the most and why?,"I think the nature of these revolutions is that they happen slowly but invisibly until one day all of a sudden everyone is aware of them. I wrote &quot;AI&quot;, but it&#x27;s not <i>just</i> AI, it&#x27;s a lot of things that are coming of age.<p>Some &quot;Minimum wage jobs&quot; are disappearing -- a local fast food joint now has about 1&#x2F;3 of the employees it had a couple of years ago: they have better automated machines in the kitchen, and a smart ordering kiosk that most people use (though there&#x27;s still a person at the register, for people who are uncomfortable with the kiosk or requests that are not available through it).<p>Translators, as a job, have almost disappeared (relegated to those needing &quot;an official translation&quot;). That happened in the last 10 years, starting with an awfully funny and weird altavista or google translate that would give you results that could only be meaningful if you had some familiarity with both languages - down to modern translation which, while not perfect, is readable and understandable.<p>Professional photohgraphers for newspapers used to command a $3,000&#x2F;day salary just 10 years ago. Now it&#x27;s closer to $300&#x2F;day, if they can get it at all - because there&#x27;s already someone on the scene, with a smart phone camera -- the pictures are horrible, but people are willing to give them for credit, so a photographer is unneeded.<p>The army of people working for Google&#x2F;Facebook&#x2F;Amazon to moderate user content, is being decimated.<p>It&#x27;s started to happen to lawyers; It&#x27;s not prevalent yet, but it is eating the more &quot;mechanical&quot; parts of a lawyer&#x27;s job - finding relevant historical cases and summarizing them. Computers are now slightly better than the interns that used to be assigned to these jobs. In 5 years, they might be better than the experienced partners at these kinds of jobs.<p>It&#x27;s closer than most people think in many, many jobs. Truck drivers will likely not be completely replaced in 5 years, but their jobs might change to &quot;24 hour shifts&quot; in which they are allowed to sleep until the automated truck wakes them up to deal with some condition.<p>You know, writing down what&#x27;s in a picture, was almost sci-fi 10 years ago, and right now you have Google, Microsoft and ClariFi offering this as a cheap API."
2017-05-16T10:12:09.000Z,Simple Web Developer Checklist,"I&#x27;m going to go the other way on the SQL advice, even though the author has clarified below that he was talking about prepared statements.<p>It doesn&#x27;t cost me much, if any, developer time to work with stored procedures. I realize most full stack devs don&#x27;t have as much in-depth experience with SQL. That was literally all I did for the first several years of my career. Before it ever occurred to me to learn other programming languages and. It was pure SQL all day every day.<p>If you have the resources to implement even half of this checklist, you probably have the resources to go whole hog on stored procs.<p>I sometimes do this, and sometimes don&#x27;t. Partly, it&#x27;s because I need to stay current with ORMs for the sake of potential job opportunities. And partially because it can be more convenient to keep my head in one language for fleshing out an idea. But for serious projects, I&#x27;ll go the stored proc route.<p>In that kind of scenario, I think of the database as a type of microservice that&#x27;s completely separate from the application layer. You write in the most performant language for that service, even if it&#x27;s different for the main language the app is written in. And you reap the benefits of the database optimizing the procs as well as the database handling transactions instead of trying to manage that in your application.<p>How much of a burden this is boils down to whether you personally have the chops (or someone on the team does), and if you get your shit together when it comes to deployment. Stored Proc code should be saved in text files under version control, and your deploy process should make updates to the procs automatically.<p>If you do things this way, it&#x27;s not any more painful than versioning your database with migrations, which I do on every project, no matter how small. Using stored procs doesn&#x27;t have to mean you&#x27;re working with a mess of unmanageable database code. You can use SQL Alchemy to create models and relationships, Alembic (just speaking to the Python world here), and use a thin wrapper around executing the stored proc, and it&#x27;s really not that much different from writing prepared statements in Alchemy.<p>In principle, it&#x27;s really not different from writing a web app that provides an API that your front end hits (a Python app that resents REST for Angular to call or something else equally common). In this case, I&#x27;m just pushing the API down one layer in the stack.<p>People can argue that the logic that applies to the data should be kept with the logic that defines the data--i.e., that if your model defines the shape of the date, your code that defines its behavior should reside there as well: in the model definition. So the ORM is the correct place for that. Methods on the Class object. I&#x27;m sympathetic to that argument, but I also disagree with it, sort of.<p>I think the rules that govern the behavior of data should exist where the data exists rather than any abstraction layer. Otherwise you have to rewrite them for every new thing that wants to access the data.<p>And every useful application that people use involving data is going to serve that data to more than the first application you designed to work with it. Keeping these rules in sync across even a very minimal web app that consists only of the app itself, an API, and an analytics platform is already some overhead.<p><i>And</i>, every data-driven application already has two means of interface regardless of whether you intend that or not: direct database manipulation. That is going to happen sometimes, whether you want it or not or how bad a practice it is. If there are rules about how things should behave (there are always rules about how things should behave) you have to enforce them at the database level.<p>If you&#x27;re doing that correctly already, there&#x27;s really not that much overhead in using stored procedures. Going that route means that every connection to a database for a certain dataset means that there is a single source of truth for that dataset. Execute procedure x to get data y. That&#x27;s all any developer on any service needs to know.<p>It also makes the idea of minimum privilege easier to manage. You don&#x27;t have to grant select on a table for the API user, for example. You can grant execute to the set of procs that user needs, and only those procs are accessible. Combine that with some well-thought views, and you can greatly limit your attack surface. If someone breaches part of your system and manages to obtain so source code, they don&#x27;t get any real information about the structure of your database. They only get conn.execute(&#x27;check_valid_user&#x27;) or whatever.<p>The obvious problem here is versioning APIs. Which you must always do. So you have to version your stored procs when there are breaking changes. But the overhead in adding a _v1 or _v1.1 to the end of an .sql file for a proc really isn&#x27;t that big of a deal compared to all the other stuff you have to do when maintaining an API.<p>Again, I&#x27;m sympathetic to objections to this model. It is not perfect, and I&#x27;ve never once tried to inflict it on coworkers who want to do things differently. I&#x27;ll do this in my own projects, and when I&#x27;ve gone into a company that&#x27;s already working with that mindset. I don&#x27;t hold up the train based on philosophical differences.<p>There&#x27;s a lot of criticism I agree with that SOA is not a good place to start. It carries a lot of overhead, and you shouldn&#x27;t go there until you need to. But to me, the reality is that any web app that comprises a data store, a controller layer, and a front end is already by definition SOA--not the monolith that you want to think of it as. And therefore you should treat it as such and give the various components the attention they deserve.<p>If you&#x27;re working on a project you have reasonable expectation will be used enough to require some scaling, this is a totally acceptable way to do things. Let the database do what it&#x27;s best at, let the controller layer do what it&#x27;s best at, and then use the front end that&#x27;s best for your use case.<p>Because this response isn&#x27;t long enough already, I&#x27;ll just add this. I don&#x27;t think the MVC model is really appropriate for web apps. Even the modified MVVC model is still weird to me. It seems like a model we shoehorned onto what a web app really is. To me, the web app model is data, logic, presentation. The data layer comprises both the data and the rules about the data. The logic layer dictates what happens when an event is triggered by the presentation layer. And it should be relatively thin, particularly when working with one of the slower languages like Python or Ruby. The presentation layer simply defines the user interface and sends messages to the logic layer.<p>These things really are decoupled by nature in ways they aren&#x27;t necessarily in native or desktop apps or mobile apps. I think that web developers need to understand that this model really doesn&#x27;t fit very well. And behave accordingly.<p>There are obviously exceptions to everything I&#x27;m saying here. But the exceptions come at very large scales. Most apps that start out as MVC web apps on whatever stack are not going to become Facebook or Reddit and are not going to have the specific problems that come with that level of scale.<p>Even so, I would encourage people to rethink what web apps are, and what the MVC&#x2F;MVVC model really means. I really don&#x27;t think it&#x27;s the right model, and the decisions we make about architecture are generally not good ones.<p>Finally, since this is so long now, I want to point out that I didn&#x27;t generate these ideas all on my own. I&#x27;ve been heavily influenced by Lex de Haan and Toon Kopplaars in their book, <i>Applied Mathematics for Database Professionals</i>."
2017-05-10T21:58:24.000Z,"Spotify’s Beta Used ‘Pirate’ MP3 Files, Some from Pirate Bay","In comparison to the other garbage, yeah it might be the winner. But it&#x27;s still garbage.<p>I was one of the first users of the beta program. At the time, Ludvig&#x27;s philosophy of simplicity + hidden functionality via interactive views shone through the UI and it was very pleasant to use. The 5 star rating system was the icing on the cake. A step down in functionality from Amarok&#x27;s playlist creation system, and lacking the fine search and organization capabilities of foobar2000, but it did the job.<p>However, the UX of Spotify has hideously morphed over time. Now the UI mostly uses Chromium Embedded Framework which brings huge overhead and causes lots of rendering latency. The font size and padding has grown, then shrunk, then grown again, each time showing less tracks on a page at once. Views that were once interactive with left and right clicks became static. Star ratings turned into Like&#x2F;Unlike.<p>Their user behavior tracking has naturally been cranked up to 11, though it is better than a lot of similar products, I still have no desire for a music service to track anything other than the music I search and play. Even tracking the song titles in my personal library is an unacceptable breach of privacy.<p>The slow and steady social creep and tracking through Facebook is also unacceptable.<p>It doesn&#x27;t utilize P2P anymore, which I considered a plus because I love supporting and legitimizing P2P tech.<p>It has become less of an engineer-led company and more of a traditional company with shareholder interests<p>I could really go on. The downsides of Spotify <i>as a music player</i> are much greater than they were at product launch.<p>The most infuriating thing about it is that Spotify never fielded these changes with users before committing to them, and each and every time when a simple addition to the settings panel could make the changes optional, they were instead forced upon us.<p>I don&#x27;t like a music player that frequently changes its UI without my approval. I like a music player that puts <i>me</i> in charge of the UI.<p>I no longer pay for Spotify and have returned to getting my music through other means.<p>On my Linux and Windows machines, I mostly use foobar2000 and VLC, and Amarok when I need powerful playlisting tools. If Radionomy ever gets their shit straight with Winamp (They bought it from AOL in &#x27;14 and have to clean out all proprietary code) then I will definitely consider going back.<p>Give me a streaming service that doesn&#x27;t spy on me unnecessarily and has an API so that I can implement a plugin to my favorite existing media player or otherwise an absolutely beautiful and immutable interface, and of course a large library and doesn&#x27;t shaft its artists, and I will pay for it. Anything less than that, in 2017, sucks."
2017-05-10T14:00:11.000Z,Why is React is taking over front-end development?,"&gt; React is just JavaScript, there is a very small API to learn, just a few functions and how to use them. After that, your JavaScript skills are what make you a better React developer. There are no barriers to entry. A JavaScript developer can become a productive React developer in a few hours.<p>This is a valid point. Maybe not a few hours but it clicks with developers after a few days.
But then there is also the very good documentation and an already big community.
Also Facebook backing it is encouraging for mid-sized companies to use, which don&#x27;t expect breaking changes any time soon."
2017-05-09T15:25:18.000Z,The tragedy of 100% code coverage (2016),"You really shouldn&#x27;t, or if you do it should be an extreme minority of tests and automated tests should do the heavy lifting.<p>Automated tests can do so much more than manual tests that shops still living by manual tests either have a damn good reason or are just as wrong as people who argued against Revision Control Systems (or people who argued for gotos instead of functions).<p>Automated tests will be executed identically each time, so no missing test cases because someone slacked off or made a typo. Automated test can serve as examples for how to use the code. Automated tests can aid in porting to new platforms, once it builds you can find all the bugs your care about swiftly. Automated test can be integrated with documentation, tools like doxyegn and mdbook make this easier.<p>Automated tests enable Continuous Integration. Are you familiar with Travis CI or Jenkins? If not, imagine a computer that a team commits their code to, instead of directly to the mainline Revision Control (Git master, svn head, etc...). That computer builds the software, runs all the tests, perhaps on every supported platform or in an environment very close to production, then only merges commits that appear to fully work. This doesn&#x27;t completely eliminate bugs and broken builds, but the change is so large that teams without it are at a clear competitive disadvantage.<p>When integrated into process tests can be used to protect code from changes. If a test exercises an API and the team knows that is the purpose then when they change things in a way that break the test they shouldn&#x27;t... This sounds vague or obvious, but consider this: At Facebook and Google they have a rule that if it is not tested new code doesn&#x27;t have to care if it breaks. Both companies have team that make broad Sweeping changes. Facebook wrote a new std::string and Google use clangtools to make automated changes in thousands of places at once. Even if code breaks or APIs change as long as tests pass these people can be sure that they negatively impacted the product and are following their team&#x27;s rules.<p>Automated Tests can... This list could go on for a very long time."
2017-05-01T20:37:17.000Z,Show HN: Universal Login System for websites,"Thank you for your comment. Let me tell you a few pros:<p>- You can integrate Google and Facebook directly, or integrate Ukey1 and get all in one.<p>- Especially with Facebook, you need to follow API changes, but if you have Ukey1 - you don&#x27;t need to care about it - we care. For example a week ago, one of my friends told me that Facebook changed something and since that time FB login doesn&#x27;t work on his website - he still waits for his developers to fix it). Other example - pixabay.com - their FB login doesn&#x27;t work at least for 6 months.<p>- There are people who don&#x27;t want to use social logins. If you don&#x27;t want to loose those users, you need to implement email&#x2F;password option as well. It means, you need to store passwords in your database and care about authentication. Ukey1 offers social logins (Google, Facebook, LinkedIn) as well as classic email&#x2F;password option. It means, no barriers.<p>- As a user, with Ukey1 you have absolutely full control over your personal data you share. It&#x27;s not possible with Google or Facebook. And this is just a beginning.<p>- As a user, you can merge all your social identities. Why? For example, very often I have a problem that after some time I can&#x27;t remember what social account I previously used on different websites. And I am not alone.<p>- And finally, are you familiar with new General Data Protection Regulation in EU? If you collect personal data about European citizens, you should. Ukey1 will solve all technical aspects for you, Facebook nor Google not."
2017-04-22T18:20:59.000Z,An experienced Javascript developer’s account of learning React,"This post is misleading throughout.<p>The article shows snippets from the Redux and React Router docs, implying they are realistic examples of the way that typical React code should look, however, they are clearly snippets which are trying to show the entirety of an API on one screen. If your code is just a bunch of snippets copy-pasted from docs without much thought given to the structure of your code, your choice of UI library isn&#x27;t the problem.<p>On React Router, React Router is not React. You don&#x27;t need to use React Router. There are plenty of stable pure JS routing libraries, which don&#x27;t release new versions often (or ever, because they are &#x27;done&#x27;). Nothing about React requires you to use a React-related routing library.<p>The author found Redux and MobX too complex for their use case. However, Redux and MobX are not required to use React (there seems to be a theme here), and probably not useful if you don&#x27;t have a big single page app with a lot of client side state. Implying they are intrinsic aspects of using React is wrong.<p>The bits at the end:<p><i>you will need to import in your scripts react-dom and react without never using the last one instance for some wild reason known only by the React team</i><p>The react and react-dom packages are being split so react-native doesn&#x27;t have to pull in dependencies which are only used on the web. Not that different to Rails splitting up into a bunch of gems.<p><i>you can render functional components just by using js functions but you will need to wrap all your markup always in a wrapper tag to properly allow the Virtual DOM creation</i><p>This was an architectural limitation which is going away in the next major version.<p><i>its apparent simplicity is hidden behind a whole toolchain you need to configure before you can even writing 1 line of code</i><p>Why complain about this but refuse to use create-react-app? It literally solves this problem.<p><i>I started my app with React 15.5.0 knowing that my code is deprecate before even starting because facebook has just announced that for the next major release they are planning a complete rewrite of the framework and this means that they will likely nuke the current source because it can be no longer maintained.</i><p>This is FUD. The team has said that the next version of React will have some small breaking changes, but the API will remain almost completely the same. Not sure what they mean by &#x27;nuke the current source&#x27; though."
2017-02-22T15:59:49.000Z,"Google Site Search will be completely shut down by April 1, 2018","Last couple of years or so have been an eye opener for me on how I choose libraries, tools and services for my project. One important lesson was that never choose a service which don&#x27;t have plug and play open source alternative. Even hyped start ups go out of business and big companies like Facebook and Google shut down services.<p>Third party APIs are a even bigger risk. Facebook and Twitter APIs used to change quite often 2-3 years ago. (Haven&#x27;t personally worked on this off late though.) APIs and services which seem too cheap are generally the ones which should be avoided. Because it is more likely that the companies running these will not find a sustainable business model.<p>Even Open Source projects get abandoned quite often. Sometimes a team puts together an impressive open source project and then they get acquired by a big company which results in abandonment of the project. I have one client who has his startup riding on Kurento Media Server for WebRTC calls. This product is in development from last one and half years. Now, after Kurento&#x27;s acquisition by Twilio, Kurento&#x27;s future is not clear. Also it&#x27;s not a project which any body can just get into and start developing it further. Thankfully Kurento is not abandoned yet by the development team, but I had read somewhere that they are looking for new maintainers.<p>The lesson learned is only depend on mature open source projects and depend on PaaS services which make those open source projects available as easy to use services. Even if that PaaS service go down, there is a high chance that you will find someone who can deploy and support it for you.<p>However, if you are depending on a third party API or a relatively unknown Open Source Project for critical functionality, treat it as a big risk in your product&#x27;s future road map and be prepared with a contingency plan.<p>Right now in cloud services there are way too many products which are not easily replaceable. But these are easy to use and sometimes solve really difficult problems. So the temptation to use them is too high. So they still end up in the stack, especially when the clients themselves push for these services to be used."
2017-02-21T20:18:54.000Z,Why I Don’t Talk to Google Recruiters,"&gt; When data comes in over the wire, you probably shouldn&#x27;t be making assumptions about what&#x27;s nullable.<p>I have to work with their APIs often (as well as Amazon, Facebook and a couple other big players, they&#x27;re all equally awful).<p>Their documentation will tell you a type is an integer and will never be null. They will do this for 3 months, and then change it to send a string that can be nullable or empty string, without telling you or updating API versions. It goes beyond robustness. It&#x27;s the &quot;BigCorp will actively lie to you in their documentation&quot; principle."
2017-02-19T01:06:29.000Z,Show HN: Evilpass – A slightly evil password strength checker,"Using a 3rd party to login is nice and all but:<p>- if the party and you don&#x27;t get along anymore, the accounts are dead. Some business are still counting the money lost from cloudflare deciding the underlying site is not respecting their conditions anymore. Same for Google translate. Auth is no different.<p>- if it has a technical failure, it&#x27;s impossible to login. If you think it never happens, think again. We hear about a failure every year for some big companies. Because you don&#x27;t have access to the code, you can&#x27;t implement a quick fallback and must wait until they fix it.<p>- if their 3rd party account is compromised your site is as well. &quot;Someone pirated my facebook&quot; is something I heard to many time. It just meant that a close person from them maliciously used their account by accessing their computer when they were away, gaining access to everything.<p>- if their API changes, you need to change your code. Meaning you need to follow up on each providers. This can have a huge cost and the GAFAS really don&#x27;t care and change their API at will.<p>- if the user closed their 3rd party account, they can&#x27;t login anymore. This one is terrible : when I closed my gmail account, I became locked out of many services with not way of recovering them.<p>And then let&#x27;s say you have one sass for auth (Oauth provider X), one for the db (firebase), one for map (gmap), one for static files (ES2), one for your messages (CloudAMQP) and so one.<p>Basically you own nothing in your infrastructure. You have no control on anything, you are dependent of a lot of things, and they all have you &quot;clicked here to agree&quot; on a lonnnng legal text that will update regularly and be affected by market and politics, across various countries.<p>Your entire business is at the mercy of others."
2017-02-06T01:04:10.000Z,Why You Shouldn’t Use ReactJS for Complex Projects,"You don&#x27;t architecture you project around React - you simply fit react in wherever you want to render the UI. React has a very small API, most of which are simple lifecycle methods for dealing with changes in the state of a component [1].<p>You tell React that you&#x27;d like to Render component X inside DOM element Y, and that&#x27;s really all React does. There&#x27;s no architecturing your project around React.<p>[1] <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;react-component.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;react-component.html</a>"
2017-01-30T20:54:48.000Z,React Router: Declarative Routing for React,"I was going to complain about churn and such, but we&#x27;ve all heard the JavaScript framework fatigue story a thousand times.<p>I&#x27;ll summarize it to this: don&#x27;t <i>expect</i> a solid, stable, boring library to come out of someone&#x27;s hobby project.<p>React itself bloomed under Facebook&#x27;s stewardship, while all the other libraries in the ecosystem are bouncing all over the place without anything to keep them in place, especially after they lose their initial shine and geek points.<p>Kudos to the authors for their achievements. I don&#x27;t recall you promising anything to anybody, so any code you put out contributes something to the world, even if you get bored and change the API from procedural to declarative and back three times a day."
2017-01-14T10:05:39.000Z,VR,"That&#x27;s a very good analogy. Just don&#x27;t underestimate how quickly the tech can progress in this day and age, I did that mistake myself. Less than two years ago I was very excited about the Rift and bought a dev kit. As someone who works in computer vision etc, I was convinced though that good tracking would be many years out, and then suddenly there were the lighthouse solution from Valve. Now I&#x27;ve had the same thought about inside-out tracking (by means of vision), but even that seems to be arriving much faster than I initially anticipated. Today every big tech company from MS, Google, Facebook, to Valve, and hardware companies such as Samsung, HTC and Nvidia&#x2F;ATI manufacturers are pushing hard on every frontier of VR. I agree the form factor has to change to allow mass adoption, but expect much faster progress than what happened with phones in the 80s."
2017-01-12T18:42:22.000Z,"Google AMP Cache, AMP Lite, and the Need for Speed","Absolutely agree. I work in publishing, our readers are confused by the changed design of the site (Who the hell knows about AMP or Instant Articles besides people in the industry? The average reader doesn&#x27;t care).<p>We have to maintain variations of article templates for our responsive website, AMP, Facebook Instant Articles and Apple News now. Product owners and editors think implementing these things is cheap and easy because of all the marketing but unless you have something like a basic wordpress setup, it&#x27;s plenty of work to implement and adds a lot of things to maintain and requires developers to remember which subset of HTML AMP uses, what the JSON API for Apple News is like... at least Facebook Instant Articles use rss..."
2016-12-24T14:37:31.000Z,Ask HN: An app which allows you to follow a Facebook page without liking it in fb,"A couple of thoughts:<p>This indicates a dependency (on mobile devices) that is not inherent in the problem domain (following a page on Facebook). The dependency on mobile devices impedes the critical business function of receiving feedback from potential users. The app prototype could just as easily be a web page.<p>Overall, the app has a dependency on Facebook&#x27;s API&#x27;s and terms of service. Facebook can change theses arbitrarily or decide the app violates their intent.<p>Good luck."
2016-11-30T18:49:20.000Z,Facebook has cut off Prisma’s Live Video access,"Re-stating the facts of the case for the comments:<p>- This is a post-processing app. If you&#x27;re familiar with Instagram, the mechanics are the same: you either use the basic built-in camera, or select an existing photo. Then, you choose a filter, tune the filter, and after some processing, your result is ready.<p>- The finished image can be saved on the device, or exported directly to Instagram or Facebook.<p>- Recently, their camera gained a new button, to livestream to Facebook instead. The filters can be changed at any time during the broadcast.<p>- Facebook has revoked their API access to this livestream feature.<p>- Facebook is indeed working on style transfer for live video [1].<p>So this wasn&#x27;t the case of a third-party app <i>depending</i> on a big platform&#x27;s APIs and playing within their own walled garden. Rather, it&#x27;s a related, but different case of betting on the tech instead of the community [2], effectively being a free tech demo and hoping to attract investor interest.<p>While this may still work, the concept was quickly copied, -- in some cases, deliberately, like in the case of VK&#x27;s Vinci [3]. In addition, the Prisma founder&#x27;s previous employer, Mail.ru, released the similar app Artisto soon after, which worked on videos before Prisma did.<p>[1] <a href=""https:&#x2F;&#x2F;code.facebook.com&#x2F;posts&#x2F;196146247499076"" rel=""nofollow"">https:&#x2F;&#x2F;code.facebook.com&#x2F;posts&#x2F;196146247499076</a>
[2] <a href=""http:&#x2F;&#x2F;www.businessinsider.com&#x2F;prisma-labs-app-profile-interview-with-ceo-alexey-moiseenkov-2016-8"" rel=""nofollow"">http:&#x2F;&#x2F;www.businessinsider.com&#x2F;prisma-labs-app-profile-inter...</a>
[3] <a href=""https:&#x2F;&#x2F;www.technohacker.com&#x2F;vkontakte-launched-its-prisma-clone-vinci&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;www.technohacker.com&#x2F;vkontakte-launched-its-prisma-c...</a>"
2016-11-30T15:20:51.000Z,People’s freedom jeopardised by new software adopted by California’s courts,"We need formal codes of practice, we need good institutions, but we also need a cultural change.<p>We no longer have the luxury of saying &quot;oh, it&#x27;s just a CRUD app, it doesn&#x27;t matter if things go wrong&quot;. Software has become too important, it has become too deeply intertwined in our daily lives. Errors and leaks from trivial little apps can have life-changing consequences for users.<p>If your software handles personally identifying data, there&#x27;s a non-zero chance that you could ruin someone&#x27;s life through negligence. Legal case management software might be an obvious example, but it&#x27;s the tip of a very big iceberg.<p>If you have several million users, one-in-a-million edge cases are going to happen constantly. Weird things happen at scale. We need to treat every Android permission and every Facebook API call as a potential matter of life or death. We need the personal courage and the support of our peers to say &quot;no, I will not implement that feature&quot;, &quot;no, I will not store that user data&quot;, &quot;no, I will not transmit that in plaintext&quot;, &quot;no, I will not commit that to production without unit testing&quot;.<p><a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Iron_Ring"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Iron_Ring</a>"
2016-11-15T09:15:51.000Z,Do you really want an SPA framework?,"You don’t need any of this stuff to build a great web app. You don’t need react, you don’t need fancy javascript syntax that requires you have a complicated build infrastructure. Babel has over 40,000 files. Think about that for a moment. 40k files for some shorthand syntax. Your &quot;build&quot; times may only be a few seconds now (anything that is over one second imo is too long), but just wait. They will get to 30+ seconds in no time and then you&#x27;ll have to go dive into the belly of that 40k file beast to find out how to unfuck yourself. I&#x27;ve been there.<p>You don’t even need a framework most of the time. Most of the frameworks I’ve used are poorly designed (I&#x27;m looking at you Ember. If there are any Ember devs reading this, I&#x27;ll meet you in the parking lot...) and represent the design choices of a someone working on some project probably a lot different than yours. It feels good to give up control and let someone else make some choices for you, until you realize you’ve built an application based upon their poor design, and then you’re stuck.<p>All you need is semantic HTML, the DOM, and some plain old javascript. Organize your code, write simply, don’t overcomplicate and try to make things too general because your problems probably are very likely concrete anyway. Don’t buy into the hype. Just because big company X uses something, doesn’t mean you need to use it on your projects too. Have you seen Facebook? Their product hasn’t changed or innovated appreciably in years so you shouldn’t be taking any lessons from them in how to build ‘scalable’ applications, whatever that means.<p>Don’t dump a 500 KB framework on the page to save a few milliseconds in incremental rendering. Or think you need to worry about performance or complexity before you even have an app.<p>Is it odd to anyone that the entire battle cry of React is rooted in pre-optimization? The myth that the DOM is somehow evil, or all pages will one day have millions of elements to manage? This is gladly spoonfed to people who don&#x27;t understand how the browser works, and never learned the basics. Take away their framework and they don&#x27;t know how to build apps!<p>It violates my sense of pragmatism to save a few ms in rendering when you delay the initial page load by 500 ms or more? I also personally find the mixing of declarative and imperative programming styles and JSX to be absolutely horrid and the debug experience of many of the immutable libraries to be terrible. And, if you actually performance test the stuff you&#x27;ll see they are full of either outright lies or fabrications to make the authors look good. Hint: if every time you call a getter on an object it causes the framework to go 30 stacks deep you&#x27;re not going to have good performance. Just try it in your framework of choice today. You&#x27;re swear we&#x27;re working in java these days with the stack traces so deep and abstracted they have lost all touch with reality.<p>My favorite recently is to find all kinds of bizarre wrappers for javascript libraries that could have been used well enough on their own. The wrappers don&#x27;t really do anything other than hard-code the original author&#x27;s API and basically act as a middle man. I guess everything needs to be wrapped in a react component to be useful these days huh?"
2016-11-02T21:55:51.000Z,Plasma Mobile – Turns your phone into a fully open hacking device,"Yep, my USB port died too. I ended up getting an external charger and a handful of spare batteries. Did that for about a year or two before I got my Nexus 5. At least buying new batteries gave me back my battery life that had degraded to almost nothing over the years.<p>On top of that, over the years, the kickstand broke, the screen got scratched badly, my belt clip broke in multiple places, the SIM slot became really finicky, and even the plastic around the keyboard was starting to come out.<p>And a lot of the problem was performance: a 600 MHz OMAP3 was great in 2009, but by 2014 it was just too slow to handle modern websites, and the browser based on Firefox 3.5 (maybe 3.6?) couldn&#x27;t even handle some newer websites. And to be honest, the RAM was low even for its time... only 256 MB, operated as a unionfs with the rootfs, plus some of the (very, very slow) eMMC was formatted as swap. Over time, most apps stopped working: I remember using Facebrick to access Facebook for a while, and it was nice, but eventually the author stopped updating it, and Facebook changed their API, so no more Facebrick. It got to the point where I&#x27;d only use the browser, terminal, camera, and dialer, because that&#x27;s all that was useful.<p>About a year after getting my Nexus 5, I booted up my N900 to get some photos off it, and I found I had difficulty emailing them to myself because Gmail had changed their API and flagged my N900&#x27;s connection attempts because they used the old API that was deprecated for security reasons. None of the emails went through, and when I got back to my desktop, Google took me to a page telling me it thought my account had been compromised."
2016-10-30T07:12:19.000Z,Is Vue.js easier for a beginner to learn than jQuery?,"I get the feeling that React with the Redux&#x2F;Flux architecture scales to Facebook-level complexity a bit better than Vue. Vue feels kinda like if you made plain React with setState a lot easier to use.<p>The complete separation of presentation and state with flux is a lot of work but starts to pay off when your data is used in many places and you can just connect any piece to the same global state and keep consistency. Or when you can make writing API interactions really easy with one middleware and from there your requests are done declaratively with actions.<p>I wonder what it&#x27;s like to use Vue with Redux! Probably a bit weird given the two-way binding, where Redux is all about one-way binding and cycling every change through a global state transition. At first glance (revue, vue-redux) this seems awkward.<p>How does your team accomplish the stuff you would otherwise do with Redux? How do you do AJAX and how do you propagate that around? I suppose it&#x27;s just like regular MVVM, all pretty isolated."
2016-10-24T22:37:01.000Z,Building a Shop with Sub-Second Page Loads: Lessons Learned,"&gt; then you will have to do these optimizations yourself<p>For the optimizations you listed they actually all still apply with a custom theme. The author doesn&#x27;t have to do anything. Shopify caches all generated HTML, serves all assets from a CDN, and controls expiry without using TTLs because we know when anything changes. The stuff custom theme authors do have to do is things like bloat reduction &#x2F; post-first-paint behaviour addition &#x2F; css pruning etc etc. We&#x27;re considering shipping mod_pagespeed for all customers too which would help automate a bunch of this stuff.<p>&gt; how do you handle sudden load spikes in the database<p>Most of our read load is served by a datablob caching layer[1] so the DB is doing mostly stuff only it can do, writes, and we then have a carefully tuned schema that allows for massive throughput. We also buy really expensive databases -- we just took shipment of over a ton of database hardware in one datacenter in preparation for Cyber Monday. If we do hit our limit, we&#x27;re able to throttle the number of people in the checkout while maintaining a good experience for customers.<p>&gt; Do you reshard and migrate data in real-time<p>Yes<p>&gt; How does Shopify scale the application tier<p>We shard by shop and build failure domains called pods that are self contained versions of each piece of Shopify that can failover independently between infrastructures.<p>&gt; How can tenants run scalable custom backend code<p>Using Shopify Scripts. They&#x27;re only available in the domain of carts and checkouts right now, but are rolling out to all our backend domain models in time. See <a href=""https:&#x2F;&#x2F;help.shopify.com&#x2F;api&#x2F;tutorials&#x2F;shopify-scripts"" rel=""nofollow"">https:&#x2F;&#x2F;help.shopify.com&#x2F;api&#x2F;tutorials&#x2F;shopify-scripts</a><p>&gt; What happens if a database or server node crashes?<p>We have automated failover in place at almost every level of the system, so unless we&#x27;ve screwed up somewhere, no one notices!<p>&gt; they can for example easily build a React&#x2F;Angular single page applications, run server-side JavaScript code, do custom queries, build a native app around the same business logic and APIs, subscribe to websocket-based change streams etc<p>Did the Thinks store end up using any of these features of the platform? I am sure lots of apps need these things, but for web storefronts a lot of this seems like overkill. Shopify also supercharges you when you want to move beyond just a web storefront: we have a mobile SDK for building native apps, connectors to let you sell on Amazon, Facebook, and anywhere you can inject HTML, a world class mobile administration app, a POS solution, a massive app store for other integrations, etc etc etc.<p>&gt; this is usually not an indicator for scalability and a low-latency design<p>Again, sub 100ms response time and an order of magnitude more traffic every minute than the peak the Thinks sale saw... that&#x27;s pretty good!<p>I&#x27;m trying to get at the fact that building a web store from scratch, be it with a handy backend as a service or not, is going to be really hard in comparison to using Shopify. You sacrifice some small amount of flexibility, but you gain so so so much more by buying into the ecosystem. I still think it is unwise to try to compete with other platforms who&#x27;s core competency is commerce.<p>1: <a href=""https:&#x2F;&#x2F;github.com&#x2F;shopify&#x2F;identity_cache"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;shopify&#x2F;identity_cache</a>"
2016-10-23T02:00:22.000Z,A Professor Who Was Right About Index Funds All Along,I think we as hackers can use our abilities to analyze certain companies better than the professionals.<p>Example 1: track the Google rankings of companies that rely a lot on search engine traffic. see if any have dropped a lot from a major algorithm change (i.e. Demand Media)<p>Example 2: use the Facebook graph API to do the same for companies that rely a lot on Facebook for traffic.<p>Example 3: at the end of every month create a profile on weightwatchers.com. Note the user id number. Use this to extrapolate the number of users that signed up every month.<p>Example 4: track the number of websites that installed a JS script for vendors like Hubspot.<p>Example 5: every month scrape Ecommerce sites and track the increase % of reviews for major brands.
2016-10-18T13:47:04.000Z,Virtual Forest,"For starters, you need an experimental build of Chromium that Google provides in a ZIP file, or you need Firefox Nightly, and in both cases you have to enable a flag.<p>After that, I do not know what the current status is for A-Frame supporting the Vive. And of course, there was recently a big change to the WebVR API, so A-Frame may not be caught up to that, either.<p>As far as I know, A-Frame&#x27;s &quot;known good configuration&quot; is Oculus Rift + Firefox Nightly, or (HTC Vive|Oculus Rift) + not-latest Experimental Chromium.<p>And Windows 10, of course, because Facebook can&#x27;t find a single person capable of doing graphics work on Linux out of 15,000 employees, or so they would have us believe.<p>You can find access to all of these things at <a href=""http:&#x2F;&#x2F;www.webvr.info"" rel=""nofollow"">http:&#x2F;&#x2F;www.webvr.info</a>"
2016-10-12T10:27:36.000Z,"ACLU exposes Facebook, Twitter for selling surveillance company user data","Facebook&#x27;s c&amp;d against me and my friend&#x27;s company we bootstrapped to about $100k annualized before decicing to close stuff down to changes from this: <a href=""https:&#x2F;&#x2F;lumendatabase.org&#x2F;notices&#x2F;2037976"" rel=""nofollow"">https:&#x2F;&#x2F;lumendatabase.org&#x2F;notices&#x2F;2037976</a><p>I&#x27;m in Indonesia now, and still have everything pretty much ready where I left off (and technically its even easier than before to exfil data from this walled garden sans user account, because of the huge surface of oauth keys out there in the wild as it is for every website with similar protocols and api&#x27;s) so i&#x27;m just doing due diligence now to make sure that like me and my friend handled CNIL[0] from the US, we can effectively send any facebook requests to &#x2F;dev&#x2F;null<p>So I say to anyone else if you think its &quot;public data&quot; try to start a company that builds a derivative product within the US leveraging such &quot;public data&quot; ;)<p>[0]: <a href=""https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Commission_nationale_de_l%27informatique_et_des_libert%C3%A9s"" rel=""nofollow"">https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Commission_nationale_de_l%27in...</a>"
2016-10-07T01:47:16.000Z,Reflections of an “Old” Programmer,"&gt; Every time I feel like I&#x27;m &quot;out of touch&quot; with the hip new thing, I take a weekend to look into it. I tend to discover that the core principles are the same, this time someone has added another C to MVC; or the put their spin on an API for doing X;<p>But that is only for the &#x27;abstractions&#x27; they implement; the details are another thing.<p>I feel the only thing that really changed is that now big companies with PR &#x2F; marketing departments are on the case while before it was more a geek thing. There is nothing fundamentally different in new frameworks (heck, most are them are just rehashes of others that are many years old with very small improvements), but suddenly the echo chamber makes it out to be vital to your career.<p>Like React. It&#x27;s nice but come on... Every frontend programmer I know is fretting that they are not into it enough because you will die or something if you are not. That seems good marketing by Facebook to get such a solid drive behind it so quickly. But it&#x27;s not needed for anything; you can still just use what you used before and often faster&#x2F;better (because you are good at what you did for many years right?) and you don&#x27;t have to bother with learning the latest thing all the time, while, with React, because you are drinking the cool aid, you have to update&#x2F;refactor&#x2F;redo stuff often because of changing libraries and new insights. It would make you stressed if think you feel you have to keep up with all of that.<p>Also, some tools seem to have just been made to look smart. Really, something like Webpack doesn&#x27;t have to be that obfuscated. It really looks like it has been made like that just to say; &#x27;ah, you just do not get it&#x27;. I see people (20somethings included) really sweating in their keyboard when trying to figure out more than the basics of that thing; so why are people using it? Why is it actually popular?"
2016-10-03T22:29:42.000Z,Does Angular 2 live up to the hype?,"I worked 2 years with Angular 1 and it was OK, but now that I&#x27;m working with React I can&#x27;t imagine going back to Angular.<p>You should read the official tutorial on the React website [1], it take like 1 hour and you will know everything about React (the API is incredible simple). Then start your app with the official Create-React-App [2] (it installs for you a webpack&#x2F;babel configuration and a fetch polyfill, so you can use out-of-the-box JSX, classes, import&#x2F;export, async&#x2F;await, a cross browser fetch for your AJAX calls, etc..). You don&#x27;t need Redux, but probably React-Router if your app has several pages.<p>And that&#x27;s it! The React&#x2F;Babel&#x2F;Webpack stack has completely changed how we develop web applications. And with Create-React-App you avoid all the boilerplate.<p>[1] <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;tutorial.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;tutorial.html</a><p>[2] <a href=""https:&#x2F;&#x2F;github.com&#x2F;facebookincubator&#x2F;create-react-app"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebookincubator&#x2F;create-react-app</a>"
2016-09-30T12:56:03.000Z,DNS-over-HTTPS,"Thank you for the link. I was previously only working from these links:<p><a href=""https:&#x2F;&#x2F;www.ietf.org&#x2F;mail-archive&#x2F;web&#x2F;dane&#x2F;current&#x2F;msg06996.html"" rel=""nofollow"">https:&#x2F;&#x2F;www.ietf.org&#x2F;mail-archive&#x2F;web&#x2F;dane&#x2F;current&#x2F;msg06996....</a><p><a href=""https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id=1077323"" rel=""nofollow"">https:&#x2F;&#x2F;bugzilla.mozilla.org&#x2F;show_bug.cgi?id=1077323</a><p><a href=""https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=50874"" rel=""nofollow"">https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=50874</a><p>&gt; Instead, for this we have HPKP, which is a memory-based pinning solution using HTTP headers.<p>The problem with HPKP is that you still need a certificate from a CA. And if you want wildcards or a &gt;90 day length (regardless of what you think of their security, many people do -- the biggest sites on the internet have both), that means paying money. And it also still leaves you vulnerable to MitM rogue CA attacks.<p>HPKP requires the user to connect the first time to get the pinned key. If an MitM has a fake certificate for your domain, they can send that to you on your first connection and fool you. DANE does not have this problem.<p>Well, to be fair, DANE has it for the DNSSEC provider used. But that is one thing to trust, and said certificate can be bundled with the OS or browser. One thing to trust beats the current 2000+ intermediate CAs we have to trust.<p>Further, DANE allows a way to verify self-signed certificates, allowing security to be free for everyone. We could see a lot more innovation than just certbot if Let&#x27;s Encrypt weren&#x27;t the only way to generate free certificates. For just one example, web servers could generate certificates from fresh installs; zero configuration requied. Like Caddy, but in nginx and Apache.<p>Lastly, HPKP is riskier. You have to include a backup pin. But, what would happen if your had your own pinned, and StartSSL as the secondary? And you set HPKP for a year? And two weeks from now, Mozilla revokes StartCom entirely? Well, good luck with that one. Deleting HPKP is a royal pain for a regular user (about:permissions in Firefox, chrome:&#x2F;&#x2F;net-internals#hsts in Chrome)<p>&gt; We also have pre-loaded pinning in Chrome for larger or more obvious targets.<p>Nice for Google and Facebook, not so nice for byuu.org =(<p>&gt; It&#x27;s also worth noting that CryptoCat has committed pinning-suicide in Chrome at at the moment due to their CA having switched intermediates between renewals.<p>Another good negative of HPKP.<p>&gt; But support for that was removed because it was a bunch of parsing code outside of the sandbox, wasn&#x27;t really being used and it conflicted with two long-term plans for the health of the HTTPS ecosystem: eliminating 1024-bit RSA and Certificate Transparency. The conflicts are probably the most important reasons for not wanting to renew the experiment.<p>RSA-1024 is bad, yes. Perhaps we should start asking how we can get DNSSEC on RSA-2048+. Having a commitment to implement it in Chrome, Firefox, Edge, Safari if we do would go a long way toward making that happen, I&#x27;m sure. Further, we can reject any RSA-1024 signed DNSSEC after that point, just like we reject weak crypto in browsers today.<p>If they can&#x27;t change DNSSEC to stronger crypto, how about they make an alternative? If Google introduces one that has stronger crypto, supports it in Chrome, and offers a free &quot;DNSSEC+&quot; hosting service, I&#x27;ll definitely take immediate advantage of that.<p>But the latter is the whole point of DANE -- self-signing. Certificate Transparency is a crutch due to the CA system having 2000+ intermediate CAs that can sign any domain name they want. With DANE, you don&#x27;t need that anymore. DANE is about providing an alternative to the CA signing business.<p>And there&#x27;s nothing stopping users from serving up trusted CA-signed endpoint certificate signatures over DANE&#x2F;TLSA records. That would obviously remain the only sensible way to do EV certificates. The way I see it, a DANE certificate would act like HTTP does now: you get the globe (or even the question mark circle), but your page actually loads over HTTPS, instead of sending you to Defcon-1 advisories that are all but impossible for the casual user to work around (and indeed, we don&#x27;t want to train them to work around these warnings anyway.) There&#x27;s no way this would be <i>worse</i> than plain-text HTTP.<p>&gt; You literally can&#x27;t avoid it because the root zone transits through a 1024-bit key.<p>Does this really matter for the root? There are root CAs with RSA-1024 still.<p>...<p>At any rate, Google apparently feels DNSSEC+DANE is good enough for this web service API. So, honest question, why offer that if it&#x27;s really such an unworkable system?"
2016-09-27T07:00:07.000Z,Exponent: Making React Native Easier,"Yeah. That&#x27;s a good articulation of some of the problems but that&#x27;s tough to learn them the hard way. I wrote a comment below talking a bit about how a lot of these problems start to go away with Exponent but I wanted to offer some thoughts if you or your teammates have embarked on the raw React Native route.<p>One thing I&#x27;ve learned from working with React Native is that you want to stay fairly up to date with the frequent releases. The Exponent team puts a lot of work into upgrading our own dependencies and maintaining the Exponent API that other developers depend on.<p>Authors of components and other npm packages will update their code to work with the latest version of React Native. It takes energy to stay up to date since you need to read the release notes and breaking changes and sometimes it&#x27;s helpful to scan the commit history on the release branch. But this way you can use react-redux v4 and other actively developed dependencies.<p>On the other hand, though, sometimes component authors don&#x27;t maintain their projects or support one platform but not the other. When dependencies fall out of date there isn&#x27;t an easy answer. In the past I&#x27;ve fixed the issues myself and sent pull requests. Showing financial support is also another approach; my teammate Brent wrote a post about this: <a href=""https:&#x2F;&#x2F;blog.getexponent.com&#x2F;putting-your-money-where-your-package-json-is-e34a35099a1b"" rel=""nofollow"">https:&#x2F;&#x2F;blog.getexponent.com&#x2F;putting-your-money-where-your-p...</a>. The maintenance of open-source libraries isn&#x27;t unique to React Native but it&#x27;s perhaps exacerbated by its cross-platform nature and frequent release cycle.<p>For the issue about CPU ABIs, I believe React Native supports armeabi-v7a and x86 but not arm64-v8a or x64. It would be great to have native arm64 support but so far no one has needed it enough to implement it instead of using ndk.abiFilters. For what it&#x27;s worth, this works for Exponent and several other companies with apps that use React Native like Facebook."
2016-09-26T18:02:46.000Z,Exponent: Making React Native Easier,"Hi there! I work on Exponent.<p>We intentionally chose to not let users drop down to native -- the idea of having an interpreted language that sits on top of a native runtime on multiple platforms is not a new one, and it allows for so many benefits that you lose out on if developers can add arbitrary compiled code with direct access to system APIs.<p>Additionally, there is a significant value-add of using Exponent in terms of upgrades. As great as React Native is, it also moves extremely fast and it can be difficult to keep up with new releases -- a change in React Native might cause several of your native dependencies to break, and you&#x27;ll need to fork those libraries and fix them if the maintainer isn&#x27;t keeping on the same schedule as you. Updates with Exponent are as simple as updating JavaScript, which has much less churn and breaking changes than the native side (the React API itself is very mature, the APIs for specific native components may change).<p>Another nice advantage of this is that you can work on an iOS app from Windows and Linux, because you don&#x27;t need to compile your app with Xcode (we handle builds for you when you want to ship to the app store, before that you can just use the Exponent client).<p>We ship with a bunch of APIs out of the box and are constantly improving them and adding more. We have analytics tools like Amplitude and Segment built in, Maps, Facebook login (working on Google Login), and more: <a href=""https:&#x2F;&#x2F;docs.getexponent.com&#x2F;versions&#x2F;latest&#x2F;index.html"" rel=""nofollow"">https:&#x2F;&#x2F;docs.getexponent.com&#x2F;versions&#x2F;latest&#x2F;index.html</a><p>React Native is still very early, though, and Exponent is just a small team of seven, so we understand that we can&#x27;t possibly expose every API that developers working with the platform might want. So, we are working on a way for developers to be able to still take advantage of the Exponent toolchain and layer on native code. I&#x27;ve written up our approach in more detail here: <a href=""https:&#x2F;&#x2F;blog.getexponent.com&#x2F;answered-on-slack-ejecting-from-exponent-154bdca57dc1#.yr55mmqtc"" rel=""nofollow"">https:&#x2F;&#x2F;blog.getexponent.com&#x2F;answered-on-slack-ejecting-from...</a>"
2016-09-22T03:35:08.000Z,How Dropbox securely stores your passwords,"Sorry for the delay. A Jazzercise class suddenly appeared in the coworking space I work out of, so I fled, and then I had to give a talk about Starfighter.<p>Responses: <i>(when I say &quot;your&quot; let&#x27;s just stipulate I mean Facebook)</i><p>* Your password validation overhead is .1% of <i>current</i> front end resources, but could be ratcheted up, and would be easier to ratchet up if they weren&#x27;t shared by other things.<p>* I totally understand why you keep the old MD5 cruft around --- but would add that it&#x27;s cruft that would be even less obvious if it lived behind an authentication server.<p>* I think it&#x27;s safer, simpler, cleaner, probably easier to scale, and definitely easier to change authentication if it lives in its own service rather than being implemented (in part) on a generic application server. As usage shifts from HTML front-end to all API, you might even be able to keep app servers from even <i>seeing</i> passwords.<p>* By &quot;assessed&quot;, I mean, worked on other people&#x27;s systems at this scale.<p>So I guess I&#x27;d wrap up with a question: if you had this to do over again, from scratch, the way you wanted to, would you have app servers do a password hash and then entangle it somehow with an HMAC operation from a crypto service, or would you have the whole password hash done on the crypto service directly?"
2016-09-16T20:49:01.000Z,Learn to build serverless apps by competing in cloud tank warfare,"&#x27;serverless&#x27; apps are not really &#x27;serverless&#x27;.  You are just allowing another company to run the actual server infrastructure.<p>While this might be good for large companies, it&#x27;s dangerous for startups.  Someone else has complete control over the infrastructure of your business and it not only makes it difficult for you to make simple changes that could save you money, but it&#x27;s very expensive compared to traditional servers that you run yourself.<p>I run all of my own servers and it would cost me 10X to run it on AWS.<p>Too many startups outsource their infrastructure or create a business that relies completely on another business platform like Twitter&#x2F;Facebook and then get squashed when things change or the platform doesn&#x27;t want you to have too much power.<p>The book called &#x27;Hatching Twitter&#x27; shows exactly this mindset: 3rd party API users were cut-off because the execs at Twitter realized that only a few of the 3rd party apps together had enough of a user base to compete with Twitter.<p>Which is why all of these services follow the same handbook: have generous access to the API, after this brings in and builds the user base, Cut-off access and severely limit the API (to prevent users from leaving).<p>One other step is charging so much money for the API access that it bankrupts most of these businesses and then launch a competing app."
2016-09-08T13:19:00.000Z,Ask HN: What happened to Facebook graph search?,"It possibly might have been scaled back along with the rest of their cuts to permissions in their Graph API in 2015: <a href=""https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a><p>You could check how that changed over time: <a href=""https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;apps&#x2F;changelog"" rel=""nofollow"">https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;apps&#x2F;changelog</a><p>Not sure if they are the same, but it might be along the same lines of &quot;We don&#x27;t want to give everyone access to everything&quot;."
2016-08-25T15:43:03.000Z,Looking ahead for WhatsApp,"Don&#x27;t give up : )<p>After some of my friends swiched a few groups, switching has happened naturally group by group since Telegram arrived and today I just have to struggle with my siblings and a local group that also contains a number of elderly people that I won&#x27;t force to change.<p>(For those who are not aware Telegram is dimilar to Whatsapp but with less focus on formal verifiable crypto but with other advantages like not-owned-by-neither-Facebook-nor-Google, simpler anf more powerful UI, opensource, a choice of multiple clients, better desktop client, bot API etc etc. The lack of verifiable crypto is still an issue but as long as Facebook owns Whatsapp it seems crypto doesn&#x27;t help too much :-&#x2F;  )"
2016-08-07T22:01:15.000Z,React Fiber Architecture,"Does it strike anyone else that the entire battle cry of react reeks of pre-mature optimization?<p>Let&#x27;s load a giant javascript framework, slow our onload and page ready event by half a second, overcomplicate our build infrastructure with JSX, mixing up our declarative code with non-standard imperative&#x2F;functional javascript and HTML, start importing sass and CSS into our javascript files, and use an API that is weird and borrowed (componentDidMount?).<p>What exactly is the savings here? I fail to see it. When and if you have 100,000 DOM elements on a page and need to do efficient rendering and reconciliation of what has changed? Poor code organization? Adherence to a weird and clunky API? Because Facebook does it?<p>I&#x27;m sorry but I&#x27;ve had the displeasure of working on a few apps where developers have used React and I could have done the same thing, without all the bloat, achieving much faster performance, both measured from first byte to when the page was ready for the user to use, to any interactions on the page. All of these apps were relatively simple single page apps.<p>What has happened to us as developers that this sounds like a good idea? Whatever happened to pragmatism? Has that just lost by the wayside of the new shiny?"
2016-08-04T22:11:42.000Z,News Feed FYI: Further Reducing Clickbait in Feed,"It&#x27;s unhealthy when they allow it for a long time, benefit from it, and then pull the rug out from under them once they believe it is in their financial best interest to do so.  It&#x27;s exactly the same as your Twitter and Facebook developer examples.<p>Developers were monetizing the Twitter platform until Twitter pulled the rug out.  Facebook has similarly neutered their API to the point where it is nearly useless, and many businesses were crushed in the wake of the changes.  You seem to be saying that it&#x27;s only unhealthy when developers are affected, but that isn&#x27;t the case.  Developers have no &quot;inherent right to succeed on the good graces of another business allowing them to&quot; either,  yet you see that as unhealthy.<p>Publishers and developers are just users of the system, getting crushed when Facebook doesn&#x27;t believe it&#x27;s getting a big enough cut.  I would also argue that Facebook actively blocking the sharing of external content that its users choose to share with each other simply because they aren&#x27;t getting their cut is different than the affected businesses believing they have an &quot;inherent right to succeed on the good graces of another business&quot;.  Businesses that don&#x27;t directly do anything on Facebook will be affected by this, because if their visitors wish to share their content, they will likely attempt to share it through Facebook."
2016-08-03T15:03:52.000Z,ReactJS is a tax Facebook levies on startup web development,"&gt; tricking the framework into doing what we want it to do<p>I read this from many framework users about many frameworks. Seems like the average developer just can&#x27;t change is modus operandi to work with the framework they use.<p>&gt; performance is abysmal<p>Yes, it&#x27;s not that good, but most of the time it&#x27;s enough. Many people write how you should go immutable and be pure and the performance (see pure render mixin etc.) will come. I simply switched some parts of the app, that need high-speed, out with D3 for example.<p>&gt; it’s nothing that couldn’t be replicated by some simple coding conventions<p>True and there are many many component based frameworks to choose from. React simply has the better eco system.<p>&gt; priming and funnelling programmers into their enterprise<p>Yes and that&#x27;s probably the main selling point of React for Facebook (i.e. why they give it away for free). They already hired a bunch of devs that did some OSS work on React.<p>&gt; suppressing development efficiency elsewhere<p>This, on the other hand, is a bit of a stretch. They don&#x27;t force anyone to use it and if you did and saw the problems with it (like I did), you could simple use a different framework. There is no shortage on JS frameworks.<p>What I like about React, is that it has a big eco-system&#x2F;community and a small API.<p>After using it one year, I saw its flaws (both in React and Redux) and wouldn&#x27;t use it for the next project if I have the choice."
2016-07-25T09:59:20.000Z,9th Circuit: It’s a crime to visit a website after being told not to visit it,"What is so special about a cease and desist letter? So now 1 company can destroy the business model of another company by simply sending out a letter? Power was using a public API with user permission. If Facebook did not like that then change the API, or introduce a different security model."
2016-07-25T09:06:17.000Z,9th Circuit: It’s a crime to visit a website after being told not to visit it,I&#x27;ve never used Facebook&#x27;s API but I assume each server&#x2F;app that wants to access it has an API key specific to that server&#x2F;app. Couldn&#x27;t Facebook just revoke the key? Or change its permissions?
2016-07-21T04:53:36.000Z,The End of Microservices,"You say it as if it&#x27;s a bad thing... Compared to the alternative, fiefdoms really are a wonderful thing!<p>I once work for a giant fortune 500 corporation. Our department had a good 300 developers, and had been writing code for years. They had built the whose system using the classic, box-box-cylinder architecture. There were hundreds of little top tier &#x27;services&#x27;, but in practice, they all shared the same database, had to be deployed pretty much at the same time, and version upgrades had to go in lockstep. Every so often, database changes were necessary, and the world would grind to a halt for months to make the system still work after the migration: It was awful.<p>On top of this, having everyone using one stack really meant that a council of elders got to make tech decisions, and everyone else just did what they were told. This built a giant hierarchy. People near the top would never leave, because nowhere else would give them that much power. Talented developers would take years to gain influence, so they often just left. What remained was developers with no ambitions other than getting a paycheck... it was horrible.<p>The alternative was to let people maintain their own stacks, as long as they provided interfaces that other people could call. By limiting how much code could talk to a database, you didn&#x27;t need negotiations to change something: Teams made any change they wanted as long as they remained backwards compatible, and then had to lobby users to upgrade to newest API versions if they wanted to remove the backwards compatibility mess. It was awesome in comparison.<p>A gigantic place won&#x27;t have those problems, because they can invest money on making whatever tech decisions they made tenable: PHP is slow? Let&#x27;s build a new runtime and compiler, says Facebook! If you are tiny, you don&#x27;t need any of this BS, because if your team of 8 engineers can&#x27;t agree, your company will fail regardless. But when you have 200 engineers, it&#x27;s giving people more control over a piece of the pie or bleeding talent.<p>The one thing you still need to do is make sure teams have the right size, and people have enough accountability, that the product still works. You also need silly amounts of data marshaling and error checking compared to the monolith. But the terror of a company that can&#x27;t hire engineers because the only way to have any control over your daily life is to have been there for 5 years is just hard to compare. When people say they don&#x27;t want to work big corporate gigs, what they really mean is that monoliths become soul sucking.<p>So yes, I give thumbs up to fiefdoms, just like I&#x27;d rather have inefficiency in a republic vs a theoretically efficient dictatorship."
2016-07-18T18:18:48.000Z,Serverless Architectures,"The phrase that Amazon used when launching lambda was &#x27;deploy code not servers&#x27;. To me this sums up what &#x27;serverless&#x27; means. It means the developer doesn&#x27;t have to worry about servers in any way.<p>With AWS Lambda&#x2F;API Gateway (and arguably with Google App Engine before it) you take away the toil of having to:<p><pre><code>  * Manage&#x2F;deploy servers
  * Monitor&#x2F;maintain&#x2F;upgrade servers
  * Figuring out tools to deploy your app to your server
  * Scaling an app globally.
  * Coping with outages in a data-centre&#x2F;availability
  * Worry about load-balancing &amp; scaling infrastructure 
</code></pre>
So obviously there are still servers there, but they are largely invisible to the developer.<p>I think this is more than just a marketing gimmick. It is part of a big change in application architectures.<p>At one end as a small developer of of web&#x2F;mobile app this can considerably reduce the amount of code&#x2F;maintenance you need.<p>At the opposite end of the spectrum the likes of Google (Borg) and Facebook (Tupperware) have developed their own in-house solutions where by servers are largely abstracted out as an entity that developers need to worry about.<p>Managed docker services (e.g. Google Container Platform, Docker Cloud) are another approach of achieving a largely &#x27;serverless&#x27; goal.<p>(edits for formatting)"
2016-07-13T01:28:44.000Z,The Conjoined Triangles of Senior-Level Development,"These types of programming are different, but not in the way you describe. It&#x27;s not the cliche of CRUD LOB vs. &quot;Cool things&quot;, but of making apps targeted at the end user vs. creating a shared infrastructure (whether it is a library or a cloud service), and there are many levels down that rabbit hole.<p>But that being said, Unless you are working for a very conventional small or midsize business with no plans of rapid growth (and businesses of these rarely employ large teams that need leadership anyway), it&#x27;s never going to be &quot;just CRUD&quot; or just slapping a client GUI in front o a database backend&quot;. With large datasets or many users you have to plan your storage and query patterns for scalability, when precision is crucial you have to design for consistency when a real-time response is required you need to reduce latency and when business requirements change often you need to design for flexibility, when your company has multiple clients you need to design a good API, and so on. In most cases you must balance between several requirements, and I haven&#x27;t even gotten to security yet, which is a too often neglected requirement for almost every system out there. I also didn&#x27;t touch all the peripheral requirements for having automated tests (and designing for testability), designing a CI pipeline and educating junior devs about revision control workflows and DevOps practices.<p>Handling all of that doesn&#x27;t require the same technical skills required for writing kernel code, a ray tracing engine or a database engine (all of them different skills in their own respect), but to be able to design a good system and give guidance to junior developers you definitely need more than 2-3 years of experience.<p>Yes, many companies choose to ignore what I&#x27;ve just said, and hire low-level programmers anyway, and often put an MBA (who did some formulas in Excel back then) to (micro-)manage them. Of course the products they turn out are buggy, hard to upgrade, fall down to pieces under the smallest hint of load, end up requiring expensive hardware, have gaping security holes and all-in-all cost their failings end up costing the business dearly.<p>This blasé approach to group 1 development is very common in the so-called &quot;enterprise world&quot;, but that&#x27;s just because the organizational elite over there (as opposed to most of Silicon Valley) is not even tangentially technical. That&#x27;s understandable: take a CS-driven company like Google or an engineer-driven company like Facebook, and you&#x27;ll get the mirror image. But there&#x27;s no cold truth about programming skill not being a big deal here. Group 1 development is at the very least as demanding a skill as plumbing."
2016-06-26T23:47:53.000Z,I was tricked on Facebook into downloading an obfuscated script,"* Disclosure: I used to work for Facebook&#x27;s security team and focused on threats that impacted users on the platform. *<p>The post outlines in some detail a common attack done by some actors known as BePush&#x2F;Killim. I made a request for help in fighting these clowns months ago on a private security working group. Here&#x27;s the post below which outlines a good amount of detail about the hacks and motives. If you are interested in tracking these actors yourself, it&#x27;s pretty easy once you find one of their command and control servers.<p>Example: <a href=""https:&#x2F;&#x2F;www.passivetotal.org&#x2F;passive&#x2F;userexperiencestatics.net"" rel=""nofollow"">https:&#x2F;&#x2F;www.passivetotal.org&#x2F;passive&#x2F;userexperiencestatics.n...</a><p>From there, we can see the actors are using Cloudflare to obfuscate their infrastructure, but we can make a pivot based on the WhosAmongUs IDs (dsafagegg2 [1] and dsafagegg [2]) in order to find more websites owned by these guys. It&#x27;s a rats nest that extends to hundreds of domains registered weekly. Servers are typically hosted in places where legal action is difficult meaning the attacks seldom stop or go down completely.<p><pre><code>  [1] https:&#x2F;&#x2F;www.passivetotal.org&#x2F;trackers&#x2F;WhosAmungUsId&#x2F;dsafagegg2
  [2] https:&#x2F;&#x2F;www.passivetotal.org&#x2F;trackers&#x2F;WhosAmungUsId&#x2F;dsafagegg
</code></pre>
-----------------------------------------------<p>As promised, below is a quick high-level summary of the malware outlined in the subject. We&#x27;ve been dealing with the malware for months and while some would call is spam, we consider it malware simply because any of the executables or Chrome extensions could be changed to steal passwords, credit cards or every document off a system. We welcome any help in dealing with these actors and would also be interested in new ways to combat malicious extensions, both Chrome and Firefox as those are only increasing in usage.<p>If you would like more information on the technical details of the binaries, extensions or other loaders, feel free to shoot me a message. If there&#x27;s enough interest, I will just spam the list, but would prefer to keep this to the higher level points, so others gain a better understanding of the threat.<p>-= Summary =-<p>BePush is a set of Turkish-based actors who use innovative techniques to spread malicious code and spam through social networking sites and ad-based networks. Those involved in the development of BePush malware are constantly adjusting their TTPs to account for changes in detection or disruption. Actors favor multiple levels of obfuscation through the use of short-url redirectors, third-party hosting providers and multi-stage payloads. Despite high infection rates, local law enforcement has yet to take an interest in pursuing those actors involved.<p>-= Infection Process =-<p>Based on our logs, primary infection processes tend to occur through direct traffic, followed by Facebook and various ad providers. Shortened URL links are shared among users which typically traverse through a series of redirects to a landing page mimicking Facebook infrastructure and using porn as a lure to install a plug-in. Depending on the attacker behavior, payloads may be delivered in the form of a Google Chrome extension (hosted within the store) or through an executable (likely AutoHotkey, but could be Pyinstaller based) that later replaces Chrome with a version of Chromium with their malicious extension.<p>Once installed, malicious code will make use of the Facebook Graph API in order to make requests&#x2F;posts on behalf of the infected user using a stolen access token. In order to establish a high infection count, the malicious code will often create pages with malicious links, post statuses&#x2F;comments to the user&#x27;s friends and spam within certain application pages. Once the spreading routine completes, the process generally begins again with the infected user&#x27;s friends.<p>-= Motives and Capabilities =-<p>It appears the primary motivation for the BePush actors is the money gained through the sale of Facebook likes, followers or various ad-network and affiliate partners. In some cases, Facebook observed BePush actors including a bundled bitcoin miner, but it never appeared to gain much popularity.<p>From a capabilities perspective, actors involved with BePush appear to pay attention to how their code is detected. When numbers begin to dwindle, changes to the code or 3rd-party providers are made. Actors demonstrate a level of understanding in .Net programming, Python, JavaScript and techniques used to detect spam. We have also observed the actors repurposing browser exploits, but we never saw these used against users.<p>-= Third-Party Provider Usage =-<p>BePush favors the use of free and open infrastructure in order to keep their campaigns alive long enough to get a strong infection foothold. The following providers have been observed in some capacity:<p><pre><code>  - Amazon AWS - Used for hosting content
  - Dropbox - Used to host binaries
  - Box.com (http:&#x2F;&#x2F;box.com&#x2F;) - Used to host binaries
  - Bitly - Used for redirection
  - Tinyurl - Used for redirection
  - Godaddy - Used for redirection
  - WhosAmungUs - Used for campaign tracking
  - Stellar - Used for bitcoin wallet hosting
  - Imgur - Used for redirection 
  - Dot.tk - Used for redirection
  - Google - Used for redirection, Chrome extensions and binary hosting
  - CloudFlare - Used to obfuscate real infrastructure
  - Microsoft Azure - Used to host binaries
</code></pre>
-= Detection and Research =-<p>BePush has a limited set of providers they prefer to use and through industry relationships, we have been able to put pressure on the attackers. Here are a couple items we noticed when doing disruption work that helped in making a larger impact against the group.<p>Using passive DNS data to identify other domains sitting on the same IP address (these guys don&#x27;t use a lot of unique servers)
Use ESET (<i>Facebook</i>) or Microsoft (<i>Kilim</i>) AV signatures to identify new binaries being used
Polling whos.amung.us (<a href=""http:&#x2F;&#x2F;whos.amung.us&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;whos.amung.us&#x2F;</a>) tracking pixels in order to identify&#x2F;gauge recent campaigns
Reaching out to 3rd-parties with domain and hash combination for takedown<p>-= Reference Hashes and Domains =-<p><pre><code>  www[.]filmgetir[.]com

  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;9e4484240df6e891b2a07c1ff2345e0864dd8b54e005c58388c6556cdc7cc120&#x2F;analysis&#x2F;

  www[.]kingtr[.]click

  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;9e4484240df6e891b2a07c1ff2345e0864dd8b54e005c58388c6556cdc7cc120&#x2F;analysis&#x2F;
  www[.]pornokan[.]com

  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;c5eeef4da2c64e8633b1f00745fecb0b692be27d4b615df086201754b07ebe60&#x2F;analysis&#x2F;
  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;3566452da48ba0fa31b11deae561b4d5f2a1385e83fd5537a021e75b649664b6&#x2F;analysis&#x2F;
  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;1a0163780f07aeaafd9e94fbe628b3f354b25afbec1f7c6e6e401cc7c06d909a&#x2F;analysis&#x2F;
  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;b216915643628834acd60e7ae9647e51baca636d8b05ea66857d40c9d04172a8&#x2F;analysis&#x2F;
  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;80d9d1df0d859fe6759bba7077be1a15eea477774c91e789e9d5988f19f0a023&#x2F;analysis&#x2F;
  https:&#x2F;&#x2F;www.virustotal.com&#x2F;en&#x2F;file&#x2F;940bc772a2e301e15a326e667a318942dd840149afa4031245dd125c645330ab&#x2F;analysis&#x2F;</code></pre>"
2016-06-18T17:43:14.000Z,JSON Web Tokens vs. Sessions,"With JWT, you have the option of stateful or stateless. Stateless gives you cheap federation (any server can authenticate a token issued by another server), but you lose the ability to handle revocation without some sort of statefulness introduced (a redis cache with revoked token ids for example). Stateful is basically a non-cookie based session.<p>One possible alternative to enable auto-renewal is to issue a new token with every request, and manually bake in the persistence of the token into your front end client.<p>In my own system, I have login with facebook, which submits current FB auth tokens with every request, after which I issue my own app token with all the necessary authorization information for my business logic. Whenever the app token expires, I attempt re-authentication using facebook login, and if successful I send back an updated app token. The front end client has logic built in to compare and swap app tokens if they change and persist in sessionStorage.<p>It&#x27;s pretty hacky. I&#x27;m a little worried about vulnerabilities that I might be introducing. I luck out in that I don&#x27;t have a public API which would force the client to implement my front end logic. But it works, for now."
2016-06-06T18:57:25.000Z,Joshua Bloch: How to Design a Good API and Why It Matters,And Facebook showed clearly that you can change your API daily and no one cares.
2016-06-02T15:44:01.000Z,Twitter Is Betting Everything on Jack Dorsey. Will It Work?,"We&#x27;re saying the same thing here, in premise.  There is some value to be gained from a development ecosystem, undeniably.<p>The difference between what I&#x27;m saying is that the sheer magnitude of <i>unmonetized</i> Twitter Web users makes whatever small fish monetization increasing Twitter use with their integration look like chump change.<p>Now, there are several big players such as Periscope, Vine, Meerkat, that could have benefitted Twitter greatly from offering a development ecosystem.   But there are two reasons why they wouldn&#x27;t:<p>1) Twitter, like Facebook, is big enough - or, more accurately, <i>are expected to be big enough</i> - to be in the &quot;acquirer&quot; phase where they derive more value <i>competing against</i> and acquiring than <i>playing with</i> these popular new services.   
However, we&#x27;ve seen much of the industry being overvalued and some of us believe a small company can do more, faster, on a technical level than a big company due to bureaucracy, so expectations aren&#x27;t always matching up to reality.<p>Vine and Periscope were eventually acquired by Twitter.  And Meerkat was forced to pivot.<p>2) There are cost-benefit analyses that neither you, nor I, are privy to which found developing and maintaining an API by relatively highly-paid employees not worth the benefits seen by its integration by other companies.<p>&gt; Many startups or businesses in general look elsewhere for the information that is available on Twitter.<p>Are you sure of this?   Businesses and other startups alike <i>still</i> use Twitter for <i>engagement</i>, and there is great information to be pulled from Twitter, assuming they have the ability to act on the metrics available."
2016-05-29T19:09:19.000Z,Scaling Mercurial at Facebook,"This seems to be an old article (January 7, 2014) anyone know if Facebook still use Mercurial?<p>About securing different parts of the repo, the mercurial server actually doesn&#x27;t have any user authentication! You are meant to do that yourself with SSH or a web server, where you should be able to have more restrict access to some special folders.<p>About using a single repo, it does make sense to have all code that interact with each other at the same place. Imagine changing a variable name in some API and at the same time update all usage of that name in the whole codebase. And imagine the bureaucracy and people management for just making a variable change if there where separate repos witch you might not even have access to."
2016-05-29T09:35:18.000Z,"Gchat Was the Future of Messaging, but Google Didn’t Know","Strange thing is this was always the case and just recently started to change. MSN API was a joke, you needed a desktop environment on the server to run the actual client to use SOME of the functionality. Nearly the same with Skype. Gchat removed Jabber pretty fast. Facebook chat also removed the outside functionality of their XMPP clone. Whatsapp is not even able to provide a web client, but only a weired bridge because they crippled to xmpp they are using way to much. No experience with the Apple services but i assume they are similar.<p>Next to that we always had open protocols, that worked perfectly, had plenty of clients and apps and nobody used them.<p>It is a stupid market."
2016-05-28T11:10:45.000Z,Scaling Mercurial at Facebook,"I generally see two reactions to the &quot;one codebase to rule them all&quot; approach (used by Facebook, Google, et. al):<p>1. Holy god why would you let your code grow to such a massive, interdependent scale? Just release everything separately and versioned so that breaking changes don&#x27;t affect everyone all at once. The idea of git being a bottleneck is absurd and you are using it wrong.<p>2. This is a very reasonable, practical approach to sharing code across a company. It reduces siloing and ensures that major refactors can happen in one pass without a ton of coordination. Better to fix the version control system than waste endless resources refactoring millions of lines of code.<p>Both reaction is valid. Having worked in both styles of codebase, I recognize that there are trade-offs in either case. The optimal solution depends on the project and the team.<p>Sometimes the path of least resistance--that is to say, the path to getting things shipped and, in turn, making money--is to let the codebase grow organically and worry about cleaning up any messy interdependencies later, once you have a better idea of what code you even need to keep around. In this scenario, it&#x27;s important to recognize that developer efficiency is going to be an uphill battle in the long run, but if you are proactive about maintenance and tooling improvements then this approach can still be relatively painless.<p>Other times, especially when you&#x27;re working on a tried-and-tested product with a clear API and a dedicated team, it can be productive to split it out and let the team manage their own versioning and releases. This becomes especially useful if the product is open source. (For instance, I wonder how Facebook manages its open source releases relative to its shared Mercurial codebase.) In this scenario, developer efficiency is usually less of a problem, as proper use of versioning can ensure faster, more agile updates to each product. But the downside is that your company as a whole can end up in a kind of versioning hell, where every project depends on a different version of every other project, and keeping everything up to date can require a huge amount of coordination.<p>So, in the end, pick your poison. My reaction, years ago, was more along the lines of #1, but I used to be much more of an idealist earlier in my career."
2016-05-18T19:52:33.000Z,Firebase expands to become a unified app platform,"As a current Firebase customer, I&#x27;m pretty thrilled about all this (especially since I was afraid Google would pull a Facebook here). However, there&#x27;s quite a bunch of API changes and absolutely no info about how long the old JS library, endpoints, etc etc are to keep working. Should I get stressed out?"
2016-05-02T00:52:49.000Z,The Feed Is Dying,"But making the algorithmic feed the default, alone, is enough to kill the platform. For the mere fact of nudging, and human laziness. It will just make the shit rise to the top, instead of the hidden gems that make Twitter golden. Twitter has to be one of the most poorly run tech companies, outside of Yahoo. They changed their API token limits, and destroyed 3rd party clients. They bought TweetDeck and then utterly destroyed it.<p>Live data is their product, but they bury it with stupid business decisions; utterly baffling. They tout MAUs during their conference calls (which they always miss), but that has nothing to do with their product. Their product has some of the top content providers, providing unique content in real time. Facebook can&#x27;t say that, no other platform sans Snapchat can say that. Facebook has figured this out and that&#x27;s why they are rolling out offerings like Paper. Twitter doesn&#x27;t get it."
2016-04-19T17:11:54.000Z,Facebook Chef cookbooks,"Using custom resources, like LWRPs, doesn&#x27;t provide the same flexibility. Most of the time you fall into making something which works akin to the `cron` internal resource which doesn&#x27;t provide managing an entire system but instead a single entry which means you get neither automatic cleanup nor automatic fall back [to an earlier value]. It also means there&#x27;s no good way to stack configs. You can (obviously) build a resource which manages the entire file&#x2F;subsystem (poise does this, for example), but even then, you don&#x27;t get the ability for everyone to override things later in the run... and we want the final service owner to be able to change anything anyone before them has set. It&#x27;s a key part of being able to scale people... and for us to have such a small core chef team (4-5 people).<p>In addition, using simple hashes and arrays makes it much simpler for your average software engineer to make changes they want - they have to learn little to no Chef in the simple case... even not knowing ruby they can figure out variable assignments.<p>The monolithic repo works well for us given we use grocery-delivery (github.com&#x2F;facebook&#x2F;grocery-delivery). We have no environments (see my ChefConf keynote in 2013 for a full breakdown of how we do run things) and no cookbook versioning... we run directly off of head. We use a combination of taste-tester (github.com&#x2F;facebook&#x2F;taste-tester) for general testing and and sharding (see `node.in_shard?` and `node.in_flexible_shard?` in the `fb_helpers` cookbook) to control the speed of rollout of risky changes.<p>To be clear we use no precedences at all except `default` - using other precedences will in fact likely break our model since it causes the node-read code to merge things rather than treating it like a single hash. The model here is last-writer-wins always.<p>As for tests, people consuming these cookbooks are simply assigning variables, so there&#x27;s not a lot to test in a wrapper cookbook. &quot;Did the attribute get the value I assigned it&quot; doesn&#x27;t seem like a useful unittest... that should be covered by Chef&#x27;s unittests itself. For our more complicated cookbooks we&#x27;ve unit-tested the API and where we could we released those (see fb_fstab), and we have some other unittests we haven&#x27;t yet been able to release that hopefully we&#x27;ll come back around to.<p>Hope that helps,
- Phil"
2016-04-17T22:05:44.000Z,Pagination with rel=“next” and rel=“prev” (2011),"As fbonetti already said, LIMIT is the canonical way to do it with SQL databases (I would just add to their comment that you should ensure a positive page_size and offset, because &quot;LIMIT -5&quot; is invalid in at least MySQL, and to limit the page size to some sensible values).<p>For NoSQL, specifically (only?) CouchDB, you start iterating from a given key (in SQL, this would effectively be &quot;WHERE id &gt;= $start ORDER BY id ASC LIMIT n&quot;).<p>This difference is why I would recommend, especially for paginated REST APIs, to provide links to the next&#x2F;prev pages, so API clients can follow these links without thinking about how pagination is accomplished exactly. To prevent people from guessing the inner workings and working around your links, you can encode the parameters in a &quot;cursor&quot; (so instead of ?pagesize=20&amp;page=10 you could have ?cursor=base64encode(&quot;20,10&quot;) (SQL) or ?cursor=base64encode(&quot;$startKey&quot;) (NoSQL)). IIRC Facebook does it this way. Encrypting or authenticating the cursor is IMHO overblown here, given cursor values can be easily validated and rejected if fiddled with.<p>Using an opaque cursor also gives you the ability to change how pagination works without breaking existing API clients.<p>If you plan for lots of data and many pages, think twice before outputting links to all pages (on a website) or outputting the total number of elements (in an API). COUNT(*) on InnoDB is slow and I heard it&#x27;s not the quickest thing in NoSQL databases either."
2016-04-09T01:45:27.000Z,Facebook quietly deprecated their Python/Ruby libraries for Instagram API,"Instagram is by far one of the easier APIs to use (among the social media services)...I&#x27;ve never used a client library for it, in Python nor Ruby.<p>In Ruby, the best API wrappers (or at least, the ones I used back in the day) for Twitter and Facebook are maintained independently:<p><a href=""https:&#x2F;&#x2F;github.com&#x2F;sferik&#x2F;twitter"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;sferik&#x2F;twitter</a><p><a href=""https:&#x2F;&#x2F;github.com&#x2F;arsduo&#x2F;koala"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;arsduo&#x2F;koala</a><p>The koala gem for Facebook is a godsend...the FB API and models are not trivial...and that&#x27;s before trying to keep up with the many and frequent changes to the API spec. It&#x27;s hard to imagine that FB would put the resources into continually maintaining that gem if it were an official gem...not when (I assume) so many more of their API consumers use iOS&#x2F;JS&#x2F;Android."
2016-04-06T22:54:01.000Z,Apply HN: Brightwork – Making APIs More Intelligent,"Another great use case is Analytics. On a recent project we started out using Facebook Analytics, switched to Google (code change everywhere) then wanted to move to MixPanel (again lot of code change). Would be great if there was a single API that allowed me to change the backend API seamlessly. Essentially an abstraction layer."
2016-03-30T11:10:18.000Z,React Native for OS X,"React Native (RN) is not for all apps, it has its uses if what your app does is mainly text delivery, example news app. One of the more complicated app that uses React Native is Discord for iOS (<a href=""http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;35309471&#x2F;is-discord-mobile-app-really-built-with-react-native"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;35309471&#x2F;is-discord-mobil...</a>), a Slack like chat app. That was then but I&#x27;m not sure the latest version is still RN heavy. You can actually build a native iOS app, and then add RN as part of your app. The tweet by Discord that said they are using RN is deleted.<p>Some reservations to choose RN: RN is possible due to the JavaScriptCore framework build by Apple. It is the bridge between JavaScript code and Cocoa API. Apple designed this so that you can use JavaScript as scripting language for Cocoa. The popular Sketch for OS X is using the precise JavaScriptCore to power its plug-in scripting feature. I guess Apple never have thought JavaScriptCore could be used the way RN does. Choosing RN means your app is relying on Apple&#x27;s decision on JavaScriptCore API. Someone please enlighten me if RN is still possible or not if Apple remove JavaScriptCore.<p>JavaScriptCore opens up the Cocoa API, but does not give you a JavaScript ready API. So RN has to implement the bridge internally. So when iOS 10 is released, you will have some lag waiting for new features or changes to be supported by RN. I guess this is common problem to all cross-platform framework.<p>In order to implement RN for Android, Facebook implements its own JavaScripCore for Android. I have no Android experience, but what I read is RN app for Android is not performing as natively as its iOS counterpart.<p>If your business rely on all Apple&#x27;s platform, then choosing RN does not help as there is no RN for watchOS and tvOS.<p>React Native will make app manager and web-dev team happy, but not those who treasure the last mile UX experiences. But is could also be useful for those startups creating their first MVP. Get app release fast and then change to native codes when you got the traction. Is this good or bad startup advice?<p>It will be a different ballgame if Facebook announce they are moving to use 100% React Native for Facebook for iOS app."
2016-03-17T00:57:32.000Z,GraphQL Deep Dive: The Cost of Flexibility,"So basically you starts with React in the client. Of course React is new and shiny yet mandates that you do things differently when dealing with mutable data, so you need to adopt Redux. It creates a &quot;impendance mismatch&quot; with how REST API work, so you need to use GraphQL instead of REST endpoints, now you get that N+1 problem with RDBMS and GraphQL , so you need to add DataLoader on top ? what next ? having to ditch RDBMS and use facebook&#x27;s solution whatever it is ? All I see is React generating an avalanche of issues and impedance mismatches that lead to having to change server-side code and potentially the datastore, just to fit a front-end js view library ?<p>&gt; For a simple RESTful API endpoint logic, it’s easy to analyze, detect, and solve N+1 issues by enhancing the constructed SQL queries. For GraphQL dynamically resolved fields, it’s not that simple. However, there is one possible solution that Facebook is pioneering for this problem: DataLoader."
2016-03-08T07:48:12.000Z,Stevia: Human-readable auto-layout in code,"I can see that now. Certainly anyone who worked with the HTML-based iOS components Facebook had back in the day was in for a shock later. I don&#x27;t recommend using any iOS libraries you aren&#x27;t prepared to upgrade&#x2F;replace later -- and this includes Apple code too! Plenty of Apple APIs change every year, so... I&#x27;d hope somebody takes up the cause of updating this for as long as the API proves useful. :)"
2016-03-04T17:47:39.000Z,Startup bank Mondo raised £1m crowdfunding in 96 seconds,"- Paypal in 1999?<p>Didn&#x27;t know they were free in 1999. It doesn&#x27;t look like banks will start charging for transfers though, it&#x27;s certainly not free to get customers. It can also be withdrawn as cash immediately as its received ;), even today Paypal takes a bit of time to withdraw outside of the UK.<p>&gt; Nutmeg<p>Not easy to do as it has to be a seperate entity. Im working on a startup like Nutmeg. Also the 2008 landscape changes in what Banks want to be makes them avoid this space. Investments are a bit investment bankingey for the ordinary person.<p>&gt; Transferwise<p>These eat into their margins, why would they do that? They already have customers willing to pay more. Transferwise can&#x27;t get everyone as an audience that most banks serve, though it will get some of them.<p>&gt; Zopa<p>Banks are apparently participating in these marketplaces. Granted they haven&#x27;t created any marketplaces, though.<p>&gt; Yodlee supplies APIs already<p>The bank&#x27;s API allows transfers, takes 1 second and doesn&#x27;t need a username or password. No need for those token things either. Yodlee&#x27;s big problem is they screen scrape (or use the banking api the bank provides which you can get without paying) and it can take up to 5 mins to do this.<p>They use OAuth so its like the &#x27;login with facebook&#x27; type authentication where the authentication is delegated back to the bank.<p>Banks do innovate but they&#x27;re interested in things that improve banking and focusing on that. They&#x27;re not interested in the old pre 2008 model of banking.<p>Yeah thinking about the 1.5% fee thing they probably don&#x27;t have that because its routed through Wirecard (German firm) and they&#x27;ve just put mondo branding on it.<p>I hardly think the banks are slow. I&#x27;ve lived in Australia, South Africa &amp; Canada. By any measure the UK banks (except a few) are really quick in adapting to change. If ours are slow the ones there are Glacial.<p>I guess if you look at Fintech in breadth, the big players aren&#x27;t interested in doing everything, just a handful of small things really well and very profitably. It&#x27;s a bit harsh to say they&#x27;re not doing enough faster by judging them against non banking startups.<p>I guess it seems like alot of these services are unbundling banks but it&#x27;s just a handful like Transferwise. The &#x27;core&#x27; banking features are hard to unbundle. I guess P2P lending is sort of a unbundle in a way but its at a different vertical.<p>To put it another way I guess: What are UK banks missing that is available elsewhere that would improve banking services (besides customer support), or even more generally?"
2016-03-03T16:58:09.000Z,Visual Studio Code for Go,"Hi. I know C# in amateur fashion and Go professionally. I think a lot of people here will give you a very positive review of Go. Since they&#x27;ve got that covered, let me tell you what you&#x27;re giving up from C# or F# and why I won&#x27;t use Go. Maybe you can form a balanced conclusion from the aggregates, because I find Go to be very polarizing.<p><i>Concurrency</i><p>Async: Go uses channels for all concurrency. Period. This mechanism, is sort of like half of the Erlang Actor philosophy, but even more lightweight. Channels and goroutines are constantly coming into and out of existence and you feel no real shame doing it. Even simple tasks often need them becuase Go&#x27;s I&#x2F;O libraries tend to be async-first.<p>Compared to C# and F#&#x27;s async, I think you will find this to be very different, but not particularly better in terms of performance. F# offers a very similar abstration with very similar performance characteristics and C# async methods are using a very similar mechanism under the covers to provide closure over computation chains in what amounts to a kind of effectful state monad. Don&#x27;t sell your home team short on this front; MS&#x27;s work there is cutting edge.<p><i>Error Handling</i><p>In daily programming, Go&#x27;s weakest story is error handling. While many people rightly cricisize try-catch error handling as a primitive and error prone mechanism, the Go solution is to say, &quot;We all hate C but actually C erorr handling was fine so long as you have multiple return values at the syntactic level.&quot; So you often return a success value (which is nullable) and an error value (which is nullable) and then ask the caller to check on the null.<p>This is basically error code checking. People will say it isn&#x27;t, but really it is. It really is. And unlike some other langauges Go provides no facilities for &quot;chaining&quot; these operations. So you end up writing if err != nil { ... } over and over.<p>In the case of chained I&#x2F;O operations, this is really tiresome. It also often leads to code repeating or some somewhat convoluted dispatch logic.<p>Go Error values also suffer from Go&#x27;s other issue, it doesn&#x27;t have an extensible type system. Instead it has &quot;interfaces&quot;. In practice, what this means is that it&#x27;s very difficult to expose new error types or give your clients good ways to dispatch on them. While this means error handling code is lightweight, it also often means it has to do silly things like regex and error message string to find out what a specific failure was.<p>Some people value that approach. If you&#x27;re writing an executable it&#x27;s actually good, becuase it&#x27;s probably better to fail fast in a recognizable way. But if you&#x27;re writing a library and offering OTHER people that facility you can&#x27;t support them well (and you will not be well supported by Go libraries).<p><i>Build Tooling</i><p>Go&#x27;s general toolchain is solid and its compiler is wicked fast. But its build story is still really, really bad. Go originally had this mountain of filesystem around every project that was tricky and error prone to share around projects.<p>With recent releases, they&#x27;ve moved to something that resembles Ruby On Rails&#x27;s &quot;vendor&quot; approach, where a sub directory contains a whole checkout of each dependency&#x27;s code. This is actually a pretty major improvement (in part becuase it works better with Github, which is Go&#x27;s primary distribution mechanism). But even with this change, managing a codebase over time is error prone. Unlike Maven and Nuget, there is no enforced concept of version releases (nor discipline around snapshotting) in Github. So if the maintainer of the library has poor discipline (or if there is code poorly tagged during a maintainer change), it can be difficult to get the exact version of a library you want with the exact bugfixes you need.<p>Google&#x27;s response to this is, &quot;We don&#x27;t have this problem because everyone at Google always keeps &#x2F;master clean and we basically never make breaking API changes.&quot; But if you talk to them internally, the reality is more what you&#x27;d expect. Sometimes a lot of time is lost fixing that.<p><i>Everything else I wanted to say (aka &quot;Conclusions&quot;)</i><p>On balance, Go is a good environment for making executables. But a lot of why people like it stems from negative experiences they&#x27;ve had with scripting languages and their poor packaging story, Java and its problems keeping up with other managed language runtimes (and oh god its package process is just silly and antiquated).<p>You&#x27;ve already got cutting edge concurrency, static builds, a lightweight crossplatform runtime with CoreCLR, and pretty fast cross-compilation. For you, what you might find refreshing is how very clean and unified the Go langauge is. It is many things, but one thing it excels at appealing to is the pythonic there-is-one-way-get-in-line crowd. It is small, purpose-built, and singularly uncomplicated. C# has a &quot;history&quot; and &quot;legacy feature support.&quot; Things like delegates that have fallen out of fashion now but are still lurking in the codebase or backing other more modern features.<p>If you want to try the concurrency model but don&#x27;t know if you wanna commit to a whole new runtime, do try F# if you haven&#x27;t yet. You can get great performance and the channel based concurrency out of it, and I think most people would agree its error handling is light years ahead of what Go offers.<p>If you&#x27;d like to try a totally new language with really cool concurrency semantics on a purpose-built runtime, can I recommend Nim-lang.org? Nim is <i>amazing</i>. It&#x27;s got one of the most ambitiously cool ideas I&#x27;ve seen for micro-optimized concurrency code since reading Marlow&#x27;s paper on Haxl for facebook."
2016-03-02T00:16:49.000Z,The Sign Up with Google Mistake You Can't Fix,"&gt; What is truly scary is that the banks and financial institutions have not implemented OAuth. Currently, financial data is provided to third party apps via aggregators, like Plaid and Yodlee.<p>Hi. I was the CTO of Level Money, that ultimately had a meta-aggregation platform on top of all the major aggregators. We were acquired by Capital One. Disclosures: complete.<p>Can I just put out there: every major FI has talked about OAuth2. We all know about OAuth2. It&#x27;s entirely within our technical capabilities to make an API and then allow OAuth2 access. We could even make said access public. The &quot;can they&quot; is answered: yes we could. Yes, we have prototypes.<p>And yes, there are non-technical obstacles. Pardon me while I Nod Dance &amp; Amble.<p>But there is a larger question about the aggregation problem. Banks are rightly concerned that if they do open these up, they&#x27;ll be consumed wholesale by the major tech companies. You could imagine a world where Google partners with your bank to make a pretty amazing experience, but in the process it&#x27;s almost certain that Google would have a significant upper hand. Most banks (even C1360, which I and many other people are working constantly on modernizing) simply aren&#x27;t ready to work with giants like Microsoft, Google or Facebook as equals. That, sadly, will take years as these organizations realize they have to do this.<p>We&#x27;re all in sort of a slow motion race towards this goal. Slow motion compared to the outside world (as I am all to keenly aware), that is. Internally, the process by which we do this is hugely complicated by US law and regulation. There is this wonderful thing where &quot;regulatory capture&quot; backfires and then you&#x27;re imprisoned. For every thing that a bank charter enables, it closes off another 2-3 things that never mattered until things started being judged by their slickness in a mobile app context.<p>As for disconnecting from aggregators, let me tell you as an insider what you can do. Change your password. No really, change your bank password. EVERY major aggregator has a flow that requires they respect this at a technical level. If that fails, it&#x27;s on your bank and you should shout at them VERY loudly.<p>But before you do, make sure you are ready to prove yourself as a banker. What will happen with most aggregators is that they&#x27;ll have to decide, &quot;is this person actually gone or is this stupid web scraper just having a bit of a problem?&quot; They&#x27;ll try and log in again, at least once in most cases. If you have hooked up multiple services (or the same service multiple times), these will trigger account lockouts just like any failed web login would."
2016-02-27T23:15:28.000Z,Upgrading from React 0.11.2 to 0.14.7 in 347 easy steps,"React is a library, not a Framework, and the core library itself is actually very small. In fact, part of the recent changes (splitting React into React and ReactDOM) have been in order to keep the core React library as small as possible.<p>React itself doesn&#x27;t do very much at all, but when you&#x27;re using React, you&#x27;re using almost everything React has to offer, and then can choose what you want to add on top of that.<p>Take a look at the top level API [1] and compnenent API [2]. This is React. It&#x27;s small, and it&#x27;s compact - there&#x27;s not a lot to it.<p>[1] <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;top-level-api.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;top-level-api.html</a><p>[2] <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;component-api.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;component-api.html</a>"
2016-02-20T00:10:27.000Z,New Versioning Scheme for React,"&gt;That&#x27;s a maintenance nightmare!<p>Are you using React? I’m curious if this is your feedback on the pace of changes, or if this is just a guess.<p>In reality React API surface area is pretty small so most changes are automated by codemods. Codemods are programs that modify your source code. They work pretty well because Facebook uses them on a large scale.<p>Not everything is covered by codemods but generally the feeling I get from talking to the community is that React moves at an acceptable rate, and changes take about a day to apply once a three months for most apps. Deprecation warnings also give you several months to fix use cases that will be unsupported in the next version.<p>In return, this allows React to become a better library and not stagnate. I see your point <i>in theory</i> but please talk to the people using React, and you might find that it is not a problem in practice."
2016-02-20T00:05:43.000Z,New Versioning Scheme for React,"Are you using React and voicing your concern? Or are you making a guess?<p>Every three months might be too often for a tool like curl. In case of React, the community seems to be happy with the tradeoff between moving forward and keeping the old code working.<p>You might want to ask a few people who use React to draw the conclusions. I talk to a lot of people in the React ecosystem, and so far the feedback I heard is that updating React has been the least of their worries, compared to some other libraries in the ecosystem which are far less stable.<p>Personally, I updated a fairly large (~1000 modules) app from React 0.11, to 0.12, to 0.13. After the ecosystem catches up and libraries release compatible updates (if they need to), it always took less than a day to upgrade. Doesn’t seem like a big price to pay for avoiding stagnation and actually improving the library.<p>And I wasn’t even using codemods which React team ships (and widely uses internally at Facebook). Codemods just convert your code through most of the API changes automatically."
2016-02-19T21:45:04.000Z,New Versioning Scheme for React,"You might want to take a look at the blog documenting the releases[1]. Breaking changes happen, but not more often than once in three months. Every breaking change is preceded by a deprecation warning in the previous release, and many changes are automated through codemods. And of course the API surface area is small which is why it’s possible to move fast without breaking things.<p>Don’t forget Facebook has a large React codebase so it cares very much about automating migrations.<p>If React switched to 1.0, with some breaking changes every three months, it would be 14.0 again in a couple of years. Then googling for tutorials would get confusing. Why not do that now?<p>[1]: <a href=""http:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog"" rel=""nofollow"">http:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog</a>"
2016-02-14T09:28:11.000Z,Douglas Rushkoff: I’m thinking it may be good to be off social media altogether,"Your experience is exactly like mine was 10 years ago, but ... we didn&#x27;t have facebook. We had icq, then AIM, and SMS. We could call each other. We went to hang out places and lived solidly in the moment. People were also in constant contact, but maybe spent a bit more time in their thoughts or reading books and magazines than they do now.<p>IMO nothing has changed except now we have someone trying to convince the world that all communication should go through them. We are human... the talking ape. There isn&#x27;t anything more basic than communication. Why should we send it through one company? What&#x27;s impressive is how easily people accept this; they think you&#x27;re an alien if you say you don&#x27;t use facebook services. Maybe that&#x27;s what you mean by philosophy. We need to develop our social immune system or we will be overrun by these robber barons."
2016-02-10T22:16:22.000Z,Twitter’s User Growth Goes Nowhere as It Meets Revenue Expectations of $710M,"I know there are theoretical alternatives to Twitter, but until the appropriate userbase is out there then they&#x27;re not truly viable alternatives. I know that&#x27;s a Catch-22, or a paradox, or whatever you want to call it, but that&#x27;s the sad reality for those of us that would like to leave the platform. So, in lieu of leaving, here are the features I feel like would help Twitter retain me as a user:<p>1. Bring back custom apps! Twitter is a <i>service</i>, and I want control over how I access that service. This would also take such a huge burden off of Twitter: don&#x27;t care about the super bowl? Use an app that lets you filter hashtags, piece of cake! So many features can be implemented on top of a service, with no extra effort from Twitter. I get that this could  conceivably enable filtering timeline ads, but seriously they can just pull API keys for apps that do that, it&#x27;s a non-issue.<p>2. Let me subscribe to ideas, not just people. If I <i>do</i> care about the super bowl, maybe let me turn on push notifications for tweets about it from people within my network for whom I otherwise do not have push notifications enabled.<p>3. Make chronological timelines a setting. Not an option, not a tab, a semi-permanently enabled <i>setting</i>. It&#x27;s the most annoying thing about Facebook right now, having to explicitly re-enable chronological timelines every week or so when Facebook has &quot;forgotten&quot;. As it stands, even that much is an improvement over Twitter&#x27;s proposed always-on non-chronological timeline.<p>4. Don&#x27;t nanny me unless I ask you to. There have been reports that Twitter has blocked notifications for @replied tweets because Twitter suspected the tweet would be offensive. I get that harassment is an issue and that Twitter was trying to be proactive, but make it an option. The user in this case was failing to be notified of tweets they <i>wanted</i> to see, and had no way to disable the &quot;feature&quot;.<p>5. Inconsistency foments distrust. If you want that blue check mark to mean something then you&#x27;d best lay out a solid and strict process for them. I&#x27;ve seen at least one person have theirs removed over unsubstantiated claims, yet more egregious offenders have kept theirs throughout. I&#x27;ve seen others go through the process for acquire their blue checks and they always seem to have different requirements. Some reported having to change their profile name to their real name, others said they had to put their actual photo on their profile."
2016-02-09T11:31:18.000Z,Why JavaScript and PHP Won the Web – Outspeaking,"PHP itself makes it impossible to design good code. I worked with PHP about 15 years ago, left for other platforms but occasionally had to deal with PHP, and since the last year I couch a team of PHP developers, so it&#x27;s part of my daily life understanding the language and it&#x27;s quirks. My honest opinion is that PHP didn&#x27;t change at all over the years. All the same bad smells are there, but not at the same places. The best description I&#x27;ve seen for this is in that old &quot;fractal of bad design&quot; post:<p>&gt; &quot;PHP is a community of amateurs. Very few people designing it, working on it, or writing code in it seem to know what they’re doing. Those who do grow a clue tend to drift away to other platforms, reducing the average competence of the whole. This, right here, is the biggest problem with PHP: it is absolutely the blind leading the blind.&quot;<p>This is so true it hurts, and unfortunately if you think &quot;it&#x27;s not like that, every platform has goods and bads, php works for me, yadda yadda yadda&quot; you&#x27;re in the amateur group. You need to work with other platforms for real to understand this. It&#x27;s not &quot;every platform has issues&quot;, it&#x27;s more like &quot;every platform has issues, and then there is php, in a different category with much deeper problems&quot;.<p>This is not about preferences or tastes either. It&#x27;s just about looking around and seeing how common problems have already been solved. PHP7 has good exceptions, yay! Except they should have been there for 20 years. It was already a <i>very solid concept</i> back when PHP 1.0 was released. ES3 implemented exceptions correctly in 99 for god&#x27;s sake. Every other language did too, PHP is the only kid in the block that took 20 years to understand what exceptions are supposed to mean in the language.<p>I could point other small things like the new DateTime API being a joke, mysqli is still supported and still converts typed data to strings, terrible encoding support, pure byte strings instead of unicode strings, inconsistencies in implementations between OSs, the compiler still acting differently depending on php.ini settings, but in the end, it all boils down to bad design.<p>Facebook&#x27;s Hack fixes the PHP language for real in strict mode, and that is the work of real engineers thinking about stuff. PHP7 is still the same old people trying to get around without looking at proven solutions anywhere else.<p>And that&#x27;s why you can&#x27;t design good code with PHP7. It&#x27;s like trying to design a good house made of turd. Doesn&#x27;t matter how much you design it, in the end it will still smell terrible."
2016-02-09T11:31:18.000Z,Why JavaScript and PHP Won the Web – Outspeaking,"PHP itself makes it impossible to design good code. I worked with PHP about 15 years ago, left for other platforms but occasionally had to deal with PHP, and since the last year I couch a team of PHP developers, so it&#x27;s part of my daily life understanding the language and it&#x27;s quirks. My honest opinion is that PHP didn&#x27;t change at all over the years. All the same bad smells are there, but not at the same places. The best description I&#x27;ve seen for this is in that old &quot;fractal of bad design&quot; post:<p>&gt; &quot;PHP is a community of amateurs. Very few people designing it, working on it, or writing code in it seem to know what they’re doing. Those who do grow a clue tend to drift away to other platforms, reducing the average competence of the whole. This, right here, is the biggest problem with PHP: it is absolutely the blind leading the blind.&quot;<p>This is so true it hurts, and unfortunately if you think &quot;it&#x27;s not like that, every platform has goods and bads, php works for me, yadda yadda yadda&quot; you&#x27;re in the amateur group. You need to work with other platforms for real to understand this. It&#x27;s not &quot;every platform has issues&quot;, it&#x27;s more like &quot;every platform has issues, and then there is php, in a different category with much deeper problems&quot;.<p>This is not about preferences or tastes either. It&#x27;s just about looking around and seeing how common problems have already been solved. PHP7 has good exceptions, yay! Except they should have been there for 20 years. It was already a <i>very solid concept</i> back when PHP 1.0 was released. ES3 implemented exceptions correctly in 99 for god&#x27;s sake. Every other language did too, PHP is the only kid in the block that took 20 years to understand what exceptions are supposed to mean in the language.<p>I could point other small things like the new DateTime API being a joke, mysqli is still supported and still converts typed data to strings, terrible encoding support, pure byte strings instead of unicode strings, inconsistencies in implementations between OSs, the compiler still acting differently depending on php.ini settings, but in the end, it all boils down to bad design.<p>Facebook&#x27;s Hack fixes the PHP language for real in strict mode, and that is the work of real engineers thinking about stuff. PHP7 is still the same old people trying to get around without looking at proven solutions anywhere else.<p>And that&#x27;s why you can&#x27;t design good code with PHP7. It&#x27;s like trying to design a good house made of turd. Doesn&#x27;t matter how much you design it, in the end it will still smell terrible."
2016-02-07T04:33:46.000Z,How We Release So Frequently,"All the principles in here sound exactly like what is SOP at Google (and probably Facebook and others). It&#x27;s a pain in the butt sometimes, especially when making schema changes, but ensuring everything works properly even when you have multiple versions running in production can really help with confidence in making changes.<p>You do have to think several steps ahead when making big changes; the (internal-only) project I work on is in the process of completely changing our DB schema and we&#x27;re redoing our API completely as well.  We&#x27;re attempting to keep our old API running in parallel while migrating literally everything underneath it, which is a fun challenge. It results in a lot of what can feel like busywork, but when the alternative is bringing down your service temporarily, it&#x27;s worth it. An hour of planned downtime to do an offline migration can easily turn into several days when Murphy strikes. That&#x27;s OK when you&#x27;re first building a system, but once anyone is relying on you to get their work done, it is just pure pain."
2016-02-03T22:12:47.000Z,How to Survive an Acquisition,"When I went into Facebook&#x27;s bathroom, at eye level over each urinal was posted a weekly newsletter, which talked about changes to their PHP API."
2016-02-03T21:32:42.000Z,On Your Cute Release Notes,"Writing release notes for consumer software doesn&#x27;t make sense. They are a throwback to boxed software and should be abolished:<p>1. With A&#x2F;B testing and server-side feature flags they don&#x27;t reflect what the user will see.<p>2. With technology like React Native and PhoneGap changes are decoupled from shipping an updated ipa&#x2F;apk.<p>3. With most apps shipping quickly (some every 2 weeks) localization of release notes becomes a long pole.<p>4. Simple text is not effective for showing users potential benefits or training how to use something.<p>5. They can be misleading...saying something like &quot;fixed a startup crash&quot; doesn&#x27;t mean for a particular user the startup crash they are experiencing is fixed.<p>6. More and more users have automatic update turned on and don&#x27;t even see release notes is the app store UI.<p>7. Users don&#x27;t read release notes (or anything really). HN folks may read them...normal people do not.<p>Do you know what version of Facebook.com you are using and all the new features they push out daily? How about Gmail? Nope, you use products for core functionality and then discover what&#x27;s new in the course of actually using them and not in a text pop-up up front. This is how apps should be.<p>A much better and more effective strategy is contextual in-app callouts &#x2F; new user experiences.<p>The above <i>only</i> applies to consumer products. I believe release notes can be valuable for enterprises&#x2F;frameworks&#x2F;libraries&#x2F;tools&#x2F;etc.<p>PS: I know all about the tradeoffs...I wrote release notes for Mac OS X, Firefox, and Facebook. I was the one that decided to stop doing them at Facebook for the above reasons."
2016-01-29T07:54:37.000Z,Facebook is closing Parse,"Eh? I have apps that are almost 10yo on Google App Engine. Even when they forced a complete migration from the Master&#x2F;Slave datastore to the High Replication Datastore, it was a pushbutton process that required minimal intervention. Honestly if I have any complaint it&#x27;s that they don&#x27;t force change faster.<p>On the other hand, Facebook&#x27;s API changes at a pretty rapid pace and there are few apps older than a couple years that have survived without significant code changes. I&#x27;ve seen API changes that are basically &quot;rewrite your whole app&quot;."
2016-01-28T14:50:00.000Z,"Facebook Climbs to 1.59B Users, Beats Q4 Estimates with $5.8B Revenue","<i>If someone has the Facebook app then they&#x27;re not going to be heading there via Google.</i><p>On the other hand a lot of other searches contribute to the search volume and should track the popularity of Facebook, problems with the app, developers looking for API documentation, discussions of policy changes, people looking for jobs, news about the company and so on. So even if people are using the app the search volume should say something about the popularity. One thing I can imagine though is that a shift from the web to the app might decrease the search volume by such a large amount that it totally obscures the trend of the other kinds of searches I mentioned above."
2016-01-27T10:32:51.000Z,My Reaction to React,"For most problems, the following is how you define a component:<p><pre><code>    function Comp(state) {
        return React.createElement(
          &#x27;div&#x27;, &#x2F;&#x2F; tag name
          {}, &#x2F;&#x2F; props&#x2F;attributes
          &#x27;Hello &#x27;, state.name &#x2F;&#x2F; children
        );
    }
</code></pre>
And this is how you use it:<p><pre><code>    ReactDOM.render(
      React.createElement(Comp, {name: &#x27;World&#x27;}),
      document.getElementById(&#x27;stage&#x27;)
    );
</code></pre>
So in those situations the entire surface of the React API consists of two functions: React.createElement and ReactDOM.render. And if you use JSX, you won&#x27;t even directly use React.createElement in your code.<p>React is conceptually trivial. The API has been getting tighter with each release. React is in active development but so are all of its competitors[1][2]. React is production ready -- Facebook is even dogfooding the pre-releases in production.<p>[1]: in fact, when a library&#x2F;frameworks stops being actively developed people start assuming it&#x27;s dead. Counter-example: Redux is no longer actively being developed because it is officially complete and the implementation is so straightforward and resilient it can&#x27;t really be improved right now.<p>[2]: the reason it&#x27;s bogus to compare it to Angular2 &quot;because that&#x27;s not finished yet either&quot; is that Angular2 is being built to spec whereas React is being developed under use. Angular2 will be &quot;finished&quot; when the full spec is implemented. React will be &quot;finished&quot; when real-world use shows no further need to change -- by that definition none of the alternatives (including Angular2 post-&quot;final&quot;) is &quot;finished&quot; either."
2016-01-25T23:45:47.000Z,Things every React.js beginner should know,"You&#x27;re not wrong: things do change quickly in the JavaScript world. But have you actually been following this stuff very closely?<p>&quot;Flux&quot; was never a &quot;well-known default,&quot; because there was no single &quot;Flux&quot; library - only Facebook&#x27;s little written guide and an implementation of the dispatcher (a small part of the overall Flux architecture).<p>So, there were about 500 different implementations of &quot;Flux&quot; - none of which I&#x27;d say were ever considered a &quot;well-known default&quot; (the biggest ones - Reflux, Alt, Marty, Flummox, and Fluxxor - all have roughly between 1000 - 3000 stars on GitHub).<p>Then, Redux came on the scene and became the first and only &quot;well-known default&quot;. Several of the Flux libraries I just mentioned actually deprecated themselves and put up notices to use Redux instead. As of the time of this writing Redux has almost 13,000 stars on GitHub.<p>Relay&#x2F;Falcor are really part of an entirely different thing than React; they are about replacing the traditional REST API with an entirely new paradigm."
2016-01-25T22:20:58.000Z,What Is Zero UI? (2015),"I&#x27;m a huge proponent of the Zero UI movement. I gave a talk last year at a local Google DevFest about a CMS I created for a Priest friend&#x27;s Church that didn&#x27;t have any user interface to speak of. It relied on Google Drive to host all the files that the staff and teachers at his Parish needed to edit, and all they needed to do was leverage their existing knowledge of the OS&#x27;s file system and Microsoft Word to do it. A script runs every half-hour to update the static site based on the changes to and additions of files in their shared Google Drive account.<p>All of the pictures come directly from their Facebook account via the Facebook API and the weekly PDF newsletter is sent using Mailchimp and pulled from their Google Drive as well. They went from almost no engagement from the staff to close to 100% engagement after we implemented the system.<p>Before that the site was built on Drupal and needlessly complex. Nobody used it. It&#x27;s so easy to forget how daunting learning another user interface can be for the average person. We may think we&#x27;re being clever when we create our beautiful snowflake UI&#x27;s but all we&#x27;re doing is adding more work to somebody&#x27;s already full plate (and K-12 teachers&#x27; plates are overflowing). There&#x27;s a lot of cognitive overhead that comes with things like remembering username&#x2F;password combinations, how to upload files to a website (or understanding what that even <i>means</i>), navigating around a website, editing text in something other than Microsoft Word, and other skills and knowledge we take for granted.<p>With the Google-Drive-As-A-CMS implementation, none of the teachers had to learn anything new. They simply needed to leverage skills they were already expected to have (filesystems, Word, Excel, Powerpoint).<p>I&#x27;d love for more of us software developers and designers to take a step back and ask ourselves the question &quot;am I making my user&#x27;s life easier, or am I adding complexity to it?&quot;. The honest answer might give us pause."
2016-01-20T10:17:57.000Z,Object-Oriented Programming: A Disaster Story," * Ad-hoc polymorphism is valuable, and objects represent a clear way to express it<p>* Thin wrappers that slightly change functionality are often a business requirement, and &quot;extends&quot; inheritance provides an easy way to express them<p>* Having data associated directly with the corresponding state can make exploratory programming easier (e.g. suppose I have a library for accessing the Facebook API, so I fetch my user info. In OO style it&#x27;s immediately clear what I can do with my user info, because it&#x27;s all methods on the object; in functional style it&#x27;s less clear)"
2016-01-14T17:34:11.000Z,Facebook Messenger protocol in pidgin,"What I&#x27;m worried about: The protocol is proprietary, not a public API and all official clients can be updated by Facebook almost instantly. This means they can make arbitrary changes to the protocol at any time without bothering the users of official clients very much.<p>This library would have to keep up with all the changes or clients would quickly stop working. So is the manpower there to do this?"
2016-01-13T11:57:54.000Z,50 terms most predictive of a submission making it to the front page,"Also, 100 terms most predictive of a submission <i>not</i> making it to the front page:<p><pre><code>  -0.335386489547     startup
  -0.331723905544     2015
  -0.321593118669     app
  -0.306937335575     your
  -0.305739531214     how to
  -0.275438550569     this
  -0.261565592652     business
  -0.252649164518     product
  -0.250614203448     mobile
  -0.236041160710     marketing
  -0.227196421746     top
  -0.208139598304     with
  -0.206031814574     5
  -0.203087091676     ios
  -0.202457032685     design
  -0.201021718651     watch
  -0.200267475193     startups
  -0.197466134506     ask
  -0.196357335391     or
  -0.192562683469     10
  -0.191253124976     best
  -0.190867070325     ask hn
  -0.187721441778     cloud
  -0.187394374070     android
  -0.186461809237     smart
  -0.184024063073     you
  -0.183827664018     tips
  -0.182653896122     growth
  -0.181372850037     for
  -0.178198606780     could
  -0.162472422631     blog
  -0.162207059285     java
  -0.160644447613     development
  -0.159487418681     social
  -0.157294135483     should
  -0.156980003088     bitcoin
  -0.150609220130     iphone
  -0.148979317953     tech
  -0.148345714371     testing
  -0.147454333035     change
  -0.145491827860     list
  -0.145485290331     to
  -0.144015642286     3
  -0.143708682318     robot
  -0.142186986230     tools
  -0.140812013948     twitter
  -0.140696100278     rails
  -0.140548788801     software
  -0.138527298008     future
  -0.138172121531     good
  -0.138015521103     internet
  -0.137281744329     facebook
  -0.136342150691     security
  -0.134144777413     content
  -0.133091842596     awesome
  -0.133049592053     angularjs
  -0.133019163138     create
  -0.131147662198     meet
  -0.128568740027     live
  -0.125766592272     wordpress
  -0.125681496867     star
  -0.125433963958     here&#x27;s
  -0.124980970020     test
  -0.123513256155     day
  -0.123227292738     podcast
  -0.123085547655     feedback
  -0.122558159240     uber
  -0.122365526765     bill
  -0.121846476127     things
  -0.121766619177     online
  -0.121674711692     entrepreneurs
  -0.121271063379     vr
  -0.120835224059     devops
  -0.120704156113     website
  -0.120668008266     resources
  -0.119873591378     tutorial
  -0.119600975052     6
  -0.119263351612     most
  -0.118987167145     api
  -0.118767754130     apps
  -0.118683692890     digital
  -0.116745925093     will
  -0.116477896000     data
  -0.116317401689     needs
  -0.116223838757     need
  -0.115050697065     market
  -0.114878154258     3d
  -0.114105916526     more
  -0.111918004178     help
  -0.111764422735     apple
  -0.111326594562     new
  -0.110914386417     year
  -0.110475338587     customer
  -0.109564041456     technology
  -0.109468606136     iot
  -0.109381535069     application
  -0.109146062602     4
  -0.108483540034     solution
  -0.108171407112     music
  -0.107249340464     drone</code></pre>"
2015-12-24T17:18:21.000Z,Open Letter to Mozilla: Bring Back Persona,"LinkedIn and Facebook can do this because your email is not your username.  There likely isn&#x27;t really a username in those systems, just a user id.  Almost all systems have a user id, but the distinction here is slightly different.  Instead of a user record which has an id, username and possibly full name, Facebook likely has a user record with an id, a (display) username, and then there is a separate set of auth records with the multiple ways you can authenticate to the account, such as emails and passwords, API tokens, phone numbers, etc.<p>It may not sound like a big distinction, but there <i>is</i> a big distinction there.  Instead of your username being your email address, they&#x27;ve abstracted the authentication from the core user record such that usernames are not used for authentication, so don&#x27;t have to mutate if the authentication identifier (email address, phone number) changes, just some auth settings.  This is obviously a much more extensible and robust way to deal with authentication over time, but it&#x27;s also obvious it&#x27;s much more complex than a simple username&#x2F;password pair."
2015-12-21T22:40:35.000Z,Fuck the Cloud (2009),"If I&#x27;m a Facebook engineer, I would never agree to this because there is no possible way to optimize performance in this scenario.<p>What happens to Facebook when your data provider goes down, or just gets slow?  What if they mess up permissions or change their API?<p>Maybe you&#x27;re thinking &quot;that&#x27;s fine, if my provider isn&#x27;t reliable, my Facebook account becomes unavailable and it&#x27;s up to me to choose a better provider.&quot;  But what about all the people who are sharing your feed (or whatever it&#x27;s called these days, I don&#x27;t really use Facebook)?  Do they query your stuff, and then timeout when it doesn&#x27;t respond in time?  Now other people&#x27;s stuff is slow to load.<p>Just seems like an engineering nightmare, to me."
2015-12-01T09:21:19.000Z,Why FPGA manufacturers keep their bitstream formats secret,"I always assumed it was because, when you make an interface&#x2F;API public (by documenting it and offering it to your customers) you have a professional obligation to keep it reasonably stable. People get understandably upset when APIs for things like twitter and facebook keep changing under them, making things that worked before stop working.<p>Making the bitstream format a public API would make it harder for them to change&#x2F;update&#x2F;improve it without making themselves look like assholes for breaking third party software."
2015-11-25T01:02:38.000Z,What is a coder's worst nightmare? (2014),"I used to describe myself as a web standards evangelist ten years ago and my first instinct when I saw React (both because of JSX and because it was from Facebook) was to laugh and shake my head (until I decided to &quot;give it five minutes&quot; and found out I was wrong) so I hope my perspective could make some sense to you.<p>--<p>Just to clarify: React is not about killing the separation of concerns. React is about one thing: converting application state to a component tree and rendering that component tree to the DOM via highly optimised diffing.<p>At the base level, React turns state into component trees. Similarly, Redux is only about managing state and changes to that state. These are fairly straightforward ideas but having them as clearly defined building blocks with an extremely straightforward API (Redux moreso than React but in the trivial case a React component as of 0.14 can be a plain old pure function) radically simplifies application development.<p>I&#x27;ll say it again: application development. I haven&#x27;t said anything about HTML and CSS yet. This is as relevant to the web as it is to native application development and it&#x27;s not an accident that React has been decoupled from ReactDOM with the latter now being merely the implementation detail of going the last mile and rendering things to the DOM (or to HTML strings) and maintaining DOM bindings and diffs.<p>--<p>A quick interlude: JSX is not HTML. It looks like XML and in many examples it has HTML tag names in it, but it&#x27;s not HTML -- nor is it XML for that matter. It&#x27;s just (entirely optional but very useful once you get over the initial visceral discomfort) syntactic sugar for defining component trees (not DOM subtrees). The syntax is obviously based on XML but it is a lot simpler and the familiarity obviously helps.<p>--<p>One thing most people don&#x27;t understand about React (not least because React isn&#x27;t vocal enough about it -- just like Flux wasn&#x27;t vocal enough about certain concepts until Redux came along and showcased why they&#x27;re important and useful) is that you can and should distinguish between presentational components and application logic.<p>If you use Redux (or Flux -- but with Flux there&#x27;s the problem that most things called Flux aren&#x27;t actually Flux because nobody really understood it) most of your components will be entirely presentational and the logic will live outside the components except for a few so-called &quot;containers&quot; which are just extremely thin wrappers.<p>So with React+Redux you then have your component structure living in React components and your logic living in a few functions that describe transitions of the immutable application state plus a few &quot;containers&quot; that just describe how the state is applied to the API of the few &quot;smart&quot; components that actually need interaction.<p>Sure, HTML strings intuitively <i>feel</i> more appropriate for describing these components and Web Components definitely look more &quot;HTML-like&quot; in that regard, but at the end of the day you&#x27;re still writing something XML-like with made up elements (whether they&#x27;re Web Components or React &quot;components&quot;) that needs to be processed by JavaScript before being turned into the actual DOM.<p>--<p>One major change React brings to the table that isn&#x27;t spoken nearly as much of as it should be is that React can be used to render applications to HTML, without the DOM, on the server. This usually gets mentioned in the context of &quot;load times&quot; or &quot;SEO friendliness&quot; but it&#x27;s a pretty significant property of React.<p>Not only can React on the client &quot;seamlessly&quot; re-use the server-rendered DOM and attach itself like a jQuery plugin would but being able to render the application (and using Redux: render it with an arbitrary state) means you can truly embrace the idea of progressive enhancement without giving up the comfort of web application tooling.<p>Some years ago there was a lot of hype (well, not as much by a long stretch but some hype nevertheless) around the idea of making web apps work without JS (YUI[0] allowing server-side rendering of JS web apps and PJAX[1] enabling web sites to behave more like apps). Instead of mucking around with client-side templates you would render pages on the server and then intercept internal links to fetch and inject only the bits that changed between the current page and the next.<p>React+Redux is basically PJAX, but it&#x27;s also the polar oppsite. Instead of rendering everything using server-side technologies, you render everything using client-side technologies. And instead of offloading re-renders to the server you keep them in the client when possible (where they can be further optimised thanks to DOM diffing).<p>Let me restate that: React+Redux allows you to build &quot;Rich Internet Applications&quot; in a way that makes it possible to support JavaScript-free fallbacks out of the box. There&#x27;s nothing stopping developers from making the HTML output of their React apps richly semantic and accessible either (even though that represents the Eternal War of the web).<p>The idea is not new[2] but with React it&#x27;s not only achievable but <i>easily</i> achievable. And unlike Web Components it only needs existing technologies that are widely supported (it even works in IE8).<p>--<p>The PandaStrike article you linked is not a rebuttal of React. It&#x27;s a rebuttal of traditional client-side web applications. It doesn&#x27;t matter whether they are built with Angular or Backbone or React -- the arguments are mostly universal. The difference is that React is the only option today that (despite not having HTML &quot;templates&quot;) allows developers to do something smarter.<p>Of course React is a land grab. <i>Every</i> open source project is. But it&#x27;s not an attack on the Open Web anymore than jQuery was an attack on the Open Web before querySelectorAll or XMLHttpRequest landed in a spec. That you&#x27;re no longer writing straight-up HTML in a text file doesn&#x27;t mean you&#x27;re no better off than if you were using GWT[3].<p>And who says Web Components are the Right Choice just because they&#x27;re becoming part of the native platform? Sometimes the thing we think we want[4] isn&#x27;t what we really need[5], even if it&#x27;s on track to become a standard.<p>--<p>[0] <a href=""http:&#x2F;&#x2F;ajaxian.com&#x2F;archives&#x2F;server-side-rendering-with-yui-on-node-js"" rel=""nofollow"">http:&#x2F;&#x2F;ajaxian.com&#x2F;archives&#x2F;server-side-rendering-with-yui-o...</a><p>[1] <a href=""http:&#x2F;&#x2F;pjax.herokuapp.com&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;pjax.herokuapp.com&#x2F;</a><p>[2] <a href=""http:&#x2F;&#x2F;www.stevesouders.com&#x2F;blog&#x2F;2010&#x2F;09&#x2F;30&#x2F;render-first-js-second&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;www.stevesouders.com&#x2F;blog&#x2F;2010&#x2F;09&#x2F;30&#x2F;render-first-js-...</a><p>[3] <a href=""http:&#x2F;&#x2F;www.gwtproject.org&#x2F;gettingstarted.html"" rel=""nofollow"">http:&#x2F;&#x2F;www.gwtproject.org&#x2F;gettingstarted.html</a><p>[4] <a href=""http:&#x2F;&#x2F;readwrite.com&#x2F;2014&#x2F;07&#x2F;24&#x2F;object-observe-javascript-api-impact"" rel=""nofollow"">http:&#x2F;&#x2F;readwrite.com&#x2F;2014&#x2F;07&#x2F;24&#x2F;object-observe-javascript-ap...</a><p>[5] <a href=""http:&#x2F;&#x2F;www.infoq.com&#x2F;news&#x2F;2015&#x2F;11&#x2F;object-observe-withdrawn"" rel=""nofollow"">http:&#x2F;&#x2F;www.infoq.com&#x2F;news&#x2F;2015&#x2F;11&#x2F;object-observe-withdrawn</a>"
2015-11-02T11:01:24.000Z,Facebook is able to identify music and TV when writing status update,"Android is in desperate need of allowing users to change permission for app. It&#x27;s ridiculous that the application decides what it has access to (and android it is not making it easier with a bad permission granularity). And I believe this functionality was in some pre-release 5.0 versions. They removed it because apps would just crash if permissions were removed. However, there are apps that solve this (for rooted phones) by providing dummy (null) data on API calls that you blocked.<p>For example, there is absolutely no reason my facebook app should ever have access to a microphone."
2015-11-01T20:52:32.000Z,Ask HN: How do you manage cross-system dependencies?,"Thanks for explaining.  This is a pain point I think everyone that does service oriented architecture has to some level.<p>Most shops I have worked in seem to mostly attack this via procedure.  Ie - release is OK&#x27;d by QA, then deploy ticket is made that specifies what versions go where, and then operations is responsible for executing this procedure and ensuring its sanity.<p>If you have a lot of hands in the pot, (too many cooks), then this is bound to have issues when everyone is busy and things get overlooked.<p>There is a lot of automation that can help however.  Dependency management in this sense I think has to be more elaborate than just &quot;is X installed or deployed&quot;, but you might also want to ask &quot;is X healthy?&quot;  Just because a package has been installed doesn&#x27;t mean its working.<p>So that is in my opinion why there is no one-size-fits-all solution for this.  Many releases are fully compatible with each other, and in simple applications probably even more so, but once you have many teams working on many services, it can be a nightmare.<p>A lot of places have granular feature management.  So, frontend can fail gracefully if feature is not supported on backend.  Often backend supports more than 1 fronted version set.  You can use versioned api&#x27;s (like putting a version in an http header, or namespacing features like &#x2F;api&#x2F;v1&#x2F;x, &#x2F;api&#x2F;v2&#x2F;x).  (it&#x27;s been said a huge distributed app like facebook has something like 500 different versions of components all running concurrently)<p>You can have your deployment automation do things like check to see if backend has required version (which would be something that you would have to put in hiera&#x2F;equiv of what versions are required), and even more importantly if they are responding to health checks.<p>One project I currently work on has a very distributed architecture, and every application has to conform to a health check endpoint that returns its state and its version.  So we have scripts that do either rolling deploys or green&#x2F;blue deploys depending on what we are deploying, and we can define the order in which services are deployed.  We can deploy them concurrently&#x2F;rolling, or independent&#x2F;rolling, or either of those flavors non-rolling, or green&#x2F;blue.<p>So if we say we are deploying fronted3.1, backend4.2, and we are replacing frontend3.0 and backend 4.1, this would be seen by the deploy scripts (and operations team) as a single changeset for the environment.  So if frontend3.1 needed backend4.1 to function, we would specify a independent rolling deployment, so for each service thats being deployed (starting with the backend), we would roll out server by server at a specified interval, and we would wait for that server to return a healthy health check with the specified version.  If this fails the deploy is rolled back and notifications are sent.<p>^ with this working correctly, we have to have the understanding with the application developers that we will never release a backend that is not backwards compatible with any components that rely on this. (beyond a cutoff version, which those do exist too)<p>In practice this works quite well, but is not magic, and definitely requires some up front development of automation.<p>So, sorry for the long post, I think this is a long winded way of saying, my opinion is that this belongs in a configuration management, as the logic encapsulating &quot;what version goes where&quot; gets more complex over time, and so some code, logic, decision making, and failsafes all have to be carefully thought out."
2015-10-22T14:34:31.000Z,Kits Make Tinkerers’ Home-Automation Dreams Come True,"I don&#x27;t see how this affect one&#x27;s exercise regimen in any way. The use case probably isn&#x27;t not getting off the couch to turn off the light, but voicing the command as you leave the room. In case of light, it&#x27;s just (aiming at) more seamless experience.<p>For some reason many people have this picture of technology bringing forth the Wall-E world. Consider however the following points:<p>- People hate that vision with passion, which pretty much guarantees it won&#x27;t come to pass any time soon.<p>- &quot;Normals&quot; today are absolutely <i>obsessed</i> with fitness. Between spamming everyone with Endomondo updates on Facebook and testing a new toy-pedometer-watch, the primary use of Javris-like system in general population will probably be dieting and exercise.<p>- Convenience doesn&#x27;t have to lead to laziness. It can enable one to do more, faster and better. In a way, one could argue 200 years ago that the invention of electric washing machine will turn people lazy and fat.<p>Ultimately, it will be up to us how much we eat and move. As our civilization goes forward, those things will be more and more disconnected from the limitations of reality. We can either learn to stay fit with computers, or give up on future entirely right now and go back to building things by hand.<p>EDIT:<p>I&#x27;ll also share a short anecdote. 8 years ago, I built myself a voice-controlled system for changing music (Star Trek: TNG style, with computer voice reacting to commands). Basically a microphone soldered together from parts and hung on a wardrobe, + some Microsoft Speech API based software I wrote for off-line command recognition and control over a WinAMP instance. It wasn&#x27;t that hard to get it working even though the music was on the loudspeakers, with quite high a volume setting.<p>I could use it to change the music from my bed, or chair, or anywhere in the room. Did it made me exercise less? No. I actually did it to stop myself turning the computer screen on to change music while doing math exercises for maturity exam. It helped me to keep focused, because the task suddenly didn&#x27;t require to do a context switch. Since that experience, it&#x27;s how I see home automation - as a way to reduce context switching and to streamline some chores, not to rob you of meaningful activities."
2015-10-21T23:32:11.000Z,Twitter CEO Dorsey Apologizes to Developers,"I stopped really looking at APIs ever since Facebook, Twitter, LinkedIn, etc. started restricting the usefulness and access to them.<p>Its been a long time since I really thought about building any business on quicksand.<p>Now a days when I use an external API, I make sure it is not core to the product. If the relationship changes with the external provider, I need an escape that does not impact my product.<p>Which means of course that the external API cannot be &quot;essential&quot; - and in startup land &quot;not essential&quot; == &quot;do not do&quot;"
2015-10-21T20:02:10.000Z,Twitter CEO Dorsey Apologizes to Developers,"&gt; Facebook has also done this repeatedly ... They just make breaking changes to production APIs all the time.<p>They do, but that doesn&#x27;t slam the door shut on a developer&#x2F;business purely for the sake of slamming the door shut on a developer&#x2F;business.<p>From what I&#x27;ve seen, Facebook encourages API usage. Twitter encourages it until you make money, then they shut you down - often stating they&#x27;re building a similar app&#x2F;service and you&#x27;d be competing with them -- only then to never launch said app&#x2F;service.<p>Twitter as a platform isn&#x27;t worth much (as evidenced by year after year of not turning profits). The value in Twitter is the data - but they are locking it away.<p>Why not go the Google route and charge for API usage over a certain threshold. Twitter could stop caring what users do with the data, and make money as their ecosystem grows and becomes more successful."
2015-10-19T05:46:47.000Z,Trix: A rich text editor for everyday writing,"Nice to see this particular bit of info high up in the README (though &quot;as seen in Basecamp 3&quot; would fit well in the Github repo description line):<p>&gt; <i>Trix is an open-source project from Basecamp, the creators of Ruby on Rails. Millions of people trust their text to Basecamp, and we built Trix to give them the best possible editing experience. See Trix in action in the all-new Basecamp 3.</i><p>Nothing gets me more interested in trying out a JavaScript library than seeing that it&#x27;s used in a mainstream production product, <i>especially</i> a money-making&#x2F;critical product by very same the company that created&#x2F;maintains it...it&#x27;s a bit of guarantee that the API is relatively mature&#x2F;won&#x27;t-go-crazy and that someone has a vested interest in keeping the library up to date with changes in the Web. That was why React was so much more appealing to me than Angular, relative to their respective public release dates...React was already in production at Instagram and parts of Facebook, whereas I don&#x27;t think Angular was in any of Google&#x27;s main public facing products (i.e. search, YouTube, Maps)"
2015-10-08T11:31:58.000Z,"Show HN: Squatmon, a domain squatting monitoring system, with new things","Hi HN<p>a lot has changed since our last Show HN, and i guess it was time to share these change with you.<p>for those who weren&#x27;t here the first time, we try to catch domain squatting using a bunch of techniques we already used when doing it manually, but in a purely automated fashion. your root domain (think &#x27;facebook&#x27;, &#x27;twitter&#x27;, &#x27;ycombinator&#x27;, etc...) gets through blenders that generate variants, that we&#x27;ll gather info on.<p>we now have all the basics in place so i can confidently call it production ready. free accounts are still the same deal, one domain, five TLDs, all present and future generators, whois and dns resolver, plus a few more still in the oven, and one run per week, which should be enough if your needs are not massive and&#x2F;or specific.
you also now have paying options for people with more intensive needs, either timing wise (down to one run per day, and one run per 4 hours will be a possibility once i&#x27;m confident 1: we can handle it, 2: it can actually provide value in the real world) or number-of-tlds-wise.<p>notifications! yeap i know it&#x27;s basic, but we now send you a mail when a run is complete, so you don&#x27;t have to bother reloading waiting for that progress bar to reach 100%. a few client asked us about sms notification, but i&#x27;m not sure about multiple notification channels yet.<p>so what&#x27;s next :<p>we have a bunch of stuff that stayed on the backburner while i was working on making the production as autonomous as possible (complete CI&#x2F;CD stack, built with chef, openstack heat, jenkins, the whole shebang) and the other dev was working on ironing the kinks
existing when interacting with horrible protocols like whois (for the sake of everyone&#x27;s sanity, i really hope rdap (<a href=""http:&#x2F;&#x2F;about.rdap.org&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;about.rdap.org&#x2F;</a>) gets traction) or misbehaving dns, or just plain old bugs. we&#x27;re now bringing them back on the front of the workbench.<p>parking detection.<p>this one is simple, and everybody will get it, but i noticed a large number of parked domains in resolution runs, so they&#x27;ll be marked as such.<p>automated phishing detection.<p>this has been a major demand so i&#x27;m prototyping a CV system (ab)using ghost.py and opencv to see if i can get something that has a reasonable false positive rate.<p>malware detection.<p>a smaller demand because it&#x27;s already well covered by other products. for the moment paying accounts get access to google safebrowsing, and i have a bunch of threat exchange APIs access ready to enter the quorum. there&#x27;s a lot of datasharing between those, so i don&#x27;t want to generate false positives because of data sharing. i have also been working slowly on PR for cuckoo sandbox that&#x27;ll help me launch fleets of sandboxes in various configuration (hopefully i&#x27;ll have enough variants that the client is able to more or less choose the one that correspond to its production environment to try and catch targeted attacks)<p>keyword prediction based on the root domain.<p>we have a keyword generator that can generate domain variants, think &#x27;cheap-brand&#x27; for &#x27;brand&#x27;, but if you&#x27;re like me you probably can&#x27;t think of a lot of those (i had good success asking marketing guys for ideas). once again AI to the rescue, i&#x27;m tracking which keywords had the most &#x27;success&#x27; in finding resolving variants, which means once i&#x27;m able to establish lexical domains i&#x27;ll be able to offer everyone a &#x27;most likely keyword for this domain&#x27; help to feed the generator.<p>an API!<p>at the very beginning, when dinosaurs roamed the earth and the iphone 5s the cool product of the year, squatmon was just a very large and very ugly python script i used in various recon engagements. as we decided to slap a shiny web interface on it and share it with others, we didn&#x27;t take the time to make an API the first class citizen and the web interface just the reference client implementation.
this is a mistake we intend to correct, so any person with an account, free or otherwise can integrate any of the functionality they have access as a part of something bigger. (i have written an example postfix milter that&#x27;s too terribly slow to be used in production, but can participate in the spam score of an email for example)<p>if you have any question, want to report bugs, or anything really, don&#x27;t hesitate to contact me, my email address is in my profile.<p>edit: i&#x27;m terrible and i said one run per month on the free account. it&#x27;s of course one run per week"
2015-10-07T22:08:15.000Z,React v0.14,"<i>That which we call a rose by any other name would smell as sweet.</i><p>Perhaps it would, if that other name had been chosen from the start.<p>However, in this case, many projects will have existing code using the earlier conventions.<p>Moreover, there is a substantial volume of documentation and tutorial blog posts and conference videos and example code repos using those older conventions, all of which has just been invalidated. This isn&#x27;t just a loss, it is all now actively harmful to new developers adopting React or those trying to update to a newer version, because it&#x27;s actually misleading.<p>If a library you&#x27;re thinking of using in production is as willing to break API compatibility as React is, even if the changes are mostly announced a little way in advance, you should think long and hard about the overheads and instability you&#x27;re going to incur with a dependency on that library before you adopt it. Move fast and break stuff might work if you&#x27;re Facebook and thus have both final control over the library in question and effectively unlimited resources to maintain your code base, but it doesn&#x27;t work very well for the 99.999% of web development projects that don&#x27;t have those resources available.<p>To be fair, the React project itself seems to be quite transparent about its development methods. It&#x27;s not as if they&#x27;re advertising the library as stable -- it&#x27;s still clearly shown as a 0.x version, for example. However, a lot of people are jumping on the bandwagon anyway and just hoping for the best, and that&#x27;s probably not a good idea.<p>From an API point of view, all of that is what&#x27;s in a name."
2015-10-07T18:23:51.000Z,React v0.14,"&gt; Like always, we have a few breaking changes in this release. We know changes can be painful (the Facebook codebase has over 15,000 React components), so we always try to make changes gradually in order to minimize the pain.<p>Since React is a semver project, from the website:<p>&gt; How do I know when to release 1.0.0?<p>&gt; If your software is being used in production, it should probably already be 1.0.0. If you have a stable API on which users have come to depend, you should be 1.0.0. If you&#x27;re worrying a lot about backwards compatibility, you should probably already be 1.0.0."
2015-09-30T11:31:56.000Z,Ask HN: What stack would you use to build a CRUD web app on the JVM today?,"Sangria is a scala GraphQL server. Facebook released an initial reference implementation in javascript, but I wanted the type-safety that scala gives. If you&#x27;re more comfortable with JS you could check that out. See <a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;relay&#x2F;"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;relay&#x2F;</a>.<p>With GraphQL you don&#x27;t write views per se, but you make data available. The client can pick and choose which of the exposed attributes it needs to render a view. So if you have, say, a user profile page, you might use relay to declare that you need something like:<p><pre><code>    user(id: $userId) {
      username
      age
    }
</code></pre>
Then relay will hit your graphql server and add this data to your react props.<p>It&#x27;s a similar thing with mutations - you expose operations through your server and then relay handles calling it with the necessary data, and propagating back the response into the UI.<p>I&#x27;ve found this approach to be very powerful and quick to develop in (once I got my head around it). With REST, you have to keep on adding new endpoints or fiddling with your server if you need more attributes from it. E.g. say you also want the user&#x27;s gender. With traditional REST you&#x27;d need to make this change in your client (to request that extra data) and update your server to expose it. Or perhaps you&#x27;d add a new endpoint that returned more data about a user. Then you may also need to decide what happens with legacy clients. Should they fail if they receive extra, unexpected data, or do you version your API, etc.?<p>With GraphQL you can choose to expose all of the different attributes on your user model (with authentication&#x2F;authorisation, etc as appropriate) in-advance, and then if clients need the gender, they can just request it via relay.<p>After I tried writing an app using REST and continually feeling like I was walking in mud, this is a real breath of fresh air, and I feel productive again. I definitely recommend checking it out."
2015-09-26T18:02:40.000Z,"The United Nations has a radical, dangerous vision for the future of the Web","I agree with the article that the changes propose are radical and dangerous. Instead, improvement could be achieved bottom up. For example, many women complain about online dating being an unpleasant experience for women. Some women decided to do something about it and started Bumble,<p><a href=""http:&#x2F;&#x2F;www.theguardian.com&#x2F;technology&#x2F;2015&#x2F;apr&#x2F;12&#x2F;bumble-dating-app-women-call-shots-whitney-wolfe"" rel=""nofollow"">http:&#x2F;&#x2F;www.theguardian.com&#x2F;technology&#x2F;2015&#x2F;apr&#x2F;12&#x2F;bumble-dat...</a><p>A dating app that only lets women message men. It&#x27;s an interesting idea and totally changes the dynamic.<p>If online harassment is a problem on dating sites, women can and have created a better solution for themselves in Bumble. Women can do the same with a safer Twitter and Facebook - if they want. It&#x27;s never been easier to do so, with Kickstarter and other funding options.<p>Women are not a minority - they are over 50% of the population, and more than capable of solving problems like this, again, if they want. Apparently things were bad enough in dating for Bumble, but since there isn&#x27;t a female-oriented Twitter or Facebook, I suspect the problems are overstated on those sites."
2015-09-15T02:46:30.000Z,GraphQL: A data query language,"Version Free sounds amazing - I can see the pros of being able to add&#x2F;deprecate fields at the same API endpoint, but I find most of the reason we version our API is for field type changes as the data schema naturally evolves. We need to keep track of finer grained data in existing fields that wasn&#x27;t originally thought of.<p>To take the Star Wars example at <a href=""https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;graphql"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;graphql</a> and build on it. Let&#x27;s say after this is deployed we need to expose a Planet&#x27;s population as well. Now homePlanet goes from being a String to a Planet { name population } object.<p>This type change would break existing clients - the only real solution I can think of is introducing the planet object as PlanetDetails (essentially PlanetV2) and deprecating planet, but that&#x27;s just back to versioning.<p>I feel like there must be a better way to deal with it? Interestingly, the graphql format allows this to be differentiated (as the old API won&#x27;t request an object), but there appears to be no provision to union two non-objects into a single field?"
2015-09-14T22:43:30.000Z,React Native for Android,"I was pleasantly surprised that the latest Chrome for Android delivers push notifications for Facebook due to a new W3C API, and Facebook&#x27;s mobile web interface has been in good shape for some time, so right now Facebook&#x27;s native app is completely optional. Which is a good thing, given how many permissions Facebook&#x27;s app requires.  Apparently this was announced back in April, but I just noticed it, due to Facebook being updated: <a href=""http:&#x2F;&#x2F;blog.chromium.org&#x2F;2015&#x2F;04&#x2F;reaching-and-re-engaging-users-on.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.chromium.org&#x2F;2015&#x2F;04&#x2F;reaching-and-re-engaging-us...</a><p>Along with other things such as the app manifest, Chrome on Android is leading the pack in terms of making the mobile web feel native. Previously this title belonged to iOS Safari, unfortunately Apple dropped the ball a long time ago.<p>I&#x27;ve been a long time Firefox user and I&#x27;m using Firefox on Android as well. But I do think they could do a better job, I mean I&#x27;m all for Firefox OS and what that means for Mozilla, but I feel their Android effort is subpar and that&#x27;s a shame, given that Android is the modern Windows and there&#x27;s plenty of room for Firefox on it. I mean right now Firefox is the only app I have that wasn&#x27;t updated for the material design guidelines and they didn&#x27;t even try to fake it. And that would be OK, but I&#x27;ve been waiting for things to get fixed ever since forever, like the Add to Homescreen functionality which is completely broken.<p>But anyway, people that bemoan web interfaces are usually ignorant of present day web interfaces that people use.<p>You can&#x27;t name an email client that&#x27;s more usable than GMail&#x27;s web interface. And surprisingly FastMail on a mobile browser is almost as usable as native GMail, being all web. Facebook and Google Maps are 2 other example of having awesome mobile web interfaces. Of course, people focus on shiny rather than utility. But I don&#x27;t care how usable or shiny your iMessenger or your FaceTime is, because I don&#x27;t own an iOS device, not anymore. And your native app might be great, but if it doesn&#x27;t have a web presence, I personally don&#x27;t care much about it because I change devices often."
2015-09-10T23:11:27.000Z,React 0.14 Release Candidate,"For a while, we were aiming for a &quot;1.0&quot; release. Lately, we&#x27;ve been more of the opinion that React will probably continue to evolve over time. We&#x27;ll probably skip over the dot sometime (e.g., 0.14 -&gt; 15.0) to help reflect that we do recognize these current versions as more or less stable.<p>The other opportunity is to just call some version 1.0 and then wait some amount of time (a year? two? five?) before making any breaking changes, which sounds less appealing to us. You can always continue to use an older version (and we&#x27;ll backport serious fixes like we did in <a href=""http:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog&#x2F;2013&#x2F;12&#x2F;18&#x2F;react-v0.5.2-v0.4.2.html"" rel=""nofollow"">http:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog&#x2F;2013&#x2F;12&#x2F;18&#x2F;react-v0.5.2...</a>) but we plan to continue developing React and hope that people will continue upgrading to new versions.<p>If you&#x27;re concerned about whether it&#x27;s production-ready (as opposed to future API changes), the answer is definitely yes."
2015-08-19T17:43:41.000Z,Show HN: Ritzy – Google Docs-like rich text editor,"I would like to introduce the open source Ritzy web-based rich text editor: <a href=""http:&#x2F;&#x2F;ritzyed.github.io&#x2F;ritzy&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;ritzyed.github.io&#x2F;ritzy&#x2F;</a>. It is based on React [1] and SwarmJS [2] and primarily intended for embedding into applications to support rich text entry with real-time collaboration. Technically, it works similarly to Google Docs and eschews ContentEditable in favor of a custom javascript-based editor surface and layout engine [3]. As far as I know, this is the first open source implementation of this technique. Please see the project README and source code [4] for more details. Note that this is pretty new and hasn&#x27;t seen any real-world testing&#x2F;usage, so there are some known bugs [5] and likely lots of unknown ones as well.<p>Depending on interest, I am considering offering the editor as a software-as-a-service solution. Because it is intended for real-time collaboration, a server-side component is (currently) required. While a simple implementation is part of the open source project, a more complete commercial service could handle storage, communications, security, availability, and provide a simple but powerful API for developers. The API would allow interaction with client-side editors and the data they contain, including real-time server-side push updates as editor contents change. Please let me know if your company or startup may be interested in such a service.<p><pre><code>  [1] https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;
  [2] http:&#x2F;&#x2F;swarmjs.github.io&#x2F;
  [3] http:&#x2F;&#x2F;googledrive.blogspot.ca&#x2F;2010&#x2F;05&#x2F;whats-different-about-new-google-docs.html
  [4] https:&#x2F;&#x2F;github.com&#x2F;ritzyed&#x2F;ritzy
  [5] https:&#x2F;&#x2F;github.com&#x2F;ritzyed&#x2F;ritzy&#x2F;issues</code></pre>"
2015-08-17T16:39:46.000Z,Eve Version 0,"&gt; <i>In order to accomplish that, we do need a way to describe processes. We need a way to &quot;program.&quot; But switching the goal from building applications to analyzing and communicating information changes everything. Our current programming tools are awful thinking tools. Instead, they were designed to build complex systems. How much effort does it take to write a program to scan through your facebook friends and check to see if someone who usually isn&#x27;t in your area currently is?...People aren&#x27;t really tring to build the next Facebook, they&#x27;re trying to use the information from it in a different way.</i><p>The example given here by the OP strikes me as a good example of how and why programming is complicated, and what people generally <i>want</i> their programs to do is unlikely to be doable without knowing how to program.<p>Case in point: why can&#x27;t a layperson just make a little app &quot;to scan through your facebook friends and check to see if someone who usually isn&#x27;t in your area currently is&quot;? The ease, glib answer is: well, Facebook&#x27;s developer API requires several hoops to jump through, including OAuth of clients and so forth. So that&#x27;s why there&#x27;s no drag-and-drop-plug-and-play module system for such a feature.<p>The bigger answer is the answer to the question of why does Facebook&#x27;s API have to be so complicated? Well, besides business reasons...FB&#x27;s API is a public-facing abstraction over a system in which a billion people have agreed to (semi-)authenticate themselves and communicate a variety of real-time things about themselves. As annoying as it is to program your own little FB apps...it&#x27;s complicated because the system it interfaces with is overwhelmingly and amazingly complicated.<p>I don&#x27;t see much room for improvement in making programming easier in this regard. It&#x27;d be like making Shakespeare more digestible to people who don&#x27;t want to learn to read (OK, ignoring oral storytelling, for this limited analogy)"
2015-08-02T15:48:53.000Z,"Ask HN: Does disrupt mean unnerve established player, so player must buy you?","There&#x27;s a weird period during things that appear truly disruptive where the established player may try to buy you. This happens when it becomes clear there&#x27;s a non-zero chance that the established player may quickly become extinct because of the new player&#x27;s growth, however it is still not inevitable. Lately, the most prominent examples of this have come with Facebook&#x27;s successful and failed acquisitions. For example:<p>Instagram in Apr. 2012: Facebook is about photos, but it wasn&#x27;t crushing mobile like it is today. Instagram was, but it still wasn&#x27;t clear whether Instagram&#x27;s growth would top out or what monetization would look like. Facebook made a $1bn offer that many thought was crazy, but Instagram is now worth (by many estimates) 30-50x that.<p>ON THE OTHER HAND:<p>Snapchat ~Nov 2013: Snapchat pioneered an entirely new way to interact with photos on a phone - another existential crisis for Facebook. Facebook offers $3bn in cash. To an extent FAR greater than when Zuck made the offer to Instagram, people were aligned in saying Evan S should take the offer. Snapchat, after all, in many people&#x27;s minds was about sexting and distasteful things - take the money. Growth would top out eventually, people would get over it. Evan, however, disagreed - Snapchat wasn&#x27;t mostly used for sexting, it was used for sharing moments. And it was working, and in fact it had become inevitable to him. Zuck went through the same thing getting offers from Yahoo and Microsoft at Facebook, and he was right. Evan, FWIW, I think is also right - Snapchat is going to change the game."
2015-07-28T22:18:19.000Z,"As Tech Booms, Workers Turn to Coding for Career Change","While I&#x27;m sure it helps to be a math major anywhere, anyone who has been trained to be a careful analytic thinker would be a good candidate to become a programmer. For instance if you were a humanities major from a school with a strong academic reputation and you actually took your coursework seriously as an undergrad.<p>As much as programming is applied math, most companies are not Google or Facebook and have problems that can suffer the inefficiency of a non-expert. A lot of programming jobs ask you to get data from a form or API, do something with it and show some HTML. And that HTML needs to be styled in CSS and have some neat UI elements that are fine tuned in Javascript. There is nothing about that kind of work that favors a math major over English major.<p>The situation changes if your company is huge, handling thousands of requests a second so small inefficiencies add up and are wasteful on a large scale or even cause the software to break entirely. But assuming you have a smart CTO&#x2F;Lead you should know where potential pain points in your code are and still be able to hire a relatively inexperienced junior and get good work out of that person. I have a friend who was an Ivy CS grad, worked at Google then worked at Squarespace. He said he was intimidated by designers who knew HTML, CSS &amp; Javascript and were good with forms because a lot of work for developers could be handled as quickly by those type of developers as he could handle it with his vastly more technical background."
2015-07-21T18:58:29.000Z,Why I am pro-GPL,"The first half of the article was good and balanced. I especially like the distinction in lay terms: copyleft to push freedom; non-copyleft to push adoption. That&#x27;s a great way to describe it to a person contemplating what license to choose. Then, the article goes in a different direction that embodies negative qualities that author critiqued in the related presentation. Let&#x27;s address a bit of this from my pro-consumer, pro-security&#x2F;quality, pro-OSS, anti-copyleft perspective. Mentioned that just so my bias is clear upfront and why I push adoption-oriented licenses (esp for open hardware &amp; high assurance).<p>re stepping stone. Yes, this is the common goal of proprietary use of anti-copyleft software. IIRC, copyleft software got its start using the architecture, languages, tools, and platforms of BSD and proprietary offerings. So, even GPL proponents build on existing work. Anyone wanting an open, free version of a given enhancement can similarly produce it starting with the same stepping stones.<p>re open to closed. We saw this happen with Apple App Store, the QNX source reversal, attempts to combine open code with DRM, and so on. This is bad. However, it almost exclusively happens with companies whose licensing, TOS&#x27;s, SLA&#x27;s, etc allow for this sort of thing. That&#x27;s where the problem is. Avoiding such companies, selecting safest licenses, and&#x2F;or ensuring certain conditions are perpetual in contracts&#x2F;licenses are easiest solution. GPL is actually a successful implementation of my claim, although it wasn&#x27;t good enough. Affero corrected a major deficiency and more evolutions will probably follow. Many more licensing schemes can happen to reduce negative impact of business participation while empowering users.<p>The common theme in most gripes is what the companies do. The reason we have this problem is that users almost exclusively do business with scumbag companies. They don&#x27;t care about terms. They don&#x27;t care about its ethics. Prior abuses rarely make them change companies (see Microsoft and Facebook). They don&#x27;t try to leverage their buying power to force (existing) or incentivize (startups) companies to negotiate something that&#x27;s favorable to them and future-proof in main risk areas. Like the old saying, the only thing that was necessary for triumph of evil was that good people did nothing [while evil kept its eye on the ball and its hands&#x2F;feet in a sprint].<p>A lot of these problems can be avoided by simply investing in the right organizations. People who pick up Microsoft&#x27;s server operating system are in for more schemes than those that used FreeBSD with commercial support. Certain small companies behind IDE&#x27;s and libraries have had <i>great</i> terms for their users for years with minimal hassles unlike the mess that&#x27;s Microsoft&#x27;s development tools. Services provided by non-profits, cooperatives, and companies simply focused on customer satisfaction have done great compared to race to bottom in cost or highest shareholder earnings that get many others scheming on customers. Pick the right people&#x2F;companies&#x2F;tools, maintain an out to avoid lock-in (open formats&#x2F;API&#x27;s help), and invest in that. Double down on it if they use permissive licenses and re-invest back into their communities.<p>In the end, this is more a problem of incentives than purely a legal one. People trust companies that don&#x27;t care about them. They get screwed. Stop doing that. Do plenty more of the opposite. On top of it, explore alternatives [1] to popular source-sharing models in case business opportunities arise. Get momentum going in directions other than companies that do lock-in and lock-down. After all, I&#x27;ve done a lot of business with proprietary companies and have mostly avoided being boxed in. Same goes for FOSS use. Imagine that... All about what you use, how, and from whom. Sacrifices will need to be made, though, and now we&#x27;re getting back to user demand (incentives) driving the negative practices.<p>Outside a niche, I don&#x27;t see it happening because market as a whole won&#x27;t take responsibility to make it happen. The problems are market&#x27;s fault, as usual. Good that niche commercial, OSS, and FOSS have given us plenty of good stuff to work with. I encourage all of them to keep at it without a need to fight with any. I avoid GPL strictly for economic reasons: certain investments don&#x27;t happen, esp high assurance or ASIC development, unless they can recover the cost somehow. Additionally, companies adopting high quality components makes stuff more robust over time. Finally, making money allows them to fight inevitable patent suits that will attempt to put them out of business and create more patents for defensive use. So, for economic reasons, I oppose the GPL in some spaces while respecting it and being neutral in others. My OS is GPL, for instance, and I&#x27;m grateful to its developers &amp; community. :)<p>[1] <a href=""https:&#x2F;&#x2F;www.schneier.com&#x2F;blog&#x2F;archives&#x2F;2014&#x2F;05&#x2F;friday_squid_bl_424.html#c6051639"" rel=""nofollow"">https:&#x2F;&#x2F;www.schneier.com&#x2F;blog&#x2F;archives&#x2F;2014&#x2F;05&#x2F;friday_squid_...</a>"
2015-07-19T17:54:18.000Z,The self-hating web developer,"Where do you think the most successful web apps (like Slack recently) are emerging?  From the SV echo chamber.<p>To be a talented full-stack web application developer for a <i>successful</i> consumer facing app, you sort of need to have an obsession with UI&#x2F;UX design trends.  Finished web apps that delight customers have an attention to detail that put them over the edge into the realm of being successful.<p>What you need to learn to become a <i>top</i> web app developer is actually punishingly brutal.  People now expect all web apps to operate with the smoothness of having AJAX everywhere that you see with apps like Youtube, Gmail and Facebook. Web app developers who can actually build web apps to that level of quality are extremely valuable.<p>Web development is not easy if you really specialize in it. By that I mean people who have really accumulated best practices and knowledge over common core problems of the web.  These are the people who within a month can return you an app fully loaded with user accounts, multi-tenancy, notifications, emails, subscriptions, the ability to upload documents, search, credit card payments, google maps, API gateways, chats etc.<p>In addition to having programming chops, a lot of their value actually comes from having spent time collecting good &quot;widgets&quot; of useful software they can use for new projects.  These &quot;widgets&quot; allow them to build impressive experiences quickly. Examples include having an opinion about what a &quot;joyride tour&quot; javascript widget looks like, having an opinion about what makes a good date-time picker, mastering form validation, -- the list is nearly endless, but they all come down to the person having an informed opinion about what UI&#x2F;UX paradigms are best from a human-computer interaction perspective, and knowing that these paradigms change quickly.  A person who I would call an <i>elite</i> (front-end) web developer is somebody who builds their own widgets frequently just to see what works.<p>Such sideskills of a web developer only come from constant learning.  In my opinion it is one of the most brutal sectors of software in terms of how quickly your skills fall out of date and how much you constantly need to be learning in order to remain competitive."
2015-07-12T07:19:08.000Z,React UI Builder,"I&#x27;m so excited with the technology coming out of facebook right now, imo it&#x27;s the best possible way they can attract new developers. I can&#x27;t wait for react native to come out for android so I can start playing with it!<p>I really think this has the potential to be something of a game changer. One of my pet favorite libraries is sqlAlchemy (python ORM) and I really want to write a server for graphql that automatically generates api routes for a sqlalchemy mapped schema!"
2015-07-05T19:36:11.000Z,Why Invest in Tools?,"Well our company believes in the power of tools to empower people and developers, and bring about social change. So I can definitely speak about this. And so can my cofounder: <a href=""http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platform&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platfor...</a><p><i>&quot;Our job is not to just build Facebook, our job is to make the world more open and connected — and we in Product Infrastructure are tasked with giving the whole software industry the tools to help us accomplish this mission.&quot;</i><p>Then open source your social network and let it be hosted in a distributed manner around the world. Instead of shutting off access to APIs like this: <a href=""http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a><p>When I see companies like Twitter and Facebook become open source like Wordpress for blogs, then we can say they really care more about making the world more open and connected instead of building their own silo."
2015-06-22T14:48:18.000Z,Show HN: WhatsApp for Desktop,"&quot;[Name] for [Service]&quot; is a popular format in the third-party client world, and it&#x27;s one that&#x27;s tolerated by all the big players.<p>Much older examples include &quot;Plume for Twitter&quot; and &quot;FriendCaster for Facebook&quot;. In the case of the former, it was by agreement with Twitter: Plume used to be called Touiteur until Twitter made them change it.<p>You&#x27;re seeing it more lately because Google recently changed the Play Store&#x27;s app naming policy to forbid using the name of an existing service as part of your app&#x27;s main brand, only allowing a special clause (e.g. &quot;for [Service]&quot;) following the main brand. Also, around the same time, reddit changed their API policy to add a similar requirement.<p>In the long run, it&#x27;s going to be beneficial for app developers because now they can take their name and use it for apps across multiple services. For example, the developers of Plume could create a &quot;Plume for Facebook&quot; app and so on, so they end up with a whole family of Plume apps, each one for a different social network."
2015-06-12T14:53:59.000Z,Ask HN: How do you version control your microservices?,"Something seems very wrong here.<p>You shouldn&#x27;t have services rebuilding&#x2F;redeploying other services. We don&#x27;t insist that Facebook rebuilds their applications if my Facebook app changes. There should be either an (a) API client, (b) stub version of that service&#x27;s APIs or (c) deployed test service for any services you depend on.<p>The architecture of microservices is pretty simple. It is a mini version of how the internet works."
2015-07-12T07:19:08.000Z,React UI Builder,"I&#x27;m so excited with the technology coming out of facebook right now, imo it&#x27;s the best possible way they can attract new developers. I can&#x27;t wait for react native to come out for android so I can start playing with it!<p>I really think this has the potential to be something of a game changer. One of my pet favorite libraries is sqlAlchemy (python ORM) and I really want to write a server for graphql that automatically generates api routes for a sqlalchemy mapped schema!"
2015-07-05T19:36:11.000Z,Why Invest in Tools?,"Well our company believes in the power of tools to empower people and developers, and bring about social change. So I can definitely speak about this. And so can my cofounder: <a href=""http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platform&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;qbix.com&#x2F;blog&#x2F;index.php&#x2F;2013&#x2F;04&#x2F;a-new-kind-of-platfor...</a><p><i>&quot;Our job is not to just build Facebook, our job is to make the world more open and connected — and we in Product Infrastructure are tasked with giving the whole software industry the tools to help us accomplish this mission.&quot;</i><p>Then open source your social network and let it be hosted in a distributed manner around the world. Instead of shutting off access to APIs like this: <a href=""http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;"" rel=""nofollow"">http:&#x2F;&#x2F;techcrunch.com&#x2F;2015&#x2F;04&#x2F;28&#x2F;facebook-api-shut-down&#x2F;</a><p>When I see companies like Twitter and Facebook become open source like Wordpress for blogs, then we can say they really care more about making the world more open and connected instead of building their own silo."
2015-06-22T14:48:18.000Z,Show HN: WhatsApp for Desktop,"&quot;[Name] for [Service]&quot; is a popular format in the third-party client world, and it&#x27;s one that&#x27;s tolerated by all the big players.<p>Much older examples include &quot;Plume for Twitter&quot; and &quot;FriendCaster for Facebook&quot;. In the case of the former, it was by agreement with Twitter: Plume used to be called Touiteur until Twitter made them change it.<p>You&#x27;re seeing it more lately because Google recently changed the Play Store&#x27;s app naming policy to forbid using the name of an existing service as part of your app&#x27;s main brand, only allowing a special clause (e.g. &quot;for [Service]&quot;) following the main brand. Also, around the same time, reddit changed their API policy to add a similar requirement.<p>In the long run, it&#x27;s going to be beneficial for app developers because now they can take their name and use it for apps across multiple services. For example, the developers of Plume could create a &quot;Plume for Facebook&quot; app and so on, so they end up with a whole family of Plume apps, each one for a different social network."
2015-06-12T14:53:59.000Z,Ask HN: How do you version control your microservices?,"Something seems very wrong here.<p>You shouldn&#x27;t have services rebuilding&#x2F;redeploying other services. We don&#x27;t insist that Facebook rebuilds their applications if my Facebook app changes. There should be either an (a) API client, (b) stub version of that service&#x27;s APIs or (c) deployed test service for any services you depend on.<p>The architecture of microservices is pretty simple. It is a mini version of how the internet works."
2015-06-06T16:58:31.000Z,"Show HN: GraPHP, a PHP graph DB web framework","I’m really excited this was finally shared. A little backstory. This framework is the manifestation of ideas that Mike developed at Mixtent, a startup that produced three products in 2 years and eventually got acquired by Facebook.<p>The biggest advantage this framework has over other more traditional ones like RoR or Django is being able to model product ideas as a graph in code abstractions. This enables product engineers to rapidly prototype ideas (no need to interact with the DB), and jump into features built by other engineers (the node-edge API is standardized).<p>While the first product Mixtent built used more traditional django-style models, it resulted in features that became hard to manage over time. Each model had its own DB table and making changes was painful. The next two were built using a similar graph framework on top of CodeIgniter, and the benefits to prototyping speed and ease-of-understanding were visibly felt by all engineers (including myself)."
2015-06-05T17:39:12.000Z,Ask HN: Does a college degree hold more power than a strong portfolio?,"I see it this way: it&#x27;s a choice between being mostly a craftsmen&#x2F;engineer and being an applied scientist (that can also become a very good craftsmen&#x2F;engineer).<p>If you want to limit yourself to jobs that need only concrete skills, specific knowledge (e.g. knowing an API of some framework inside or out, or even knowing the nits and grits of a specific programming language) then a strong portfolio, and self learning might be enough. Although you will always be looked down upon by CS college grad peers once big O and Algorithms &#x2F; data structures discussions are coming up. Even if you know it better than them! (They just assume that you don&#x27;t as you don&#x27;t have a degree)<p>But the bigger downside if you truly choose to be solely a craftsmen is that you always have to keep up or your are out. Technologies change, and if you don&#x27;t change with them, you are obsolete. Even if you know HTML5, CSS, JavaScript and Rails to the level you memorized them and have built an impressive portfolio with 2000 stars in GitHub and 10 HN front page submissions. Ask yourself where is that guy who did this 10 years ago? I was one of those, I had Flash stuff that was the equivalent to the above. Got Macromedia site of the day, people in forums and myspace praised my work, I got my work presented in FlashForward conferences. 
Does it worth anything now? zip, nada. think 10-15 years from now. will a starred github JQuery plugin you wrote get you that job when you are 35? 45? 55?<p>In the other hand, if you want transferable skills that are not framework related, you need to either self learn it, (which is hard to prove) or get a degree. the degree serves the following:<p>10% - the actual knowledge (you can get it anywhere), 40% - the self discipline structure that forces you to &quot;self learn&quot;. think of it as a challenge, you pay tuition, they force you to stay focused and self learn by going to lectures &#x2F; watching them online. 30% - is the easy verification that you know those things, instead of reading your portfolio and looking for usage of data structures &#x2F; algorithms (e.g. anything that is not just &quot;trade skills&quot; or &quot;craftsmanship&quot;, future employers can just see your degree, and assume (if you got a decent GPA and it&#x27;s a decent university) that you got that at least covered. 
the last 20% is as others said - soft skills implied from graduating college. employers know that you can handle life on your own, handle deadlines, handle working with a team, handle pressure, and do something that is not immediate gratification.<p>You can always choose to also be a craftsman after you get your degree, in practice, specific technical skills are very important and valuable for employers.<p>If you don&#x27;t want to limit the jobs you can apply for, you need to prove 2 things -<p>1) that you have your CS basics (Algorithms,  Data Structures etc) otherwise you rule out many interesting jobs (not just at Google &#x2F; Facebook, but also many web startups that need more than just CRUD &#x2F; web &#x2F; mobile)<p>2) that you can actually code and use that knowledge in a specific tech stack.<p>You can prove #2 easily by going the portfolio way. 
You make it harder to prove #1 by going the portfolio way, and make it easier by going the degree way.<p>p.s. you can get a CS top 10 US education for about $10,000<p>Step 1: get an accredited US CS undergrad degree online for $4,000 at <a href=""http:&#x2F;&#x2F;uopeople.edu"" rel=""nofollow"">http:&#x2F;&#x2F;uopeople.edu</a><p>Step 2: apply to Georgia Tech Online Master of Science (degree is the same as on-campus degree, which is ranked #9 in the US for Graduate Computer Science degree) and pay only about $6,600 and you don&#x27;t need a GRE! (as opposed to the on campus one). you just need to get B and above in 2 core courses to be fully admitted (not always easy, but doable)<p>The amount of jobs you can do after that grows largely. And I think it will be a little more interesting than just doing the same old CRUD &#x2F; Mobile &#x2F; UI until you retire, and having to learn every 10 years or so a whole new paradigm.<p>Just think of all the build tools, frameworks that there are out there, you are a Grunt + Node + Angular guru today, tomorrow they will look for a Gulp + TypeScript + React guru, and in 10 years OO GUI building will make a comeback and people will return to writing UI using Swing &#x2F; MFC like structure as you can run it natively in a browser using ASM.js.<p>I&#x27;m doing web since 2000, and the amount of technology changes is overwhelming, what is hype today, might not be even in existence 10-15 years from now.<p>Programming principles, (OO, Functional, Reactive etc) and basic CS stuff (Algorithms, Data Structures) will likely stay here a little longer. Although you always have to keep up there too, the pace is though, a little slower."
2015-05-27T02:16:34.000Z,Show HN: An Isomorphic JavaScript Framework Faster Than React,"Which is the reason, it is an appropriate time to back and stay with React for the long term.<p>React has so many technical benefits that is all covered through so many posts - That declarative is better, Fast DOM manipulation with Virtual DOM is nice and a great development API and syntax sugar with JSX is wonderful.<p>Having said all of that, I think what seals the deal in favour of React is that it is being used by Facebook on their homepage for half a decade and in all likely hood going to be  continued to, which means you&#x27;re assured of incremental upgrades and regularly maintained and yet no radical shifts, which would warrant a large change for your product.<p>I think Facebook has hit the abstraction level perfectly with &quot;Product Engineering&quot; and &quot;Library Development&quot; or &quot;Infrastructure Development&quot;. This abstraction may not work well for all use cases. But for a large audience this is what is needed and where it is needed, it fits in perfectly."
2015-05-22T18:19:51.000Z,Not able to post of Facebook,Are you posting it from an outside site? Because Facebook changed their API on April 30.
2015-05-17T15:17:26.000Z,Ask HN: What's the best Web based API you ever used?,"Whatever web API I use I like it to be documented in automatic way so that is always up to date. Especially in first phase API changes, and I remember bad days spent in discovering the new version of some Facebook api before they get published..sort of MSDN black box hell"
2015-05-06T13:46:53.000Z,Oculus shipping in Q1 2016,"I would like to know what kind of computer and graphics card I need to make this thing work. Yeah, a cheaper VR headset pricepoint is nice, but not if you&#x27;re just unloading all the expensive components onto the buyer via a $1200+ PC purchase. Not to mention, as someone who suffers with motion sickness with traditional games, how will the Oculus work for me? Have they solved this riddle? Will they ever?<p>This is also why I see Sony having great success with its Morpheus headset. The PS4 is cheap as-is ($399) and if you already own one, its a no-brainer to go with their product. I&#x27;d be really surprised if Oculus ever goes mainstream. It still looks like an uber-nerds hobbyist toy like a, say, 3D printer, which technophiles have been telling us for years would be mainstream by now and in &quot;every kitchen.&quot;<p>Carmack isn&#x27;t stupid. He didn&#x27;t sell to Zuck because he thought he&#x27;d be moving 10&#x27;s of millions of product every year. He sold to Zuck because he knew that the shipping date doesn&#x27;t really change things for Oculus. Its still a very rough road to mainstream acceptance and economic competitiveness.  I can afford $299 for the headset, but I&#x27;m not interested in buying a super gaming box to make it work. Nor am I interested in being a beta tester for a technology known to be a bit wonky, cause motion sickness, have questionable 3rd party support, and Facebook ownership&#x2F;integration&#x2F;driver and API&#x27;s TOS.<p>This is what on top of what Valve is doing, which may just steal Carmack&#x27;s thunder as they have everything they need to make this work: the store, no relationship with unrelated businesses like social networking, large customer base, community goodwill, game publisher relationships, a decade plus in the game selling world, etc. If both the Valve set and the Oculus set go for $299, I can&#x27;t think of any reason to even consider the Oculus."
2015-04-30T21:34:29.000Z,"LinkedIn Q1 Beats on Sales of $638M, Shares Fall 25% on Weak Outlook","I wonder if there will be any sort of impact longer term as a result of them basically cutting off developer access to their current API.  Login, Sharing, and some other stuff remains - but you can&#x27;t access someone&#x27;s network graph.  Very similar to Facebook&#x27;s move.<p>I know everyone always says &quot;don&#x27;t build your business on another platform&quot; which I agree with.  And several businesses have recently closed because they did just that.<p>LinkedIn claims this change is because they want to have the best end-user experience.  Well - I think the main reason I have a professional graph is because I want to leverage my connections.  And frankly, LinkedIn&#x27;s use of that graph info is primarily focused on Finding Jobs and building Social Capital for your career.<p>By cutting off developers from the graph and community - I think Linkedin is actually NOT providing a better end-user experience... for other apps - LinkedIn is now a glorified Professional Resume served up via an API.  BUT as a LinkedIn user I want to leverage my graph in different ways - reconnecting with old connections, keeping track of people&#x27;s careers, connecting with vendors, and other use cases I can&#x27;t imagine - but other app developers can.<p>As usual, I know nothing will change LinkedIn&#x27;s mind.  Except they have changed my mind, about using LinkedIn on a regular basis except for finding jobs.   Over time I find Glassdooor is becoming better for that anyhow.<p>I personally have some feeling of Schadenfreude when I see them miss and only hope that cutting off developers hampers them in the long-term.   But I also recognize developers are a small part of their users and can effectively be ignored.<p>Fuck you, Linkedin - I wish I knew how to quit you."
2015-04-12T19:05:32.000Z,Twitter Cuts Off DataSift To Step Up Its Own Big Data Business,"Large companies don&#x27;t hate you, they are simply (like &quot;nature&quot; or the universe) indifferent towards your well-being or continued existence... which is perfectly understandable, really.  And, yes, this fact should really give pause to people who are thinking about basing an entire company around an API, portal or other service that is 100% controlled by a large company.  Any such dependency should be seen as the huge risk factor that it is.<p>And while innocent bystanders do get whacked from time-to-time, I find that more often than not when big companies change their TOS in ways that impact other companies, there&#x27;s actually a pretty decent reason behind the changes.<p>Facebook feeds got extremely spammy around the Zynga days, they are much better now (tolerable, at least, though still far from perfect).  Not sure what your google story is, but I&#x27;ve heard lots of startup folks complain about changes google has made to their algorithms or TOS policies that hurt them only to visit their sites or look at their apps and see that they were actually pretty spammy and really deserved the deranking."
2015-04-05T23:32:59.000Z,I won't be using Angular for my next projectand neither should you,"Overall, I like what Angular v1 does and how easy it is to be productive in it - I have helped save multiple companies&#x27; products (medium-sized codebases) because Angular can be extremely quick to iterate on top of and gives you so many tools for that productivity, while unit testing much of it (although the unit testing situation is not quite perfect).<p>I like using Angular relative to Backbone and Ember, although my experience with Ember was last a year ago, and the framework has progressed a lot since then. I like React over Angular 1 currently, especially since it supports robust server-side rendering solutions. React takes some ideas from Angular such as not being opinionated with the models, but makes writing the core of its components much nicer than Angular 1&#x27;s directives. It also does not take much opinions over the service architecture, which also makes me happy, but the tradeoff is that it leaves a lot of developers in the dark as far as how to organize code with it - that is why Facebook pushed the Flux pattern very strongly.<p>Angular 2 definitely took a lot of React&#x27;s good points and integrated them in better ways into Angular 2, or have plans to integrate them. Ideas such as supporting immutable data, virtual DOM (well, at least something similar to virtual DOM anyhow), and unidirectional data flow make their way into Angular 2. Robust dependency injection (no more using $inject or the hacky array syntax for DI) and better API for creating components come as more evolutionary changes from Angular 1. The declarative templates are also a lot simpler, as expression support is more limited than the broad JavaScript-like syntax supported in Angular 1. Shadow DOM being a first class citizen of the framework makes having to worry about component CSS being clobbered a problem of yesterday.<p>Overall, I am excited as a frontend developer - there are a lot of exciting things happening in the frontend world, and the ecosystem is maturing by leaps and bounds."
2015-04-02T18:15:08.000Z,What's the use for Bitcoin?,"I&#x27;m a big fan of both Sidney and Scott and the great work they did building Helloblock, one of the better Bitcoin API providers. It&#x27;s a shame that they couldn&#x27;t find a market for their product.<p>What&#x27;s a bigger shame is that they&#x27;ve both written articles disparaging Bitcoin technology now that they&#x27;ve decided to move on to other challenges.<p>We have a brand new data storage technology that allows for equal access read and write privileges on data that is permanent and shared equally across all nodes. It acts as a decentralized single point-of-truth. There has never been anything like this.<p>A simple ledger that operates as a type of currency is most basic thing that can be built.<p>Blockchain tech will disrupt almost every part of our industry. We won&#x27;t need centralized identity providers like Facebook. We can start to treat digital media as property and build up a viable economic system. We can actually account for people&#x27;s data use and the value of their contributions instead of this blind air gap between advertising and operation costs. We can create and transfer digital assets that represent all sorts of things.<p>Writers, photographers, musicians and anyone else who makes the content that fuels the advertising engines of Silicon Valley are becoming increasingly dissatisfied with how they publish work on the Internet. Putting something on a web page isn&#x27;t publishing. Posting something on Facebook or Twitter isn&#x27;t publishing. The act of publishing needs to be public and it needs to be permanent. Can you reliably quote from a blog or a tweet? No, you can&#x27;t, because the content could change. You can reliably quote from the second printing of a physical text because it would be almost impossible for someone to go through and change every copy.<p>All of this on a unified platform that isn&#x27;t controlled by anyone meaning there&#x27;s no danger of a private entity limiting access to APIs and destroying the hard work of developers, which Twitter has been doing for years.<p>I really hate to call them out because they&#x27;ve been very nice and incredibly helpful over the last year, but guys, come on, there&#x27;s no need to burn bridges. Just because you can&#x27;t see the possibilities doesn&#x27;t mean that they aren&#x27;t there."
2015-03-26T17:34:22.000Z,Lyft Profiles,Will this work after the required migration to Facebook API v2+ that is coming on April 30?  My understanding of one of the many changes this will drive is it will only be possible for apps to see your friends who also use the app.  Apps won&#x27;t be able to get full friends lists to do this kind of intersection any longer.<p>Or is there a special relationship exemption for Lyft?  Or maybe I misunderstand the FB changes.
2015-03-05T22:04:59.000Z,Anonymous Login,"This is a small feature change with a big marketing angle. Facebook has been cutting the minimum amount of information shared when you &quot;Connect with Facebook&quot; with each iteration of their API. At launch, Facebook literally shared all of your information and most of your friend&#x27;s information by default with no way to limit it. Then they pared it back to selective requests with a minimum of name, gender, and email. Then name, gender, and anoynimized email. Then it was name and anoynimized email. And now it is just an token specific to that site and nothing else.<p>They started by building what site owners and developers want - everything about a user without having to build a complex form and have the user agree to fill it out. And they ended up with what the user wants - to share nothing at all with the site owner and fill out no forms.<p>My guess is this will be stupidly successful, and good for absolutely no one, but Facebook."
2015-03-02T02:17:25.000Z,Ask HN: Who is hiring? (March 2015),"Software Engineer - REMOTE position (but HQ in San Francisco), Salary: $70k - $110k<p>Come help change the world by improving how people share and find useful information. We at Inscoop are an interesting startup doing social list sharing, reputation analysis, and social graph search algorithms, and we&#x27;re looking for enthusiastic people to join the team. There are many projects here where you can make a real impact, from the front-end design and implementation to the back end database architecture and data-mining strategies. We can&#x27;t wait to discuss the opportunities with you.<p>We&#x27;re looking for good software engineers with<p>* Essential skills:<p>- enthusiasm for learning new things and tackling big projects<p>- good communication<p>- enthusiasm for working with a motivated team<p>- comfort with working remotely and being proactive about team coordination<p>- familiarity with building web applications in AngularJS or ReactJS &amp; Flux&#x2F;Relay<p>- familiarity with Node.js&#x2F;io.js framework<p>- comfort using git for code management<p>* Nice-to-have skills:<p>- experience with a graph database<p>- experience with managing user accounts and security<p>- experience with managing database security<p>- experience managing web application aesthetics with CSS or some CSS derivative<p>- experience with web application security best practices and setting up user authentication<p>- building data APIs<p>- experience developing applications to interact with Facebook API, LinkedIn API, Google API, and Twitter API<p>- experience with deploying applications on services such as Heroku<p>- experience with designing mobile application interfaces<p>Please reach out to us at Inscoop (careers (at) inscoop.com). We look forward to talking with you."
2015-02-27T07:06:26.000Z,“Implement text editor DOM updates manually instead of via React”,"For context, here&#x27;s a discussion from the Atom forum that we had way back in August about the future of React in Atom:<p><a href=""https://discuss.atom.io/t/whats-the-status-of-react-in-atom/11456"" rel=""nofollow"">https:&#x2F;&#x2F;discuss.atom.io&#x2F;t&#x2F;whats-the-status-of-react-in-atom&#x2F;...</a><p>There are a few issues in play here:<p>(1) Atom wants to support a world in which every Atom package can install whatever version of a dependency it wants, including React. This is very common in Node (incidentally, this causes problems if you want to use singletons or instanceof in Node), but fairly uncommon on the Web (where React is primarily used). That is, it&#x27;s rare that you inadvertently load multiple versions of React in your single-page application. If you did, you would likely get an error when adding one React component as a child of another React component because of the way React vends ids. (Solutions are possible, but none is employed today.)<p>From Atom&#x27;s perspective, that is a problem. The only way they can work around it is by providing &quot;one true version of React&quot; with Atom core that all packages must use, but then Atom is forcing all packages to use a particular version of React. That would violate Atom&#x27;s philosophy of letting each package choose its own dependencies.<p>(2) This is not just an issue for React, but for any UI toolkit whose components are not guaranteed to interoperate across versions. To sidestep this issue, Atom has currently decided to use the DOM API&#x2F;HTML custom elements. I would call this the &quot;least common denominator approach,&quot; which satisfies Atom&#x27;s design goals, but fails to provide a higher-level abstraction for building UI in Atom. It&#x27;s a tradeoff.<p>(3) React does not currently support the shadow DOM or custom attributes, which is the new direction that Atom has chosen. As React has not yet been evicted from Atom core, I recently upstreamed a change (<a href=""https://github.com/atom/react/pull/1"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;atom&#x2F;react&#x2F;pull&#x2F;1</a>) to add one-off support for Atom&#x27;s primary custom elements, &lt;atom-text-editor mini&gt; and &lt;atom-panel&gt;, in the fork of React bundled with Atom. As I develop Atom packages using babel (formerly 6to5) <a href=""http://blog.atom.io/2015/02/04/built-in-6to5.html"" rel=""nofollow"">http:&#x2F;&#x2F;blog.atom.io&#x2F;2015&#x2F;02&#x2F;04&#x2F;built-in-6to5.html</a>, which has default support for JSX, building UI in React has been a lot of fun. However, the lack of support for custom attributes makes it difficult to do things like add an appropriate onChange handler to an &lt;atom-text-editor&gt; to update the React component&#x27;s state as shown in <a href=""http://facebook.github.io/react/docs/forms.html"" rel=""nofollow"">http:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;docs&#x2F;forms.html</a>.<p>(4) React is still version 0.x.x, which means it has not yet committed to a stable API. This makes choosing a version of React to bundle with Atom an even more uncomfortable decision for the Atom team, assuming they were willing to do so in the first place.<p>None of these items implies that there is something fundamentally broken about React&#x27;s model. It just means that the React team has some work to do in order to support Atom&#x27;s use case. The performance graphs cited in the original post are also significant (and of interest to the React team), but even if the performance problems were fixed tomorrow, that alone would probably not be enough for Atom to pull React back into core right now."
2015-02-25T19:42:46.000Z,PGP: There’s Life in the Old Dog Yet,"Which is why I proposed that UI: it works automatically. While using the system, it simply indicates to you as you compose the message &quot;Yes, the email address you are sending mail to belongs to the person you intend to message&quot; or &quot;No, that email address belongs to someone else&quot; or &quot;This is a brand new email address.&quot; This way when you are emailing your lawyer to set up a will, or you email your accountant with your tax info, you can be sure that (a) you are emailing just the right person and (b) that only they can read the communication.<p>While setting up the system, you are simply required to link your identity. Twitter, Facebook, LinkedIn, GMail, HN, the government all should allow you to easily link your identity. This should be a normal part of your account creation (this can tie in nicely with another change: getting rid of passwords and using a browser UI for identifying yourself a la Persona, but PGP based).  Basically when signing up for Twitter, it should optionally let you upload one of your public keys (via a nice browser UI no less). Twitter (Facebook, GMail, etc.) would then expose a nice API for querying by public key fingerprint: &quot;Who has 0xDEADBEEF?&quot; =&gt; &quot;@DeadBeef&quot;. Revocation, key updates, all that should be automatic: you revoke your public key and issue a replacement, all your services update automatically.<p>This is the point where lots of people will raise concerns about privacy: &quot;This means Twitter now must have access to my GMail account! WTF?!&quot;. No. This process must be voluntary and optional. If you want to have 200 different identities online, go for it. I don&#x27;t care to know your real name, I just care to know that I am talking only to the person I intend to talk to. Think emailing a well known developer on GitHub, having never met them. You don&#x27;t need their real name, you are only interested in them in so far as they publish OSS on GitHub. This allows you to prove that github.com&#x2F;example is @example on Twitter, example@example.com, example@gmail.com, and HN user &quot;example&quot;.<p>And the benefit to &quot;regular Joe&quot; is that when he emails his accountant, he can now send his credit card number and SSN without fear of eavesdropping."
2015-02-24T13:28:09.000Z,Is Blockchain Really the Killer App?,"&gt; There comes a point when it&#x27;s just no longer practical to store the entire blockchain<p>Why would you have to? The point of decentralisation is not that everyone has a copy of the truth. It&#x27;s that a sufficient number of nodes have a copy of the truth, such that you can check a number of them and easily verify the veracity of the data. Many blockchain applications run not by querying their own blockchain but rather querying a number of trusted sources via their API. Coinbase, Bitpay, Chain.com, Blockcypher etc all offer APIs to interface with their blockchain nodes and others.<p>It&#x27;s like saying Facebook will never work because you can&#x27;t possible store the worlds&#x27; photos on everyone&#x27;s smartphones. You don&#x27;t have to, Facebook stores it on their server. Similarly we will see, and already see, dedicated servers that store the blockchain, and as long as you have enough independent ones you can maintain decentralisation just as if you were hosting your own node.<p>There&#x27;s absolutely no need to host the blockchain on small embedded devices any more than any other data, like music or photos we normally host on dedicated servers instead.<p>&gt; but truncating the chain (or only storing some kind of &quot;working set&quot;) isn&#x27;t feasible either.<p>Yes it is. What makes you say it isn&#x27;t? Pruning the blockchain is something that&#x27;s currently being worked on.<p>The idea is that if I send you $1 a million times and you send it back $1m times, every day, for the next 1 billion years, we could either store terabytes and terabytes of data of all these transactions, or we could store the end result (= no change occurred) and the last couple weeks of transaction data. The rest can be pruned. Because each block has a hash of all its transactions, and this hash is used to mine the next block (hence a chain of blocks, blockchain), we needn&#x27;t store each individual transaction, we have the hash to verify the truth of transactions.<p>We might have some universities saving all transactions for posterity &amp; research, and some businesses for data mining, but the vast majorities of nodes that just need to secure the network can indeed, without security issues, not store long-spent outputs. (i.e. bitcoins that have already been spent many times over. e.g. if I give a dollar to you and you give it to the next guy, and he to the next girl, and so on 100 times, at that point there&#x27;s absolutely no reason to store on every node the fact I gave a dollar to you for the security of the network.)<p>&gt; Not to mention the gargantuan download that&#x27;s required for that initial setup to get up to date with the latest network transactions.<p>Again, no need to have all redundant transactions. The pruned blockchain would currently be under a gigabyte large. Second, headers-first has already been implemented which made the initial setup much, much faster.<p>Beyond that, we mustn&#x27;t forget that the average American makes 2 transactions a day. And one such transaction is about 400 bytes or so, in bitcoin. If you compare this to tweets, or an hour of netflix, it&#x27;s puny. If you count up all the data, it&#x27;s about $8 to store one day of all of US consumer transactions on a retail harddrive. Imagine the cost of storage for Mastercard for one of their nodes was $8, and instead of just powering a fraction of US retail, they&#x27;d literally handle every single transaction by themselves and store them all for $8. Even if you wanted to have thousands of nodes and store the last year of data (and given the velocity of money, you wouldn&#x27;t have to as again, you can prune data after money has been spent a couple times), that&#x27;s a puny amount of money to power an entire consumer financial system of the world&#x27;s biggest economy. And given storage, like CPU and bandwidth, on a 50-60% yoy growth rate (Kryders, Moore&#x27;s and Nielsen&#x27;s laws), I think by the time bitcoin becomes important enough to run 100% of US retail (which is likely never, but hypothetically speaking), that $8 will have dropped to below $0.10 easily.<p>I know I&#x27;m taking big shortcuts here but this is just to illustrate the economics are extremely favorable today and in the future. I don&#x27;t know if bitcoin will succeed or fail, but I&#x27;m pretty near certain it won&#x27;t fail because storage&#x2F;cpu&#x2F;bandwidth isn&#x27;t affordable enough for nodes to make it viable to run the network. I and many others have looked into this quite a bit and these aren&#x27;t big problems. Bitcoin has big obstacles (no gigantic consumer benefits in a world of decent fintech like every OECD country to use bitcoin directly, is one), but storage probably isn&#x27;t one of em."
2014-12-03T20:55:32.000Z,Hacking PayPal Accounts with one click,"I&#x27;m having a hard time understanding this. My mental model of the situation is that websites figure out which user is interacting with them via a &quot;session&quot; cookie, which is only set once the user successfully authenticates. The CSRF &quot;token&quot; is a value associated with this session (that may or may not change on every request) that&#x27;s included with all client-side requests as a way to guarantee that whoever is making the requests is doing so from the site&#x27;s pages. For instance, if I log in to Facebook, then in a new tab open up &#x27;somemalicioussite.com&#x27;, the malicious site might make force my browser to make a request to &#x27;facebook.com&#x2F;some-private-api-endpoint&#x27; to try to figure out who I am. Because it doesn&#x27;t have the CSRF token, it fails.<p>I&#x27;ve never heard of using the CSRF token itself to answer the &quot;who is this user&quot; question. Has PayPal been using a single value for both the session cookie and the CSRF token? That seems fundamentally broken to me but it&#x27;s more likely I&#x27;m misunderstanding the bug."
2014-11-20T19:57:12.000Z,The Fall of Facebook,"Facebook, the product, is no longer this super sexy app that college kids are checking out. Looking for Facebook to be that, you will probably predict its future demise.<p>But that&#x27;s not what Facebook <i>is</i> anymore. Facebook is the social graph expressed in Internet form, and is so interwoven with the fabric of the Internet that it&#x27;s difficult to avoid, even if you&#x27;re intentionally doing so.<p>Some products phase in and out, that&#x27;s for sure. I think Zuck&#x27;s realized the potential for that to happen, and once he got on the top of the totem pole began preparing for it. He turned FB from an app into a social graph and API that is everywhere, and now he&#x27;s paying from $1B (Instagram) to $19B (WhatsApp) to get some of his biggest would-be enemies to join him. He does not screw around with the Innovator&#x27;s Dilemma.<p>I&#x27;ll be the first to admit I <i>despise</i> my current Facebook feed. It&#x27;s full of clickbait articles mingled with the occasional update from someone whom I may or may not care about. That being said, I have tried to delete Facebook multiple times, and to no avail. I still have my hopes that they&#x27;ll change the algorithm a bit and kill the effectiveness of the clickbait to the same extent they killed the spamminess of those social games and widgets. (Although they still exist and are annoying, they&#x27;re an order of magnitude less annoying than they used to be.) But, despite my best efforts to avoid it, I still check my Facebook feed at least daily.<p>What pulled me back? At first, it was that Facebook was integrated with Spotify. I had to create a new account and build up all of my playlists, songs, etc. from scratch. That was kind of a pain. Then I deleted Facebook again. I ended up missing a party that was <i>only</i> planned on Facebook. Then I missed the news that a friend was engaged, and another friend was pregnant. Then I couldn&#x27;t log into my Kiva account to redistribute the repayments I had received because I had used Facebook to sign up. Facebook is just an incredibly, incredibly sticky product. Network effects are a bitch.<p>Sure, hackers will say, &quot;Well your friends should have called you instead of putting it on Facebook.&quot; But they didn&#x27;t. Even though I&#x27;m not in college, if I&#x27;m not on Facebook I&#x27;m missing the party. (Even though &quot;the party&quot; is now simply knowing that my friend finished med school and is moving to Michigan.)<p>Facebook isn&#x27;t as sexy as it used to be, but it has become increasingly difficult to avoid. Think about that - we have to figure out ways and work hard to <i>avoid</i> a product. That&#x27;s why a significant proportion of the Internet&#x27;s users log in to Facebook <i>every day</i>. Unless some major shift takes place, Facebook isn&#x27;t going anywhere anytime soon."
2014-11-16T23:33:44.000Z,Netflix Pulls Plug on Public API,"It was called Queueview. I couldn&#x27;t find its homepage (in sure it was taken down), but the Facebook page, complete with all the notices about the API changes is here: <a href=""https://m.facebook.com/profile.php?v=timeline&amp;filter=1&amp;id=310709142291577"" rel=""nofollow"">https:&#x2F;&#x2F;m.facebook.com&#x2F;profile.php?v=timeline&amp;filter=1&amp;id=31...</a>"
2014-11-16T21:30:58.000Z,Netflix Pulls Plug on Public API,"What the name for when a company seems to have stagnated, based on the lack of change in their front-end, even though you&#x27;re sure there&#x27;re engineers diligently toiling away at things?<p>Netflix&#x27;s frontend has not have any real improvement in quite a while. &quot;Share on Facebook&quot;? &quot;Kids Mode&quot;? &quot;Watched by Piper Chapman (Orange Is the New Black)&quot;? C&#x27;mon!<p>Where&#x27;s the Rotten Tomatoes or IMDB integration? Why does their search still have zero options to help you search? Where&#x27;s Netflix&#x27;s rendition of A Better Queue or Instant Watcher?<p>The shutting down of the public API wouldn&#x27;t be such a big deal if they paid more attention to their frontend. It also seems that Netflix thinks that if they don&#x27;t bring up the fact that there are movies that aren&#x27;t on Netflix, we won&#x27;t notice.<p>The next company that comes to mind is Craigslist. I <i>know</i> there are engineers there working on hard problems (the scale they operate on is amazing) but in the midst of the current mobile and UX revolution, all they&#x27;ve manged to do is add a frame around the results page so it&#x27;s easier to search again?<p>OKCupid is another site that comes to mind where it looks like the front end is just stuck and has stopped progressing.<p>(Gmail gets a pass because Google just gave up and made Inbox instead.)"
2014-11-10T19:56:43.000Z,End-user programming with ConceptJS,"&gt; What&#x27;s your demographic?<p>Javascript developers for now.<p>&gt; What does &quot;Web 3.0 ready&quot; even mean<p>If you develop a page in ConceptJS, another user&#x2F;developer can programmatically access the data elements in that page. In other words, all pages are human and machine readable.<p>In traditional web-application frameworks, the HTML is the only thing that the user sees. To access the data that goes into that page, the user needs to either use an alternate API or resort to data scraping. With ConceptJS, the user can directly access the data elements that go into creating the page by looking at the structure of the concepts.<p>&gt; How do you define &quot;User programmable&quot;? Who&#x27;s the user here, and what can they program?<p>Think of visiting your Facebook wall and changing the code that runs behind it directly through the browser. This is what Wikipedia lets you do for its Wiki pages. ConceptJS lets users do the same, but for a web application. The same scenario without ConceptJS, would require the user to download the Facebook source code, understand how it works, find out which file&#x2F;module delivers the Facebook wall, and make the change there."
2014-10-28T23:19:34.000Z,React v0.12,"Their earlier blog post gives reasons for each of the API changes they made:<p><a href=""https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog&#x2F;2014&#x2F;10&#x2F;14&#x2F;introducing-react-elements.html"" rel=""nofollow"">https:&#x2F;&#x2F;facebook.github.io&#x2F;react&#x2F;blog&#x2F;2014&#x2F;10&#x2F;14&#x2F;introducing...</a>"
2014-10-25T19:41:18.000Z,Angular 2 Core,"Too many unknowns is way too broad of a reason when it comes to JS. JS is already the language of unknowns. It really depends on the framework, timing of things, people behind it. Angular is by Google, but also Google is pushing Web Components at the same time, which can integrate with Angular 2, but it challenges it as well. Also with Angular 2&#x27;s goals being known for a long time, anyone could tell that ES6 would be a dramatic wave of change to the framework.<p>With JS, all the frameworks and libraries out there are just a few years old. Angular is about 5 years old, but Google doesn&#x27;t even use Angular in their sites, which should be extremely telling (along with the complexity learning and figuring out the API). In fact I think Google isn&#x27;t even planning on Angular on any Google sites in the future. They are waiting until Web Components are finalized.<p>With React, it is apparently mature enough, it is used on Facebook (1 billion users), Instagram (a child company of Facebook, like Youtube for Google), Khan Academy, Github (github issue viewer), AirBnB, CloudFlare, and a lot more:<p><a href=""https://github.com/facebook/react/wiki/Sites-Using-React"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;react&#x2F;wiki&#x2F;Sites-Using-React</a><p>In the JS world, there&#x27;s a lot of reason to keep moving forward with tech. Sure it doesn&#x27;t have to be the latest and greatest, but since JS is such a &quot;poor&quot; language, a lot of these newer tools, features, framework, and libraries help build more professional, quality code. Shying away from newer tech (again not the latest and greatest, but away from tech that improves quality of code) highlights obstinance and ignorance about the technology behind it, as well as how little someone understands the industry today."
2014-10-25T17:42:59.000Z,Angular 2 Core,"I don&#x27;t think this is a flame war at all, I think people are pissed at all these breaking changes. I&#x27;ve seen them coming from miles away, I&#x27;m still a little distant from Angular until it&#x27;s API modernizes and matures.<p>I think people like to mention React because every since it was publicized last year Facebook has had ES6 integration in mind. With Angular, 2&#x27;s goals have been up for a long time but I don&#x27;t think many people thought about how much the API would have to change to accommodate the new features."
2014-09-26T21:36:54.000Z,A Stolen Video of My Daughter Went Viral,"There&#x27;s this [1] - and how would you know to change it. Then there&#x27;s other cases where their API had bugs that made your private information publicly available for 3rd parties [2].<p>The reality is that once you upload your private data to Facebook, you are at Facebook&#x27;s mercy in terms of keeping that data private.  They have made a lot of improvements, but essentially you have to trust them to protect you.<p>[1] <a href=""http://www.wired.com/2009/12/facebook-privacy-update/"" rel=""nofollow"">http:&#x2F;&#x2F;www.wired.com&#x2F;2009&#x2F;12&#x2F;facebook-privacy-update&#x2F;</a>\n[2] <a href=""http://www.theverge.com/2011/05/10/facebook-apps-leak-personal-data-privacy"" rel=""nofollow"">http:&#x2F;&#x2F;www.theverge.com&#x2F;2011&#x2F;05&#x2F;10&#x2F;facebook-apps-leak-person...</a>"
2014-09-08T14:30:15.000Z,How a 48h hackathon led to a pivot,"There&#x27;s no argument or lesson learned from it. Its simply a story.\nThe backstory is that I got so frustrated at Facebook&#x27;s api changes that I had almost lost hope on anything working with beepl. And just when i was abwt to give up, i said &#x27;fuck it&#x27; and did a mobile version for a change. \nAnd this happened."
2014-09-06T22:03:47.000Z,There’s Something Rotten in the State of Social Media,"I&#x27;ve said it a lot on HN, but in my opinion, there&#x27;s nothing rotten in the state of social media. Social media itself is inherently rotten.<p>Twitter, Facebook, et al taking away users&#x27; rights, pushing crappy updates and changes, while at the same time using creepy advertising tactics to make money and addictive functionality to keep you involved is Twitter, Facebook et al doing exactly what they were designed to do. Their job is to make their shareholders money by exploiting the people who use their service, and they&#x27;re doing, I&#x27;d say, pretty well.<p>I think Facebook knows full well that nobody likes Facebook Messenger, the newsfeed, the fact their data is never deleted, the obnoxious Zyngames, and so on. They don&#x27;t care. People will use their service anyway and they&#x27;ll make money. Twitter knows people probably wouldn&#x27;t like curated lists, and they&#x27;ll still do it if they think it&#x27;ll make them money (just like they know that developers have no choice but to accept their draconian API terms).<p>I have a lot of objections to social media - on a philosophical basis and a business one - but I don&#x27;t feel it&#x27;s reasonable to say it&#x27;s &quot;dying&quot; or &quot;getting worse.&quot; From the perspective of the people running the companies (the only perspective said companies care about), it&#x27;s doing just fine."
2014-08-30T15:30:49.000Z,"With $30M More in Hand, IFTTT Looks to the Internet of Things","I really like automators like IFFT as they save the time from having to yet again keep up with breaking API changes from crappy company xyz (ex: Facebook). The problem with all of them seems they don&#x27;t actually work reliably.<p>I tried IFFT a number of times. I&#x27;d love for it to work, but I only use it as a &quot;it&#x27;s ok if this breaks, missing data, etc.&quot; tool. Admittedly this is not 100% their fault as you are at the mercy of the shoddiness of other APIs, but bugs upon bugs and the less than reliable nature of IFFT actually executing things in a timely, durable manner makes it 100x less useful and impossible to build on top of for real apps.<p>I also feel that from a business point of view, relying on other people&#x27;s services is consistently a trap. Whether it&#x27;s social networks like Twitter, COTS like SharePoint, or something like Evernote, it&#x27;s always a trap. These businesses can break your code at any time they choose, shut off your service, or simply go under. It takes a lot of work circumventing their bugs and terrible APIs as well. Hats off for trying, but I don&#x27;t feel like a company like this is usually a good long-term investment.<p>Add to these problems the fact that most internet &quot;typical&quot; users would never use IFFT or &quot;get it&quot; the way it&#x27;s presented today. Moreover, most programmers want more control, something more powerful, or can just do everything here better themselves exactly to their use cases. Not seeing how this company is worth much even if it is &quot;useful.&quot; Profitable != useful many times."
2014-08-21T10:01:17.000Z,Show HN: Free social media publishing for teams,"Developer here. I created this because it was getting very difficult to manage teams and social networking accounts. Because every time a team member would be re-assigned, the social networking account passwords would have to be changed. Security was becoming an issue. This allows you to publish to unlimited Facebook, Twitter accounts. Am adding other services like LinkedIn and Google+ (if they give API access) soon. This service is absolutely free as compared to any other options available online (Buffer for Businesses, Hootsuite etc.). You can add unlimited team members as well as accounts. You can schedule posts as well as use the recommended feature. Happy to answer any questions that you might have. Thank you for taking the time to read this."
2014-07-14T02:11:22.000Z,Hardware Case Study: Why Lockitron Has Taken So Long To Ship,"Wow, you are all over this thread. I take issue with the way you are jumping in here with a lot of assumptions. Please give me a moment to respond to your assertions point by point.<p>There is nothing glamorous about airing our faults and where we went wrong along the way, the points you enumerate were our beliefs to a &#x27;T&#x27; when we launched our second product a year and a half ago. A handful of these are right while others are mostly wrong or misguided.<p>1) This is a tough one to address. I see elsewhere in this thread you made the same mistake we did - namely thinking we could get 2mA with PS-POLL. While possible in the lab, that is simply not the case when working under conditions we&#x27;ve seen in the wild. Hypothetically if that were true you could see near instantaneous WiFi all the time. We were optimistic this may be possible but didn&#x27;t want to bet on it. We made the call that WiFi is advertised with instant response when someone is at the door and delayed response when in power save mode. If there is confusion we are quick to correct on Facebook, Twitter, and even our own blog[1]. Firmware updates to our WiFi chipset look promising but we are not committing to this.<p>2) Determining intent is a hard problem but hardly a fool&#x27;s errand. We don&#x27;t do this through just one BLE radio using RSSI alone as your comment implies[2]. The examples you give are both solvable with what we&#x27;ve built today. The harder problems come from platform inconsistency between iPhone and Android API&#x27;s. Android for instance only recently announced BLE support and when they did, the phone could only operate in one out of the two roles. Clearly other companies think similar home vs away intent is worth developing too[3][4].<p>3) Building a proper prototype without functional mechanicals is insane. Don&#x27;t do this. The other huge rabbit hole here is the word &#x27;reliably.&#x27; It&#x27;s like a client of a web design firm asking for 100% uptime.[5] The best you should do at the &#x27;hardware startup making a prototype&#x27; phase is to get it working on your target platform and solve known bugs so it works for 90 to 99.9% with loose specs or 100% of the time under tight optimal conditions. That said, things change. The way we were doing BLE security when we launched was thought to be secure. A ShmooCon talk instilled some doubts that while not broken it may not be the best foundation [6]. We rebuilt a lot of that with Diffie-Hellman and HMAC instead. We saw some connectivity issues with the new approach that were subsequently addressed. Other things change too. Our BLE chip switched from not using signed licenses to using signed licenses between updates. This caused us a bunch of frustration.<p>4) 40 hours of work to review a design is probably too little. We spent closer to 300 hours on the EE side with the most senior hacker we knew [7]. We worked with another firm on mechanics for 11 months prior to launch. In retrospect that feels about right for how much weight mechanical problems are vs electrical.<p>That $25-$30 number you site IS misleading. As an analogy, it is almost certainly possible to build a robot which can walk a straight line across a plastic table for this but getting it to walk across arbitrary terrain will cost you if your operating specs are unbounded (think Mars rover.) We know how to build a device that fits over locks for $25 without PCB - we are not happy with what level of performance that gets us.<p>5) This product however is not designed to be a replacement lock. We have made one of those in the past[8]. Saying something is wrong&#x2F;inefficient is true for anything asked to do something other than what it is made for. This model of Lockitron is designed to fit over a wide variety of existing locks precisely so that it can work for renters who can not change their locks. It is designed to do it in a way that it does not requires you to take your lock apart so it can be installed quickly and with next to zero mechanical aptitude. It does these things insanely well.<p>The numbers you site for gear vendors are again misleading. Yes, one can get gears for this cost in this time but you are shifting the burden of development and tooling elsewhere. Making this tradeoff in this case gets us towards a local maxima that is not the product&#x27;s desired function.<p>6) This is a bit naive. You don&#x27;t build to the spec if you&#x27;re seeing different results in the field. We saw this to be the case with sticky locks and jammy door frames. Other new locks can be put on a clean installation, we have to work with what&#x27;s there. Similarly, the Bluetooth 4.0 and 4.1 specs promise a lot of things which neither Apple nor Android support. In this case we build for what effects our customers experience not a certification checkbox - especially when that means exceeding the certifications standards.<p>And if anything that is the takeaway here. Building something to spec is a finite task with an estimable amount of work and calculable delivery date. Having real world conditions conflict with what was spec&#x27;ed introduces delays. Having conflicts across your product from metals and plastics up to software interfaces means these delays propagate.<p>You make the tough calls. You ship.<p>[1] <a href=""http://blog.lockitron.com/post/84539548097/debugging-jams-wifi-battery-notifications"" rel=""nofollow"">http:&#x2F;&#x2F;blog.lockitron.com&#x2F;post&#x2F;84539548097&#x2F;debugging-jams-wi...</a>\n[2] <a href=""http://community.lockitron.com/t/sense-will-it-sense-if-my-phone-is-inside-or-outside-of-the-house/161/3?u=pmg"" rel=""nofollow"">http:&#x2F;&#x2F;community.lockitron.com&#x2F;t&#x2F;sense-will-it-sense-if-my-p...</a>\n[3] <a href=""https://developer.nest.com/"" rel=""nofollow"">https:&#x2F;&#x2F;developer.nest.com&#x2F;</a>\n[4] <a href=""http://blog.dropcam.com/tag/dropcam-alerts/"" rel=""nofollow"">http:&#x2F;&#x2F;blog.dropcam.com&#x2F;tag&#x2F;dropcam-alerts&#x2F;</a>\n[5] <a href=""http://serverfault.com/questions/316637/100-uptime-for-a-web-application"" rel=""nofollow"">http:&#x2F;&#x2F;serverfault.com&#x2F;questions&#x2F;316637&#x2F;100-uptime-for-a-web...</a>\n[6] <a href=""https://lacklustre.net/bluetooth/"" rel=""nofollow"">https:&#x2F;&#x2F;lacklustre.net&#x2F;bluetooth&#x2F;</a>\n[7] <a href=""http://en.wikipedia.org/wiki/Lee_Felsenstein"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lee_Felsenstein</a>\n[8] <a href=""http://www.wired.com/2011/05/lockitron-unlock-your-home-with-your-cellphone/"" rel=""nofollow"">http:&#x2F;&#x2F;www.wired.com&#x2F;2011&#x2F;05&#x2F;lockitron-unlock-your-home-with...</a>"
2014-06-30T02:31:39.000Z,Tesla Model S JSON API,"As with a lot of things in REST, the answer lies...in your browser. How did you know how to answer that last comment? You clicked a link for it. Not everything about REST can be answered by &quot;just look at your browser&quot;, but a lot of things can.<p>If you follow a link you don&#x27;t care what the URL is. You never needed to type out &quot;&#x2F;reply&quot; to use Hacker News, you don&#x27;t need to do it to use an API. That&#x27;s what the article is about.<p>The actual URL is unimportant, you just need to know what the link for &quot;&#x2F;api&#x2F;vehicle&quot; returns to do something useful with it. Like you knew that &quot;&#x2F;reply&quot; would give you a form with a place to type out a reply.<p>&gt; I don&#x27;t even know how I&#x27;d write a client against a server that arbitrarily changes endpoint URIs.<p>The thing is, you don&#x27;t have to. I can write one for you and you&#x27;ll never need to write another one again. You could use it and just have to implement the part that matters to your application, the semantic of it. You wouldn&#x27;t need to hardcode anything, or even handle URIs at all.<p>You could use it for Tesla&#x27;s API, Twitter&#x27;s, Facebook&#x27;s, whatever. If they used links you could use the exact same client for anyone, just needing to re-write the logic part (like creating a post on Facebook, a tweet on Twitter, etc).<p>Problem is hardly anyone actually implements links so you can&#x27;t do that. It sounds like utopia but it&#x27;s just the product of extreme decoupling. It&#x27;s not really any different than browsers."
2014-06-26T01:34:42.000Z,Tech is moving too fast for me: I'm out.,"&gt;Snapchat launches a fantastic re-design.<p>so? how does this affect your product?<p>&gt;Facebook changes its newsfeed algorithm with significant implications for marketing agencies and small businesses. \nFacebook replaces its complete Android SDK with a new API<p>yeah, that sucks.<p>&gt;Apple releases a completely new programming language.<p>so? you don&#x27;t have to use it.<p>&gt;Apple releases new versions of iOS and OS X.<p>if your app works on Mavericks, it works on Yosemite.  if it works on iOS7, it works on iOS8<p>&gt;Google brings Android to TV and your wrist.<p>You don&#x27;t have to integrate with it.<p>&gt;They release a brand-new Android version.<p>same comment as the apple OS releases<p>&gt;A new cross-platform design language.<p>You don&#x27;t have to use it.  Your product already has a design, and a brand.  consistency is important.  Your users are probably even more afraid of change than you are.  Don&#x27;t inflict google&#x27;s new design on them unless they&#x27;re begging for it.<p>&gt;They replace the Android VM.<p>your app probably already works with it.  most do.<p>&gt;Notifications change how they work.<p>no they didn&#x27;t.  they added new features, but your old notifications still work like they did yesterday.<p>&gt;This. And that. And this. And that.<p>Build your product, make it as good as it can be, and build what your customers are actually asking for.  Stop caring about all that crap the tech blogs are posting, and focus on what your customers are asking for.  You don&#x27;t have to react to everything that theverge reports on, 90% of it goes away after a couple months or has a similarly small effect on the industry."
2014-06-26T01:33:52.000Z,Tech is moving too fast for me: I'm out.,"I&#x27;m the opposite. Every &quot;new&quot; thing to me just seems to be the same old thing with a new coat of paint. Maybe I&#x27;m just nostalgic but there are very few things that seem <i>magic</i> to me anymore. By magic I think I mean that either I have no idea how its done or, better yet, its something that&#x27;s suddenly done <i>so well</i> I can&#x27;t figure out how they pulled it off.<p>Seeing an Oculus Rift actually <i>work</i> for the first time was one such example. A new Facebook API that &quot;changes everything&quot; is really really not."
2014-06-19T09:31:32.000Z,Facebook was down,"(S)he&#x27;s talking about if you rely on an API&#x2F;Third Party service over hosting.<p>You can packup your application and move it to Amazon&#x2F;Rackspace&#x2F;DigitalOcean, but if you use Facebook login exclusively or use a third party API for a core service and they decide to change (as GP suggests), you&#x27;re fucked."
2014-06-18T20:43:01.000Z,Your FBLogin sucks and you don't know it,"I have been asked many questions and here are more details\n1- FB Api did not return anything when I asked for the email\n2- I am not sure but I think that during the verification process of your account, Facebook automatically change your primary email address. All the users that had a phone number instead of their email had their old college email address that did not work anymore and Facebook deleted it from their account\n3- A way to monitor the number of errors is to log all the FB Login error in your code or with Mix Panel"
2014-06-01T14:20:32.000Z,Ask HN: Who is hiring? (June 2014),"SpruceMail - <a href=""https://sprucemail.com"" rel=""nofollow"">https:&#x2F;&#x2F;sprucemail.com</a> - Full Time, Washington, DC or REMOTE<p>Looking for someone that not only creates working software but well-crafted software. Someone who will respond to change but also steadily add value to it.<p>Looking to seamlessly integrate with our partner&#x27;s API in order for customers of both platforms to have a dead simple and streamlined experience. This will cover the entire stack from backend api integration and ongoing sync up through the front-end integration&#x27;s.<p>When you aren&#x27;t actively working on one of these integration&#x27;s you&#x27;ll be helping to build the next generation features for our application.<p>&gt;&gt; Technologies &lt;&lt;<p><pre><code>  * Ruby\n  * Rails\n  * CoffeeScript\n  * EmberJS\n  * Redis\n  * Postgres\n  * SCSS\n  * (very possibly soon) RabbitMq\n</code></pre>\n&gt;&gt; Core Values &lt;&lt;<p><pre><code>  * Continuously deliver success\n  * Be extremely happy with your work\n  * Not be bogged down with meetings and other non-tech stuff\n  * Have hardware, software, and freedom necessary to do the above\n  * Refactor frequently\n  * Release often\n  * Explore their own ideas\n  * Choose a work environment and schedule which suits you\n  * First and last: Continuously deliver success!\n</code></pre>\n&gt;&gt; What is SpruceMail? &lt;&lt;<p>We&#x27;re building out the next generation marketing platform that connects together traditional email marketing into the social world. While we get to do the complicated stuff on the backend we try to keep it as simple as possible for the user to use.<p>We&#x27;ve been around for 5 years in the social advertising space and managed more than $250 million in Facebook ad spend. Have managed many of the world&#x27;s leading brands including Samsung, McDonalds, PepsiCo, Target, University of Phoenix, Walmart and Zynga.<p>&gt;&gt; How to apply &lt;&lt;<p>Send me an email: software-engineer AT sprucemail.com. Preferably mention hacker news."
2014-06-01T14:20:32.000Z,Ask HN: Who is hiring? (June 2014),"SpruceMail - <a href=""https://sprucemail.com"" rel=""nofollow"">https:&#x2F;&#x2F;sprucemail.com</a> - Full Time, Washington, DC or REMOTE<p>Looking for someone that not only creates working software but well-crafted software. Someone who will respond to change but also steadily add value to it.<p>Looking to seamlessly integrate with our partner&#x27;s API in order for customers of both platforms to have a dead simple and streamlined experience. This will cover the entire stack from backend api integration and ongoing sync up through the front-end integration&#x27;s.<p>When you aren&#x27;t actively working on one of these integration&#x27;s you&#x27;ll be helping to build the next generation features for our application.<p>&gt;&gt; Technologies &lt;&lt;<p><pre><code>  * Ruby\n  * Rails\n  * CoffeeScript\n  * EmberJS\n  * Redis\n  * Postgres\n  * SCSS\n  * (very possibly soon) RabbitMq\n</code></pre>\n&gt;&gt; Core Values &lt;&lt;<p><pre><code>  * Continuously deliver success\n  * Be extremely happy with your work\n  * Not be bogged down with meetings and other non-tech stuff\n  * Have hardware, software, and freedom necessary to do the above\n  * Refactor frequently\n  * Release often\n  * Explore their own ideas\n  * Choose a work environment and schedule which suits you\n  * First and last: Continuously deliver success!\n</code></pre>\n&gt;&gt; What is SpruceMail? &lt;&lt;<p>We&#x27;re building out the next generation marketing platform that connects together traditional email marketing into the social world. While we get to do the complicated stuff on the backend we try to keep it as simple as possible for the user to use.<p>We&#x27;ve been around for 5 years in the social advertising space and managed more than $250 million in Facebook ad spend. Have managed many of the world&#x27;s leading brands including Samsung, McDonalds, PepsiCo, Target, University of Phoenix, Walmart and Zynga.<p>&gt;&gt; How to apply &lt;&lt;<p>Send me an email: software-engineer AT sprucemail.com. Preferably mention hacker news."
2014-05-20T18:14:53.000Z,Distributed Systems and the End of the API,"<i>I&#x27;ll certainly grant that the latter comes with a body of current programming practice and infrastructure, but that hardly an endorsement of its relative quality or suitability for the job-to-be-done.</i><p>You don&#x27;t see &quot;comes with a body of current programming practice and infrastructure&quot; as an endorsement for &quot;suitability for the job-to-be-done&quot;? :)  It doesn&#x27;t bear directly on the main discussion we&#x27;re having, but for people who are trying to get things done, I would say it&#x27;s quite a strong endorsement of a particular practice to say that we understand how to apply it successfully and that there are tools, known patterns, and infrastructure around it.<p>Verifying authorization on a set of operations is hard or easy depending on what the operations are.  High-level operations that correspond to the actions that users are presented with in the user interface tend to be easy to secure and validate.  Low-level database operations tend to be hard to secure and validate as your data model becomes complicated, because you basically have to reverse-engineer the high-level operation that licensed the low-level operations (which could be many and spread across different tables).<p>I think the best way to expose a Facebook wall (say) via CRDT is to define a Wall datatype whose operations are the permitted high-level actions you can take on a wall.  Then they are easy to validate, as you say.  This is sort of how Google Docs is implemented -- the core of the application consumes high-level operations (insert column, sort rows, etc.) from different users and updates the document state, and then this core is replicated in different data centers.  Most discussions I&#x27;ve seen seem to assume that CRDT and OT operations are simple, generic operations, but I think the real magic is in treating it as a paradigm like OO and defining datatypes within it.<p>I still have a hard time conceptualizing an API call as a timeless, commutative modification to a model.  I love CRDT and OT, but I&#x27;ve just seen too many network APIs to put them in a box.  Meteor actually has more shared data model between client and server than any other framework I know of.  The general case of APIs, for us, is you tell the server to go do something, and it tells you when it&#x27;s done it, and you also get streaming updates for the parts of the data model you care about (and a marker telling at what point the changes you caused landed).<p>Basically my main point is that you still need high-level verbs that carry intent, whether they are API calls or operations.  Otherwise you have data changing and no accounting for it.  It&#x27;s like how banking is mainly about transactions, not about telling each other how much money is in account X or Y."
2014-04-30T21:45:07.000Z,Introducing Anonymous Login and an Updated Facebook Login,"What you say is not always true either.<p>I do Python mostly. Django? Fine. It has an excellent auth system out of the box. But that kind of auth system isn&#x27;t very flexible either. Now I barely do Django development today so please excuse me behind any insane changes.<p>Flask and Pyramid world? Custom auth to me. They both have community modules for auth stuff, but do I really like them? I am not the kind of guy just pip install random &quot;useful&quot; package these days. Let&#x27;s give another example. A year or two ago I tried to do social auth in some of my django and flask apps. Maybe I was dumb but using that social-auth library took me a while to get some of login working. Plus, the code was messy and buggy. In the end, I said screw that and implemented all of the custom login myself, just reading the official doc from twitter and facebook. That also took me a while but I knew the whole implementation inside-out. If I don&#x27;t trust my own implement because it is insecure, then I must spend the same amount of time inspecting other people&#x27;s custom modules.<p>The truth is, generic auth system is hard and is not flexible. In fact, too flexible can be a bad thing: <a href=""http://plope.com/pyramid_auth_design_api_postmortem"" rel=""nofollow"">http:&#x2F;&#x2F;plope.com&#x2F;pyramid_auth_design_api_postmortem</a><p>I like customized auth system based on the api provided by the framework - that&#x27; what makes Pyramid powerful to me. Sometimes your community auth module can have limitation that you probably have to hack around."
2014-04-28T13:10:02.000Z,Ask HN: Reasons behind renaissance of functional programming languages,"A signed access token is how identity is provided in a stateless environment.<p>Take Facebook OAuth for example. A user logs in, is provided with a signed access token by FB, and then uses that token to prove to an application that the owner of the secret key has granted them permission. The owner in this case was Facebook itself.<p>This can be verified by the server by comparing the:<p>var expectedSignature = crypto.createHmac(&#x27;sha256&#x27;, FACEBOOK_OAUTH_CLIENT_SECRET).update(encodedData[1]).digest(&#x27;base64&#x27;).replace(&#x2F;\\+&#x2F;g,&#x27;-&#x27;).replace(&#x2F;\\&#x2F;&#x2F;g,&#x27;_&#x27;).replace(&#x27;=&#x27;,&#x27;&#x27;);<p>with the signed request signature:<p>var signature = signedRequest.split(&#x27;.&#x27;,2)[0];<p>and making sure that they&#x27;re the same.<p>This way the server never needs to maintain sessions, cookies, or a whole bunch of other crappy, centralized, coupled, insecure methods for building networked software. The server only needs the secret keys of whatever access tokens users might be providing. The access token contains the userId or any other relevant information. If the server needs more information about the user, it can provide the access token to another API that returns more information about the user, again, based solely on the access token, just by passing state INTO whatever system&#x2F;function&#x2F;service needs it.<p>If this server is sitting in front of a database all that the server cares about is what the access permissions are of whatever incoming request it is dealing with. It still doesn&#x27;t need to maintain state. The database is maintaining state, but the server is just verifying that the request can make the changes to the state of the database.<p>All with the wonders of functions, modules, and APIs that try to operate without managing their own internal state, which again, is the main feature of functional programming languages."
2014-04-25T11:09:14.000Z,What's left of NoSQL?,"We are stuck with NoSQL in HTML5, because Mozilla and Microsoft refuse to implement WebSQL (<a href=""http://en.wikipedia.org/wiki/WebSQL"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;WebSQL</a> )<p>IndexedDB is fine for storing JSON objects, etc. but a relational database with SQL query syntax, indexes, etc. more powerful and means less code to write. With IndexedDB one has to reinvent the wheel to just get basic query features.<p>WebSQL is not deprecation, the W3C Working Group Note actually says:<p><pre><code>  &#x27;This specification is no longer in active maintenance \n  and the Web Applications Working Group does not intend to \n  maintain it further&#x27;.\n</code></pre>\nWebSQL is only available in Webkit based Browsers (Safari, Chrome) which means most mobile browsers.\nAs SQLite is in public domain, no company would &quot;loose their face&quot; if they choose to use it. They could fork off SQLite and change the SQL query syntax (parser) to whatever the W3C finds suitable. <a href=""https://www.sqlite.org"" rel=""nofollow"">https:&#x2F;&#x2F;www.sqlite.org</a><p>Mozilla Firefox and FirefoxOS both already ship SQLite for years and can be accessed by its internal JavaScript API. And several Microsoft products already use it anyway (e.g. Forza Xbox games). Microsoft has of course also various other SQL database libraries like MS Access JetRed, MS Outlook JetBlue and SQL Express.<p>We had a discussion about it recently: <a href=""https://news.ycombinator.com/item?id=7574754"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7574754</a><p>The new hip things is &quot;NewSQL&quot; (<a href=""http://en.wikipedia.org/wiki/NewSQL"" rel=""nofollow"">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;NewSQL</a> ). For example Facebook, Google Ads, etc. are powered by MySQL&#x27;s InnoDB database engine. I would go as far as count SQLite to this group.<p>We would need a movement to convince Mozilla to finally add WebSQL to Firefox and FirefoxOS."
2014-04-23T18:35:32.000Z,An Eavesdropping Lamp That Livetweets Private Conversations,"I mean for spying tools. The C&amp;C is much easier with IRC, just have keyword triggers. You don&#x27;t have to have all the hassle of the Twitter API, IRC is just a byte stream.<p>As for the wider IRC. I&#x27;ve not found it a problem then again I&#x27;ve been in channel for nearly 20 years. My client is in channel 24&#x2F;7 so you only miss as much as you want to.<p>OTOH in that time I&#x27;ve gone from icq -&gt; MSN -&gt; googletalk -&gt; facebook chat. As IM support comes and goes from the big players as they get bored with it. The only thing that&#x27;s changed in IRC in that time is SSL transport."
2014-04-18T17:11:14.000Z,Klout to Quietly Shut Down Cinch Q&A App,"One day startups will learn to stop building on negative&#x2F;zero&#x2F;low revenue social networks.  After hearing about Zynga getting diversified almost out of existence on Facebook, Dalton Caldwell being served with a &quot;Join us or else&quot;[1] from Facebook, and the Twitter 3rd party castration[2]; it amazes Me that people are still trying to build services on top of social platforms.  These platforms are generating very little revenue relative to their valuations. If you have this amazing service that starts making money or getting notoriety, it&#x27;s in the social networks best interest to stop your business and build the feature themselves.<p>[1] - <a href=""http://daltoncaldwell.com/dear-mark-zuckerberg"" rel=""nofollow"">http:&#x2F;&#x2F;daltoncaldwell.com&#x2F;dear-mark-zuckerberg</a><p>[2] - <a href=""https://blog.twitter.com/2012/changes-coming-to-twitter-api"" rel=""nofollow"">https:&#x2F;&#x2F;blog.twitter.com&#x2F;2012&#x2F;changes-coming-to-twitter-api</a>"
2014-04-14T09:50:12.000Z,Earth to Mozilla: Come back home,"I care a lot (see my other answer below). I&#x27;ve - successfully - pushed for Persona with all of my clients, I sell it as &quot;Sure, I&#x27;ll do Facebook authentication for you. I&#x27;ll even add Persona auth for free, your Firefox users will love it!&quot;. Clients love free features.<p>I also push for it very hard in open source projects. This is where the change needs to happen. Wiki software such as mediawiki for example is ubiquitous, if it can be automatically configured to present the user with a Persona option a lot of people won&#x27;t bother disabling it and will see it as a nice bonus.<p>And unlike OAuth, Persona <i>can</i> be readily available with zero configuration! It doesn&#x27;t need API keys, that&#x27;s the beauty of it!"
2014-04-08T20:41:04.000Z,"Show HN: Snappy Checkout – Stripe Checkout with full-featured dashboard, admin","Hmm. I really like this, and I&#x27;m definitely going to use it when I finish my service. However, I have two small problems and one large problem with it:<p>- It&#x27;s impossible to go back and select another payment option once you click one of them.<p>- You can&#x27;t style your payment dialog. (This may be a good thing [consistency], but I think it&#x27;d be nice to be able to add custom CSS to the pricing dialog.)<p>My large problem is that the price is crazy; your 50 cent per transaction fee means that for all transactions under $7 you collect more in fees than Stripe does. With a $5 payment - very common for services such as the one I&#x27;ll release soon - I&#x27;m paying 20% to you. With a $1 payment, I pay a prohibitive 83% in fees. That&#x27;s a really large cut compared to using the Stripe API directly, and I think that for anyone looking to increase their profits it&#x27;s a no-brainer to cut Snappy Checkout out of the equation.<p>To give a personal example, my service will be primarily receiving $5 payments. For the first 1000 payments or so, I&#x27;ll probably stick with Snappy - the $500 I give up isn&#x27;t worth the time I would&#x27;ve spent rolling my own solution. However, as soon as I can see that there&#x27;s a clear market for my product, I&#x27;ll roll my own with Stripe - I clearly wouldn&#x27;t want to give up 20% to payment processing alone.<p>Meanwhile, Frank is selling antique vases on Facebook for $1.5k each, and he pays 50 cents a transaction to you.<p>However, if you were to switch to a flat fee + a percentage (say 1.5% and 15 cents), as Stripe does, you would probably retain my business for a lot longer. Suddenly, I pay a 4.5% cut to you as opposed to a 10% cut, which is quite reasonable. At the same time, Frank the antique vase seller doesn&#x27;t really care about a 1.5% fee: a win-win situation.<p>tl;dr I recommend that you change to a percentage of the total sales: sellers of cheap items will use your service and sellers of expensive items won&#x27;t care. There&#x27;s a reason why Stripe, Visa, and every other payment processor everywhere ever does this."
2014-03-30T04:52:18.000Z,Wrong and Right Reasons To Be Upset About Oculus – with Carmack response,"Unless you&#x27;ve developed games for the facebook platform, it can be hard to understand why so many devs reacted so negatively to the news. I&#x27;ve made facebook games and decided not to spend money on the second dev kit, so maybe I can shed some light as to why.<p>As a gaming platform, Facebook sucks. Pure and simple. The APIs we need to use to make money change, sometimes on a daily basis. We get no notification when these changes happen. We find out because our games suddenly stop working. Facebook also has a history of trying to screw game developers over in an attempt to get a bigger chunk of cash for themselves. Case in point, they tried to mandate that everybody use Facebook Credits for in game currency. Not only did facebook take 30% off the top (effectively slashing our existing revenues by 30%), but we had to use their API to process transactions. Their buggy, buggy API. That lasted for maybe 6 months? I&#x27;m not sure, I got out of it just before the facebook credits thing went down.<p>Before everybody jumps on me about Facebook not necessarily locking Oculus game devs into their platform, that doesn&#x27;t matter. Facebook has a history of treating game devs poorly and as a result I have absolutely no desire to deal with the company again."
2014-03-28T21:24:06.000Z,Toward a better programming,"Toward a better computer UI<p>The Aurora demo did not look like a big improvement until maybe <a href=""http://youtu.be/L6iUm_Cqx2s?t=7m54s"" rel=""nofollow"">http:&#x2F;&#x2F;youtu.be&#x2F;L6iUm_Cqx2s?t=7m54s</a> where the TodoMVC demo beats even Polymer in LOC count and readability.<p>I&#x27;ve been thinking of similar new &quot;programming&quot; as the main computer UI, to ensure it&#x27;s easy to use and the main UI people know. Forget Steve Jobs and XEROX, they threw out the baby with the bath water.<p>Using a computer is really calling some functions, typing some text input in between, calling some more.<p>Doing a few common tasks today is<p><pre><code>  opening a web browser\n  clicking Email\n  reading some\n  replying\n  getting a reply back, possibly a notification\n\n  clicking HN\n  commenting on an article in a totally different UI than email\n  going to threads tab manually to see any response\n  \n</code></pre>\nAnd the same yet annoyingly different UI deal on another forum, on youtube, facebook, etc. Just imagine what the least skilled computer users could do if you gave them a computing interface that didn&#x27;t reflect the world of fiefdoms that creates it.<p>FaceTwitterEtsyRedditHN fiefdoms proliferate because of the separation between the XEROX GUI and calling a bunch of functions in Command Line. Siri and similar AI agents are the next step in simple UIs. What people really want to do is<p><pre><code>  tell Dustin you don&#x27;t agree with his assessment of Facebook&#x27;s UI changes\n  type&#x2F;voice your disagreement\n  share with public\n</code></pre>\nAnd when you send Dustin and his circle of acquaintances a more private message, you<p><pre><code>  type it\n  share message with Dustin and his circle of designers&#x2F;hackers\n</code></pre>\nTo figure out if more people agreed with you or Dustin<p><pre><code>  sentiment analysis of comments about Dustin&#x27;s article compared to mine\n</code></pre>\nThat should be the UI more or less. Implement it however, natural language, Siri AI, a neat collection of functions.<p>Today&#x27;s UI would involve going to a cute blog service because it has a proper visual template. This requires being one of the cool kids and knowing of this service. Then going to Goolge+ or email for the more private message. Then opening up an IDE or some text sentiment API and going through their whole other world of incantations.<p>Our glue&#x2F;CRUD programming is a mess because using computers in general is a mess."
2014-03-25T22:09:20.000Z,Facebook acquires Oculus VR,"&gt;Facebook could stay hands off<p>No, they could have made a sizable investment without having a controlling stake in it. No, they Acquired it. You don&#x27;t do that unless you want to change something there. My best hope is that the Zuck sees something cool going on with the Oculus and wants to try his hand at something new. My worst fear is that they will develop the &#x27;Oculus API&#x27; as a wrapper around the original API and Facebook. Now Facebook can ad ads featuring your friend&#x27;s faces in games... and free 3d games if you just watch a 15 second ad for every five minutes that you play..."
2014-03-23T14:37:55.000Z,I left my job to start my first company. Tell me what you think.,"I think despite facebook already having an &quot;I don&#x27;t want to see this&quot; smart filter that works pretty good, user privacy concerns about sharing their friends&#x27; feeds with a 3rd party, and the constant API and policy changes facebook apps have to keep up and deal with, you still have a chance of facebook or any other tech giant buying your company in a couple of years for bazillions of dollars. In the tech world there&#x27;s no way of knowing what&#x27;s gonna happen next..."
2014-03-18T13:01:27.000Z,"Bill Gates: Microsoft would have bought WhatsApp too, but not for $19B","Indeed. I spent two months on a feature that was basically &#x27;push every pageview of x to the user&#x27;s timeline&#x27;, and facebook understandably removed that feature just before launch.<p>However, it still doesn&#x27;t really make sense to me. First of all, why not just remove the abuse, or implement more app-store like curation to ban abusers. And second, they didn&#x27;t really seem to be too committed from the start, what with the constant API changes that broke stuff left and right."
2014-03-07T13:45:47.000Z,PHPUnit 4.0 Released,"This is pretty exciting for me. At least, it would be (it seems like a drop in replacement, as the backwards compat breaking changes are really rarely used in production IME) -- except I&#x27;ve moved to <i>`nette&#x2F;tester&#x27;</i> [0][1]. It&#x27;s much much lighter (in features as well as run-time) but the trade-off is a seriously nice API, that includes even a nice DOM tester for integration work.<p>The HHVM support is most exciting for myself. I&#x27;ve moved production websites and personal projects all over to nginx + HHVM, and I&#x27;ve not run into any issues since the end of last year.<p>Now, all I want is Facebook&#x27;s &quot;Hack&quot; language to be formally documented. My personal tests show that the optional gradual H-M typing + HHVM&#x27;s speed + PHP&#x27;s benefits === Awesome. PHP has come a long way in the past few years.<p>[0] <a href=""http://tester.nette.org/"" rel=""nofollow"">http:&#x2F;&#x2F;tester.nette.org&#x2F;</a>\n[1] <a href=""https://github.com/nette/tester"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;nette&#x2F;tester</a>"
2014-01-27T20:57:53.000Z,Why isn't People-Centric UI Design taking off?,"The article brings up a good point, sometimes it makes more sense to start with the person. For example, let&#x27;s say I need to get in touch with my friend to quickly inform them of a change to our plans.<p>Open Skype? Not online. Check Facebook, nope, they&#x27;re not on. Messenger? Nope. Ok, I&#x27;ll open my contact book, and get their number to call.<p>Wouldn&#x27;t it make more sense to simply select the person I&#x27;m trying to reach, and see what platforms they&#x27;re online, so I can choose my contact method?<p>Or what if I want to see what&#x27;s new with one friend? I should be able to click their name, and see their facebook changes, new tweets, status updates, etc.<p>Of course, this isn&#x27;t always the case, I might want to open Facebook without plans to browse a particular person, or I might open Skype just to see who&#x27;s online that I can video call.<p>So, there are times when I need to take both routes. They should both be available so I can choose either. It&#x27;s complicated to aggregate content from a variety of sources into a single page, so it&#x27;s not a surprise why this option isn&#x27;t frequently available. You would almost need a new standard, so HN could provide an API for a user&#x27;s comments, posts, etc, and Facebook, Twitter, Reddit, etc, all do the same. Then I can build an app that merges all of this information together. So a user opens the app, and creates a page for John, enters John&#x27;s Facebook profile, Twitter&#x2F;Reddit&#x2F;HN handles, and everything appears in a single place. However, these sources then get less direct traffic, and therefore less revenue, so it&#x27;s unlikely they would jump on-board."
2014-01-07T22:54:16.000Z,Scaling Mercurial at Facebook,"We use one repository at google.<p>We&#x27;ve found that &quot;Removing the ability to make large scale changes easy and thus increasing reliability.&quot; isn&#x27;t actually correct.<p>As an example, most of your codebase uses an RPC library. You discover an issue with that library that requires an API change which will reduce network usage fleetwide by an order of magnitude.<p>With a single repo it&#x27;s easy to automate the API change everywhere run all the tests for the entire codebase and then submit the changes thus accomplishing an API change safely in weeks that might take months otherwise with higher risk.<p>Keep in mind that the API change equals real money in networking cost so time to ship is a very real factor.<p>It sounds like facebook also has a very real time to ship need for even core libraries."
2014-01-01T14:42:12.000Z,React: Another Level of Indirection,"I&#x27;ve been playing with Facebook&#x27;s React to make an internal interactive resource scheduling system for our company.  So far I think I&#x27;m getting it... and am thrilled with how it works.<p>React eschews the attempt to split the View &#x2F; ModelView that are the hallmark of most full-service frameworks. Instead of this separation, React applications are built by defining reusable, nested components, each having a render() method that mixes binding and logic to build sub-parts of a web page using their custom DOM.  Each component has an internal mutable state and a set of read-only properties it gets from its parent context. In React, &quot;data binding&quot; is just part of rendering.<p>Since React owns the DOM, it&#x27;s incompatible with JQuery; or rather, if you use JQuery, you could do it in a leaf node and manage the boundary carefully.  React tracks things by using a hierarchical identifier, each key unique within each level of the structure.  It then has a predictable&#x2F;fast algorithem for detecting changes and updating the DOM.  Unless you provide your own component keys (used to build the DOM id) all the way down, you need to use CSS classes (rather than IDs).<p>Finally, I&#x27;d say, React really seems like a library -- and one that has a low API to functionality ratio.  That is, it really does something substantial with relatively few things you need to learn.  If you have your own in-house framework, it might be something you could weave in gradually rather than do a wholesale adoption of a larger (measured via API surface) framework."
2013-12-04T15:46:06.000Z,The lie of the API,"Tell that to Facebook and Twitter. Both are notorious for making changes to their API without informing their developers , especially the former. With site scraping, at least they have a better chance of telling you when a redesign is coming. And b&#x2F;c they rely so much on CDN&#x27;s, JS, caching, etc, changes to their site structure probably don&#x27;t change as much as their API."
2013-11-20T14:39:05.000Z,Xbox One: The Review,"I would say that people, and their reasons for objecting to surveillance or having privacy concerns far are more complicated and varied than you are imagining.  Some of the people who have expressed concerns may be:<p>Citizens concerned about government officials overstepping constitutional bounds and lying about it, but not particularly concerned about the practical consequences of the surveillance.<p>Activists for whom NSA surveillance confirms that government  is not on the side of the people, but whose sense of history leads them to the conclusion that if massive FBI files, Jim Crow laws, and lynching did not stop the Civil Rights movement, metadata is unlikely to prevent the arc of history bending towards justice.<p>“Airbus nationalists” in Europe who are, in their heart, more concerned about the fact the EU seems to be incapable of developing a Facebook, Google, Twitter, ect. They may ape the language of their fellow citizens whose privacy concerns are based on Nazi&#x2F;Stasi&#x2F;etc. historical experience, but actually view cloud computing as industrial policy struggle.  Video game manufacture is likely not their strategic priority.<p>People with specific consequentialist privacy concerns.  For example, someone who hates Facebook because it has caused something embarrassing to be shared without their truly informed consent. They may be indifferent to the notion that embarrassing information is hidden on a government database, and they may actually welcome and value that Google algorithms leverage their g-mail and search history to serve up more relevant ads.<p>People who once cared, but are so sick of monomaniacs hijacking every HN discussion that they are looking forward to buying an Xbox One simply as a sign of contempt.  They likely also once were vaguely sympathetic to Google Reader users, but now see the product discontinuation as just punishment of tiresome and entitled whiners.<p>You may feel that all of these types of  people are wrongheaded, but change often happens because large groups of loosely affiliated people band together, and rarely because zealots double down and fail to see why anyone might <i>consider</i> a different point of view."
2013-11-17T07:30:39.000Z,Dear Googles: G+/YouTube Anschluss – you've done outed me,"A comment I left a few weekends ago, which addressed the same topic but before the Youtube&#x2F;G+ story broke: [0]<p>&quot;Hijacking the top comment to talk about a big concern I have. This EFF article argues that there&#x27;s a place for Anonymity on the Internet [1], and I think most of us agree (especially if we emphathize with those in Iran, China, Syria, and the like).<p>But what HNers must realize is the following: The mainstream Internet <i>can not become</i> the Tor-visited Dark-Net (which restores anonymity) that many believe is inevitable WITHOUT losing its positive sociological impact. Sites like Reddit, Twitter, even HN rely on anonymity and also provide a great deal of such value.  Here&#x27;s a simple example of &#x27;sociological impact&#x27;: CNN (FoxNews, etc) pays attention to what the top links on Reddit are, because the site is in the public&#x27;s face -- and: the people have a collective voice.<p>Next: Without the perception of anonymity, sites like Reddit will stop flourishing.<p>Let&#x27;s go deeper:  Reddit&#x27;s culture thrives on &quot;anonymity&quot; in the form of throwaway accounts and people being themselves without representing themselves.  Throwaway accounts (heard of &#x27;Cation Bot&#x27; or &#x27;AWildSketchAppeared&#x27;?) are a form of expression unique to environments which allow for anonymity (pseudonyms). Who&#x27;s to say novelty accounts would be as risque or hilarious without anonymity?  Certainly these sites flourish because users feel comfortable playing a part and taking a chance.<p>There are two issues at play which threaten anonymity on Reddit. Now obvious (in light of Snowden&#x27;s leaks): 1.) Reddit usernames can, and probably are, being mapped to peoples&#x27; actual identity. ... Not as obvious: 2.) Users&#x27; up and down votes, even private messages, can also be sniffed with ease.<p>Reddit&#x27;s&#x27; devteam has retreated from the idea of providing HTTPS for its voting&#x2F;web API [2], so people&#x27;s actions (aside from comments) can be mapped as well. I tried to raise awareness of this issue five months ago [3].  I know there&#x27;s an argument to be made that SSL&#x2F;HTTPS is useless anyway (just use Tor!, they say), but the bigger question remains:<p>Can a mainstream community such as Reddit exist in tomorrow&#x27;s Internet?  I&#x27;d say that such web-societies are fragile -- likely targets of dragnet surveillance and subversion, especially given their disruptive nature.<p>People and the press are paranoid about Facebook&#x2F;Google privacy because its users (are encouraged to) identify themselves <i>explicitly</i>, but the reality is no different with sites like Reddit - just the perception. Just think about how much more is shared on a site like Reddit by its members because of their pseudonyms! Few people aside from the avid Tor-using&#x2F;&#x2F;r&#x2F;netsec crowd have realized this.<p>Reddit is the internet &quot;as we know it,&quot; and I feel the Internet is about to change.<p>In hindsight - Google&#x27;s initial &quot;no pseudonyms&quot; policy for Google+ was prescient -- though the company eventually capitulated to popular demand for them. [4] Perhaps they wished to save each of us the unsavory realization that aliases exist in name-only (pun intended). :&#x2F;&quot;<p>[0] <a href=\""https://news.ycombinator.com/item?id=6652909\"" rel=\""nofollow\"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6652909</a>\n[1] <a href=\""https://www.eff.org/deeplinks/2013/10/online-anonymity-not-only-trolls-and-political-dissidents\"" rel=\""nofollow\"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2013&#x2F;10&#x2F;online-anonymity-not-o...</a> \n[2] <a href=\""http://www.reddit.com/r/changelog/comments/l4n6y/reddit_change_log_in_with_ssl_javascript_fixes/\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;changelog&#x2F;comments&#x2F;l4n6y&#x2F;reddit_chan...</a>\n[3] <a href=\""http://www.reddit.com/r/privacy/comments/1n73s0/again_reddit_needs_fullsite_https/\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;privacy&#x2F;comments&#x2F;1n73s0&#x2F;again_reddit...</a> [4] <a href=\""http://www.ibtimes.com/google-allowing-nicknames-pseudonyms-aliases-399584\"" rel=\""nofollow\"">http:&#x2F;&#x2F;www.ibtimes.com&#x2F;google-allowing-nicknames-pseudonyms-...</a>"
2013-11-04T05:17:38.000Z,Django plugins you shouldn't start without,"&gt; There&#x27;s also poor testability, inability to re-use functions that reference the request internally, inability to statically analyze dependencies (less of an issue in Python, since the lack of types makes it hard to analyze them anyway), additional context that the developer must keep in his head, and inability to cross-reference parameters &amp; call-sites and identify where a given variable is coming from in code browsers or debuggers.<p>I don&#x27;t know. Most of them seem like a non issue to me. Shouldn&#x27;t the api cover that testability(of request)? At least, it does in Flask. Re-using a function which uses request won&#x27;t be any different from re-using a function which uses datetime. I do get your point about difficulty of analyzing Python owing to dynamic typing and monkey patching, but I couldn&#x27;t connect it to context local. As for cross referencing, you just treat request as you treat datetime.<p>&gt; Singletons are no better - if you dress it up as RequestManager.get_current_request(), it&#x27;s just as bad. If you don&#x27;t understand why something is a bad idea, complying with the letter of the law without complying with the spirit doesn&#x27;t really get you much.<p>I won&#x27;t do that. That is just a tongue in cheek comment to appease &quot;death to globals&quot; police.<p>&gt; Now I want my programs to do as little as possible and have access to as little as possible.<p>I don&#x27;t disagree with that but assuming that the request object is available for the request lifecycle is pretty reasonable.<p>&gt; Usually I end up pulling out the values I want inside the view function and calling any helpers using only those values, so I don&#x27;t pass the request around anyway.<p>You don&#x27;t pass around request in a general workflow(why would you?). But consider this <a href=""https://github.com/tschellenbach/Django-facebook"" rel=""nofollow"">https:&#x2F;&#x2F;github.com&#x2F;tschellenbach&#x2F;Django-facebook</a>. This does a post save signal when a new user registers. I need to send a welcome mail to the user asking him to activate his account. I need request.build_absolute_uri to construct the uri, and guess what, I don&#x27;t have request in the callback and I don&#x27;t have a way to obtain it. Now there can be other ways I can solve it - configure sites and generate url using sites; simply have the base url in settings and construct the url by doing a urljoin; may be in some alternate universe, django&#x27;s reverse generates external url. But the thing is, I have needed access to request object on more than a few occasions. Granted if the callback passed me the request object, it won&#x27;t have been an issue but it doesn&#x27;t and I had to resort to thread local middleware to save the request object.<p>&gt; A fourth was that I worked a bunch with both systems and found that adding a parameter to each function along a call path is easy<p>The issue is apis which you haven&#x27;t wrote. I can always change the packages myself, but I don&#x27;t want to sync up with upstream for something I see as a small change."
2013-11-01T10:55:06.000Z,It’s time for Silicon Valley to ask: Is it worth it?,"To update the above comment (&#x27;edit&#x27; is disabled) -- to the &quot;And the devil of a bill is always in its details...&quot; line, I just saw this article headline on Techmeme: &quot;Feinstein Releases Fake NSA Reform Bill, Actually Tries To Legalize Illegal NSA Bulk Data Collection&quot; [1]  Pretty shameless on her part.  Here&#x27;s the HN item: <a href=""https://news.ycombinator.com/item?id=6653190"" rel=""nofollow"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6653190</a><p>[1] <a href=""http://www.techdirt.com/articles/20131031/12394625090/feinstein-releases-fake-nsa-reform-bill-actually-tries-to-legalize-illegal-nsa-bulk-data-collection.shtml"" rel=""nofollow"">http:&#x2F;&#x2F;www.techdirt.com&#x2F;articles&#x2F;20131031&#x2F;12394625090&#x2F;feinst...</a><p>--<p>Websites like Reddit and HN are extremely vulnerable.<p>Hijacking my comment here to talk about a big concern of mine.  This EFF article argues that there&#x27;s a place for Anonymity on the Internet [2], and I think most of us agree. Especially if we emphathize with those in Iran, China, Syria, and the like.<p>But anonymity is also the key to websites like Reddit and Twitter (including HN).  These websites represent breakthroughs in sociology: memes; open, real-time, transnational,  popular (upvote&#x2F;downvote, retweetable) discourse.<p>It&#x27;s not an understatement to say that Reddit, Twitter, even H.N. are some of the greatest manifestations of the Internet-age -- look at the impact they have had on mainstream media and raising the bar for popular discourse.<p>(Ex.1: I would argue that the Snowden revelations would not have persisted in the public conscious nearly as long if it hadn&#x27;t been for Reddit&#x27;s continued rage. \nEx.2: As it is, news outlets hawk Reddit&#x2F;HN for story-material, and build the story&#x27;s narrative with Twitter.)<p>But what HNers must realize is that: The mainstream Internet __can not become__ the Tor-visited Dark-Net that many believe is inevitable -- WITHOUT losing its positive sociological impact.<p>Yet without the perception of anonymity, sites like Reddit will stop flourishing.<p>Reddit&#x27;s culture thrives on anonymity, throwaway accounts, and people being themselves without representing themselves.<p>There are two issues at play. Now obvious: 1.) Reddit usernames can be mapped to people&#x27;s actual identity. Not as obvious: 2.) Users up and down votes can also be mapped to their identity.  Reddit as a dev-team has retreated from the idea of providing HTTPS for its voting&#x2F;web API, so people&#x27;s actions (aside from comments) can be mapped as well. I tried to raise this point 5 months ago [3]. I know there&#x27;s an argument to be made that SSL&#x2F;HTTPS is useless anyway (just use Tor!, they say), but the bigger question remains:<p>Can a mainstream community like Reddit exist in tomorrow&#x27;s Internet?<p>People and the press are paranoid about Facebook&#x2F;Google privacy because its users identify themselves explicitly, but the reality is no different with sites like Reddit - just the perception.  Just think about how much more is shared on a site like Reddit by its members because of their pseudonyms!\nFew people aside from the avid Tor users have realized this.<p>Reddit is the internet &quot;as we know it,&quot; and I feel the Internet is about to change.<p>In hindsight - Google&#x27;s initial &quot;no pseudonyms&quot; policy for Google+ was prescient -- though the company eventually capitulated to popular demand for them. [4] Perhaps they wished to save each of us the unsavory realization that aliases exist in name-only (pun intended). :&#x2F;<p>[2] <a href=""https://www.eff.org/deeplinks/2013/10/online-anonymity-not-only-trolls-and-political-dissidents"" rel=""nofollow"">https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2013&#x2F;10&#x2F;online-anonymity-not-o...</a> \n[3] <a href=""http://www.reddit.com/r/privacy/comments/1n73s0/again_reddit_needs_fullsite_https/"" rel=""nofollow"">http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;privacy&#x2F;comments&#x2F;1n73s0&#x2F;again_reddit...</a>\n[4] <a href=""http://www.ibtimes.com/google-allowing-nicknames-pseudonyms-aliases-399584"" rel=""nofollow"">http:&#x2F;&#x2F;www.ibtimes.com&#x2F;google-allowing-nicknames-pseudonyms-...</a>"
2013-10-30T19:21:42.000Z,Startup Idea: Solve Personal Analytics,"&quot;Every piece of content created: mobile camera roll, instagram, facebook, vine. Every piece of content consumed: amazon, itunes, netflix, spotify, rdio. Every place you go. Every dollar you spend. You wont start with 100 services, but youll get there soon enough. Some people will be obsessed with adding more data&quot;<p>And therein lies a potential headache. What if the API for those 100 services break? What if just 10 of them change their API every month? Are you going to update them? And oh btw, you&#x27;re gonna keep doing this before you actually have paying customers."
2013-10-29T16:41:29.000Z,"Facebook marketing? Don't bother, says new report","Their argument that their targeting creates massive value is only correct so long as their competitors don&#x27;t catch up. Linkedin, though, is building out its advertising tools and API and allows for really good targeting based on more accurate job positions than Facebook can provide, which is often more useful.<p>If a company pays for their facebook likes through advertising, why should they then need to pay again to advertise to this same group of people with a sponsored post? It really changes the ROI of a facebook like."
2013-10-17T11:14:03.000Z,Did these guys just reinvent the Web?,"Since when did &#x27;the web&#x27; involve giving away all the source code and not charging people for things? Did Google open source their search engine and let anybody advertise on their site for free while I wasn&#x27;t looking?<p>I really don&#x27;t understand this meme about the web being &#x27;open&#x27;. Much of the native desktop software I use is open source. Practically none of the web services I use are open source. There is not much chance of a &#x27;GNU project&#x27; for the web (i.e. reimplementing an open google and twitter and facebook and so on). Open source web services of significance are few and far between and when it comes to controlling our data usually the best we get is a proprietary API that may or may not get shut down or changed tomorrow.<p>The web gave us RSS which was good[1] but since then it has been pretty much a non stop stream of proprietary APIs and platform lock-in. Even things built on RSS tend to be proprietary APIs rather than open standards: take Google Reader for example. Before it shut down it should have been trivial to pull your subscriptions out of it and point your clients at a new replacement rss-syncing server (like you can do with an email client). But it wasn&#x27;t because there was no damn standard for that, just proprietary APIs as various people wanted to lock you into their cloud service. The standards that have emerged have been, of course, ones that generally involve lock-in to proprietary platforms, like OAuth.<p>[1] interestingly many of the new generation of web developers seem to dislike RSS."
2013-10-14T01:25:48.000Z,"Redecentralize: Quietly, some geeks are decentralizing the net again","There seem to be a lot of discussions going on inside each of these projects. There should be some central hub for research and exchange ;)<p>Disconnected knowledge-islands with people not knowing about already existing solutions to problems they are trying to solve seems to be one downside of scattered communities.<p>Decentralization is needed for private communication, but there are downsides - creating x parallel nets will not help in finding each others - the knowledge evolution of the internet is driven by the desire of the human brain to connect all available information.<p>Imagine the NSA decided to create an open and freely available API to the centralized information they have collected - good-minded people certainly will extract useful knowledge from that data, possibly world-changing new ways of thinking about everything could be the results.<p>The human brain wants this central intelligence (the real one, not the agency) to solve the evolutionary problems we are confronted with today - it must be seen as an ironical evidence of this need that the first biggest data collections that might be useful for all humans on this planet are collected exclusively by paranoid psychopaths to have better tools for control and oppression.<p>But even if misused, it does happen - the human brain wants to connect. It will not be happy with decentralized knowledge - it is the reason, why the internet exists and it will not want to go back.<p>This does not mean that decentralized networks are a bad thing in itself (as I said before, needed for private talk urgently!), but it means that we need some information harvesting entity that makes it easy to connect.<p>It is not only marketing what makes google and facebook so successful - it is the biological meta-programming of our brains that make us want to use these possibilities to connect to the global information pool.<p>The global brain is the destination - of course it should be untouchable by insane sadist that want to control our life. This evolutionary force will lead to social changes - it does already.<p>Re-Decentralizing the internet, from this point of view, only postpones the real challenge: build technical and social systems, that can not be misused or at least make it easier to detect and eliminate misuse - we have already concepts for this, we need to apply. Real-life IDS will warn you if you consume fake information or are following the wrong leaders (or if you are following at all). Real-life social SIEM will prevent a group of people misusing the system just for their own profits. 
Most probably &quot;profit&quot; will be an ancient word that will be remembered only with shame, like being confronted with the primitive life of our ancestors, that were living in caves.<p>Decentralization will not rescue us from our duty to expand participation."
2013-10-11T23:45:42.000Z,Fight bike theft with the open source bike registry,"Just how many of these shops are there that have been registering your bikes and how many bikes have they registered for you?<p>Do you have any idea about POS systems?<p>Because of how the industry for POS has developed (fragmented) you cannot guarantee that a POS system is online - it talks to a server in the back office and that code was written aeons before the acronym API came into parlance.<p>Shops stick with legacy POS systems because they have a database of customers and stock on there. To migrate to the all singing and all dancing POS system that will work with your system is not at all as straightforward or as likely to happen as you imagine. Staff training, hardware (to open the drawer and get the scanner working), cost of new software - it is just not going to happen, no matter how clumsy and visual-basic-y it is. There are even small bike shops that don&#x27;t have POS!!!<p>You are in cloud cuckoo land if you think for one moment that you are ever going to get POS systems in bike shops to talk to your web service. Sure one or two hipster-shops in Chicago run by your mate who wrote his own POS system in Ruby on Rails with loads of angular.js one weekend, but I think you haven&#x27;t any option but to completely forget about it for the majority of bike shops - even large chains with decent IT departments - it is so not realistic what you are talking about.<p>I haven&#x27;t bought a Specialized for a while, however, historically, their manuals have been out of date. This goes for every other brand going and this has been the case for the last 25 years - yes I was mechanic 25 years ago so I know these things. Nobody watches DVD&#x27;s by the way, do they?<p>People do read the manuals, not always and not cover to cover. With a bicycle what else do you do when you get home with a new one and it is gone dark - read the manual! Maybe not in Chicago, but, enthusiastic owners with a new pride and joy certainly do give the manual some attention. If it was spruced up with some online registration thingamy in there then think how much easier it could be. So I think you are being deliberately irksome by flippantly saying that nobody reads the manual - that is not a certainty. If the manual included a cheque for a million dollars in the back then I am sure that even people that cannot read would read the manual. If, like the UK brands I know, the manual is not exactly scintillating then it gets picked over and cast aside.<p>With the manual approach you get two bites at the cherry - in the shop by your mates in Chicago and, for everywhere else, something people can be prompted to do from the comfort of their own home.<p>You are being cynical thinking customers don&#x27;t want to be marketed to. In an age when people put so much cr4p about themselves on Facebook etc. The guarantee&#x2F;warranty form as means of building up a customer database has worked for at least a century. It is a trick but then it isn&#x27;t perceived as a trick by people outside your bit of Chicago. If there is something in it for the customer - an actual warranty - they don&#x27;t hesitate to sign up. It is that simple. Just make it online.<p>For any scheme such as yours to work it really does need to work for all stakeholders and involve all stakeholders. That means the customer, law enforcement, the retailers, the distributors, the manufacturers and the trade organisations (at retail and manufacturer level). What credibility does your scheme have if it is &#x27;just a kickstarter project&#x27; rather than something that the important stakeholders have committed to?<p>I have read other comments on this thread and the dupe and I don&#x27;t hear anyone saying this is just what the world needs. Sure my comments are unvarnished but I am trying to share with you my better ideas gained from practical experience dealing with the problem in hand.<p>The Bike Index name is not doing it for me. Have you seen just how good (or bad) the UK bikeregister.com site is?<p><a href=""https://www.bikeregister.com/stolen-bikes"" rel=""nofollow"">https:&#x2F;&#x2F;www.bikeregister.com&#x2F;stolen-bikes</a><p>I can look at what has recently been stolen in my area. The top navigation is clear and it Google paid-search-results to the top of stolen bikes. The police have their logo on it. There is a lot I would want to change about the site but it is getting there without any off-putting web design. It has a team keen on what they do with IT support, some sales potential for security products and it looks like they are going to stay around for a while. It works to the extent that it does without a lot of support from shops but with a lot of support from the Police. They have stakeholders. In the UK you would have to be a fool to go up against them or provide a new angle with some other service that is the same but more open-source-designed-on-a-mac-with-web-2.0-stuff. It has to be one place people go, not one of many (for a given country).
The people behind bikeregister.com sell marker products. These are the slowest sellers ever in a bike shop, even worse selling than those face masks or arcane BMX trinkets (BMXers have to get mum to pay, don&#x27;t they...). So they haven&#x27;t got the right &#x27;in&#x27; at the retail level. However, I have seen their leaflets around - in shops - so they have tried what you have been trying. Maybe you should talk to them rather than go off thinking you knows bestest...<p>People wanting to show off their bikes already have forums for that, forums that have online community whom you would want to share things with. I know a small amount of people that do such things because they have an angle - retro, weight or niche brand being the &#x27;why&#x27;. Those into the sport have a passing interest in the kit, it is results that matter to them, hence showing off their latest steed is not their gig, if it is then &#x27;weight weenies&#x27; forum it is. Sure &#x27;weight weenies&#x27; (popular over here) may be some dated bulletin board thing but it works and you aren&#x27;t USP enough to that crowd for them to shift over to &#x27;bike index&#x27;. So this showing off one&#x27;s bike thing is doomed, it dilutes the main purpose.<p>Sorry to be harshly negative, but you did post on here to get advice and sometimes people aren&#x27;t honest when they say &#x27;yeah babes fab!&#x27;. I hope for your sake that you don&#x27;t take $50K of people&#x27;s hard earned cash for this - you need a better plan and to come back later when you have got it. Don&#x27;t stop the coding, the testing, the user experience testing and what you are doing in the bike shop already. Go bigger, just pick up the phone and talk to some other people who can help you - the UK bikeregister people could help you with ideas. Get involved at the industry level - go to a big trade show and speak to the top bods, bash their heads together and get an industry solution. Please give up on any dreams of POS systems magically doing it all, or at least visit a dozen bike shops and see what rubbish POS systems they actually use."
2013-09-30T09:55:23.000Z,"Ask HN: How many ""self-taught"" programmers and how did you do it?","1) Inspiration followed by Realisation followed by Ambition.  I started messing around in Microsoft Frontpage age 11 (2000ish). I was shown how to make a simple VB6 program by my father (2002). Here I came to understand logic and how GUI&#x27;s make stuff happen on computers. I wrote trolling&#x2F;phishing tools for AOL for about a year making use of more complicated hooks written by other people (2003). I then turned back to the web with PHP, since it was a more accessible way to get my things into the hands of people (2004). I played computer games back when you could mod them - I wrote scripts, made 3d models and textures. This is where ambition set in. My first PHP real project when I thought I&#x27;d learnt what I was doing was a messaging app with login &#x2F; registration (2005). I found MySQL doing this. I had a MySQL book which I referred to but it was the only book I really used to learn. My peers found security holes in my app, the login had a redirect which included the user id in a get argument, which you could simply change (true story). This taught me the importance of considering how people will attack my code. <i>This was a critical factor in helping me learn to code</i> When you consider from another perspective, you more deeply understand what it is you&#x27;re doing. I continued with PHP and MySQL and the front end stack, I kept pushing myself, starting ambitious projects (hell, I can build Facebook) that ultimately I&#x27;d never finished. I got bored quickly, I was always doing something new. Back to PHP, Zend Framework (my first framework) provided another giant leap in my understanding (2006). I delved into it, I realised how much I can learn from others. I learnt the benefit of going into the code and understanding it. I learnt design patterns, I learnt what good software looked like, I began to write software, rather than &#x27;web pages&#x27;. I dropped out of college and got my first job as a web developer writing PHP websites and doing sys admin for hundreds of clients, alone (2007, age 18). I started to get good at what I did professionally. I began looking harder at other languages, but only a little. I wouldn&#x27;t start projects with new languages, just appreciate them from afar. Ruby, Python, Go, C#, Java. I realised that databases, other software, tools, services and api&#x27;s are all just components or tools, nothing to fear and held new and potentially better ideas than I had at the moment. MongoDB, CouchDB, Redis, zeromq, RabbitMQ, memcache. I carried on focussing on few languages but becoming far more capable and adaptable for the next 4&#x2F;5 years. In 2011 I started to become interested in JavaScript and doing that properly, because it&#x27;d always been taken for granted with jQuery being such a great API. 
2013 I&#x27;m writing browser-based apps and apis. You can ask me to do anything and I&#x27;ll probably be pretty good.<p>Slacker at school, College drop out, in full time employment since the age of 18. Now a multi-skilled contractor at 25. I&#x27;m not really a programmer but more of a problem solver. Programming is one of the secondary tools I use, my brain is my primary tool. You don&#x27;t need formal training to achieve it.<p>Timeline:<p><pre><code>  1988: Born
  2000: Frontpage
  2002: Introduced to VB6
  2003: Wrote AOL hacks
  2004: PHP, modding computer games
  2005: Started building PHP apps, dropped out of (UK) college
  2006: Discovered Frameworks and learnt good practices
  2007: Got a developer job (PHP)
  2008: Got better at my job
  2009-2010: Had a few different jobs, diversifying, becoming adaptable, learning new tech
  2011: Found confidence
  2012: Naturally leading dev teams
  2013: Contracting, multi-talented
  2014: Who knows</code></pre>"
2013-09-23T13:21:56.000Z,Why The New Gmail Sucks,"The Google redesign seems to be about creating a walled garden, tied together by Google Plus, Android, and aggressive highlighting of other Google services on each page.<p>Maybe they fear that if they don&#x27;t trap the users, Facebook will. Either way, the continued high user figures at Yahoo show that it&#x27;s possible. To do it, they need to stop being a search engine (to discover others content, leave the garden), and become a portal, the only web experience you&#x27;ll ever need.<p>I think this becomes necessary because on a tablet, people use apps, and if those aps are deep enough, they may never escape them. You could make a tablet that just ran the facebook ap, an a subset of users would be happy. They need a counter trap.<p>To me, to them, any other GUI changes that crept in are likely incidental. Does it tie in with Google Plus? Will it work on a tablet?, Does it look like our tablet ap?, would be the primary question."
2013-09-17T17:21:20.000Z,iOS App Store now allows legacy downloads to support older OSes,"I think this will help out consumers overall, but I don&#x27;t want customers posting negative reviews of my app because the old version they downloaded crashes due to a Facebook or Twitter API change that I patched the app for months ago. Considering that folks post reviews from to-be-released versions of the OS, I assume Apple will let these folks post reviews as well?"
2013-09-14T15:08:48.000Z,On Contact Management,"Yes, I agree with you that the way we manage our contact date is outdated.<p>The problems nowadays are:<p>1) If you include pseudonyms and literally all user data, you will earn the distrust of millions of users that don&#x27;t want this data centralized in the databases of one company. 
(I know it is possible to figure out almost all the interconnections e.g. via IP, Cookies, Location data, your browsing history. But still they are given implicit. Handing all your user data to one company firsthand plays in a totally different league.)<p>2) This system, especially the automatic updates via sent out API calls, requires deep integration in countless pieces of software. Windows, Mac, Linux and all their ways of managing contacts, the corresponding mobile systems need to adapt and what about the business sector?
You could counter that it is a standalone app and the user has the choice on every platform. And that would be the next problem. All the existing services (about.me, dooid.me, even the Gravatar, or even providing a downloadable or scannable .vcard file or QR-code on a self-hosted webpage) are not used by any majority of people. Why?  The majority simply does not submerge that deeply into the technology. 
Yet another service that bring yet more responsibilities (setting up privacy boundaries etc.) might be appealing to the techy-nerdy kind, but not at all to &quot;Joe Average&quot;.<p>3) What this would need is huge company&#x27;s backup. And to be honest, Google has had the chance...but they screwed it up. Google+. The idea behind the circles is great (hence the resemblance to your &quot;spheres&quot;?). But tying it to yet another social network and forcing it upon it&#x27;s users is not the way to build a user base that trusts and accepts the platform.
I don&#x27;t believe any piece of statistic released talking of 400 Million registered users (of course, because they force it upon the Google Play and YouTube users) or the 100 Million active users (of course, YouTube commenters, still want to comment). If I check my Google+ Stream it is dead to 95% of my contacts. There is less going on than on facebook. (Which we all apparently distrust and has seriously lost the contact management game.)<p>All this leads me to the conclusion that the introduction of an important functionality like the one you describes can&#x27;t be done by any kind of service.<p>It should become a &quot;protocol&quot;. Maybe a vcard-protocol. And in the best case a P2P based one that is encrypted. Why?
- My user data doesn&#x27;t change every second, so there is absolutely no need for 99,99% availability.
- Our smartphones are online almost 24&#x2F;7 anyways. And in addition our various other internet access devices even increase that number ;)
- Ot the information could be circled around in the P2P-network, highly encrypted. As the data size of maybe a profile picture and a bunch of contact details is not really an issue, this actually would be feasible.
- It could be combined with PGP, maybe even use the very same keys. Which could and should increase the number of users encrypting their conversations.
- The information would not leave the users hands unencrypted. 
- The possibilities are defined by the protocol and the user has to set up allowances (sphere permissions) accordingly on the platform he uses.
- As you now can setup various IMAP mail accounts you could create various vcard-information snippets for all the various identities you want to manage.
- A unique ID of course is necessary, this could be used for the NFC&#x2F;BT or just motion-sensor&#x2F;timestamp&#x2F;location based (&quot;bumping&quot;) handshake to exchange the information. The encrypted vcard-information package can of course be published directly or in form of a link&#x2F;QR-code via NFC&#x2F;BT&#x2F;local Wifi.
- It should not be file based to the user.
- The encryption (I don&#x27;t know if PGP allows this) should be able to terminate itself if the user didn&#x27;t refresh the permission or didn&#x27;t prolong the availability.<p>The big problem is...how can a protocol like this be made attractive to be used.
One would need a group of manufacturers&#x2F;companies, like Google with Android and it&#x27;s web-based contact database and Apple with iOS and it&#x27;s horrible contacts App.<p>The problem is...there is too much money in user-data... 
So I guess all of the above will remain a dream. *sigh"
2013-09-12T17:09:10.000Z,"Facebook deletes Social Fixer page, blocks page admins","One of the most important lessons I&#x27;ve learned during the growing-up phase of my being an entrepreneur -- and one of the first things I&#x27;m doing with my next startup -- is putting together a list of &quot;doomsday scenarios&quot; right off the bat.<p>What are the _single_ actions &#x2F; events &#x2F; scenarios that could kill your business overnight?<p>I emphasize single because every business is going to have the potential for a series of unforeseen events kill them (i.e. Microsoft would probably not have seen &#x27;Apple releases a phone&#x27; as a business&#x2F;Balmer-killer), but every business should be keenly aware of the single-points-of-failure (SPoF).<p>It seems obvious, but so many folks either willfully ignore or choose to pretend that SPoF don&#x27;t exist or rationalize the scenario away.<p>Examples:<p>* You run on AWS in a single availability zone, and that availability zone goes down for a week (&quot;The cloud is super reliable.  Amazon won&#x27;t go down.&quot;)<p>* Your CTO is the only person on the company who knows the product, and he quits overnight &#x2F; gets injured &#x2F; becomes incapacitated. (&quot;He&#x27;s my partner.  He&#x27;d never abandon the business.  We&#x27;re in this together.&quot;)<p>* You rely solely on Facebook &#x2F; Twitter &#x2F; Apple App Store and are at the mercy of their changes in policy (&quot;Oh Facebook would never just shut us down.&quot;)<p>* You&#x27;re built solely on the Foursquare Places API. (&quot;Foursquare won&#x27;t just kill all the companies that rely on their API...right?&quot;)<p>Etc. etc. etc.<p>Now, this isn&#x27;t saying that you should be paralyzed by the potential for SPoFs to hurt your business -- it may make sense to proceed even with them around (i.e. lots of people have made a lot of money building FB apps).<p>But you MUST be aware of what they are, and you MUST have a plan in place to handle the continuation of the business if one of them comes true."
2013-09-04T17:15:28.000Z,N-gram Analysis of the New York Times Weddings Section,"A layer is not a good idea from a business point of view in my opinion, given how most websites (Facebook, Twitter with their API changes, Spotify with their new messaging system and so on) are trying to lock you in. Maybe simply build a way to take you back directly to RapGenius, like a annotate-this-on-rg button."
2013-08-07T11:56:43.000Z,iPhone logs my complete movement profile,"That&#x27;s how the iOS core location API works (and it has been this way since iOS 5 atleast, if not earlier).<p>In particular, there is a |startMonitoringSignificantLocationChanges| method (<a href=""https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html#//apple_ref/occ/instm/CLLocationManager/startMonitoringSignificantLocationChanges"" rel=""nofollow"">https:&#x2F;&#x2F;developer.apple.com&#x2F;library&#x2F;ios&#x2F;documentation&#x2F;CoreLo...</a>), which &quot;callbacks&quot; into apps that have registered with the Core Location framework for significant change updates. The update is provided generally only when cell towers change, so it is not a battery drain (or not a significant one). Hence, your mobile operator definitely has this data, and is most likely already tracking it and&#x2F;or piping it to the NSA etc.<p>Significant change monitoring is used by Google Now among other apps (I believe Facebook also does this, I find that more sneaky since they have no obvious need for it). Google Maps <i>navigation</i> does not use this, since it needs more granular and accurate data hence it uses the more battery-intensive location APIs.<p>If the complaint is that it&#x27;s okay for Apple to collect this data for apps to use, but there is no need to log it, especially since the user might choose to not allow any apps to access their location data, then that&#x27;s a fair point. I don&#x27;t know if iOS shows these logs only on the beta versions, or whether they are stored persistently on release versions as well.<p>Source: I am a iOS dev, and have built location based apps."
2013-08-02T15:07:28.000Z,OAuth of Fealty: Resignation beyond sorrow on the Facebook Platform and beyond,"Unrelated<p>Did a small oauth project a few weeks back trying to integrate with web mail providers - gmail, ymail and outlook.<p>Gmail was a bit of a pain, but basically worked.<p>Ymail - a much huger pain, and extra hoops and far less usable documentation explaining basic workflow - &quot;oauth&quot; libraries continually failed me, and <i>only</i> using the crappy php4-style example code worked.  At the end of the day, it didn&#x27;t come close to being easy to use (and required my users to jump through extra hoops).<p>Outlook&#x2F;microsoft webmail?  Just didn&#x27;t work at all .  Oauth connectivity worked, as easily as gmail, but they simply don&#x27;t allow sending at all - no access to the inbox at all.  Oh sure I can &#x27;download contacts!&#x27; but can&#x27;t use outlook&#x2F;livemail to actually handle the sending programmatically.<p>It really hit me that as bad or potentially bad that google might be in this space, they&#x27;re &#x27;winning&#x27; hearts and minds just because they&#x27;re less bad than the alternatives.  I used to wonder why so many services and add-ons were built on Google properties vs Yahoo and MS, but I wonder no more; Yahoo&#x2F;MS just don&#x27;t want to compete in that space (making stuff at least usable for developers).  Facebook also seems to fall in to that camp, but right now they don&#x27;t have any major competition (except from G+ it seems).  But FB still has an upper hand with a full platform (however crappy).  I suspect when G+ rolls out stronger API stuff, the game will change dramatically."
2013-08-01T17:26:38.000Z,Ask HN: Who is hiring? (August 2013),"San Francisco, CA -- Standard Treasury -- Full-Time<p><i>Opportunity</i><p>Standard Treasury builds software for banks. That might seem boring, but everyone uses a bank and we dream of making their technology simple, beautiful, and intuitive. Think about your online banking system with its outdated, unpleasant UI and UX  were working to fix that. To get some idea of the market: U.S. banks spend $400 billion dollar per year on IT.<p>See <a href=""http://techcrunch.com/2013/07/09/standard-treasury/"" rel=""nofollow"">http:&#x2F;&#x2F;techcrunch.com&#x2F;2013&#x2F;07&#x2F;09&#x2F;standard-treasury&#x2F;</a> for some more information.<p>Email us at hiring@standardtreasury.com<p><i>Product</i><p>Our first product is a white-labeled API interface and developer experience that well sell to banks. Our technology enables banks to programmatically offer their services to their clients using modern, RESTful APIs. From here we plan on expanding into desktop online banking, mobile banking, and core banking (the systems that record teller transactions, and how much money everyone has in their bank accounts).<p><i>Traction</i><p>We have significant traction on our API product with several top-25 banks. The price points of these contracts range from $1 million to over $5 million per year. With these contract sizes and a growing customer base; we have an opportunity to avoid any significant equity dilution with a traditional fundraising round.<p><i>Team</i><p>We are a small team based in San Francisco focused on unsexy but incredibly valuable services that will change the face of banking and we are looking for the right people to join us. We are building a team of excellent people who work hard and dont tolerate bullshit. We want passionate partners who share our desire to shake up banking software.
We practice internal transparency a la Stripe (<a href=""http://bit.ly/VSv54h"" rel=""nofollow"">http:&#x2F;&#x2F;bit.ly&#x2F;VSv54h</a>) and corporate candor.<p>Email us at hiring@standardtreasury.com<p><i>Compensation and Perks</i><p>You can expect:<p>1. Great benefits. Medical, vision, and dental insurance for you and your dependents.<p>2. Great comp. Salary and equity. Critically, were interested in finding the right balance for you. We know there are some people who have a greater risk appetite than others.<p>3. Great perks. Free lunch and dinner, snacks, a stocked fridge, laundry service, gym membership, Clipper card, house cleaning by Exec or Homejoy, and delivery errands by Postmates.<p>4. Great flexibility.
(a) Flexible hours. So that you can live your life.
(b) Open vacation policy. We all need to recharge. We mean it  there is a two week minimum and well send you home in December if we have to.
(c) Paid maternity and paternity leave.<p>5. Great tools. Build your ideal workstations so you can have the tools you want and need. Buy the books you need or want on Amazon. Need a Kindle for your commute  get it. The corporate Amex can be used for all expenses under a standard of trust &amp; reasonableness.<p><i>Roles</i><p>We are hiring as quickly as we can find good people in a large number of roles.<p>1. Platform and APIs. For those who think they can build something as beautiful and durable as Twilio, Stripe, or Facebook Connect.<p>2. UI, UX, and design. This will start with easy-to-use API documentation and intuitive websites. In the future it will expand into the future of online (and mobile) banking.<p>3. Bank integrations. Half our job is taking pre-modern internal banking systems and making them disappear for our users. This requires patience and, fortunately or unfortunately, a deep love of puzzles.<p>4. Systems and security. We integrate with some of the most sensitive and secure systems in the world. We need to be even better. A security breach will kill our company.<p>5. Define your own role. Let us know what you want to work on to disrupt banking software.<p>Email us at hiring@standardtreasury.com"
2013-07-26T17:58:08.000Z,Request HN: An open source list of disallowed usernames,"Feel free to merge in this list below I created a long time ago. You may want to create a short script that lets someone compare the list they have to the current list so that they can quickly see what they have that is missing from the list and it then prompts them to decide which ones to merge in, and then it merges and submits a pull request with the new usernames.<p>&quot;restricted&quot;: [ &quot;about&quot;, &quot;abuse&quot;, &quot;account&quot;, &quot;accounts&quot;, &quot;activate&quot;, &quot;add&quot;, 
    &quot;admin&quot;, &quot;administrator&quot;, &quot;ajax&quot;, &quot;api&quot;, &quot;app&quot;, &quot;apps&quot;, &quot;archive&quot;, 
    &quot;archives&quot;, &quot;article&quot;, &quot;articles&quot;, &quot;auth&quot;, &quot;better&quot;, &quot;billing&quot;, &quot;blog&quot;, 
    &quot;cache&quot;, &quot;cancel&quot;, &quot;careers&quot;, &quot;cart&quot;, &quot;changelog&quot;, &quot;checkout&quot;, 
    &quot;codereview&quot;, &quot;compare&quot;, &quot;config&quot;, &quot;configuration&quot;, &quot;connect&quot;, &quot;contact&quot;, 
    &quot;create&quot;, &quot;css&quot;, &quot;customer&quot;, &quot;delete&quot;, &quot;developer&quot;, &quot;developers&quot;, 
    &quot;direct_messages&quot;, &quot;documentation&quot;, &quot;download&quot;, &quot;downloads&quot;, &quot;edit&quot;, 
    &quot;email&quot;, &quot;employment&quot;, &quot;enterprise&quot;, &quot;facebook&quot;, &quot;faq&quot;, &quot;favorite&quot;, 
    &quot;favorites&quot;, &quot;feature&quot;, &quot;features&quot;, &quot;featured&quot;, &quot;feed&quot;, &quot;feedback&quot;, 
    &quot;feeds&quot;, &quot;fleet&quot;, &quot;fleets&quot;, &quot;follow&quot;, &quot;followers&quot;, &quot;following&quot;, &quot;font&quot;, 
    &quot;fonts&quot;, &quot;forum&quot;, &quot;forums&quot;, &quot;friend&quot;, &quot;friends&quot;, &quot;group&quot;, &quot;groups&quot;, 
    &quot;gist&quot;, &quot;help&quot;, &quot;home&quot;, &quot;hosting&quot;, &quot;hostmaster&quot;, &quot;idea&quot;, &quot;ideas&quot;, &quot;image&quot;, 
    &quot;images&quot;, &quot;include&quot;, &quot;includes&quot;, &quot;index&quot;, &quot;info&quot;, &quot;invitations&quot;,
    &quot;invite&quot;, &quot;is&quot;, &quot;it&quot;, &quot;javascript&quot;, &quot;javascripts&quot;, &quot;js&quot;, &quot;json&quot;, &quot;job&quot;, 
    &quot;jobs&quot;, &quot;legal&quot;, &quot;lists&quot;, &quot;login&quot;, &quot;logout&quot;, &quot;logs&quot;, &quot;mail&quot;, &quot;map&quot;, 
    &quot;maps&quot;, &quot;mine&quot;, &quot;mis&quot;, &quot;misc&quot;, &quot;module&quot;, &quot;modules&quot;, &quot;news&quot;, &quot;node&quot;, 
    &quot;nodes&quot;, &quot;oauth&quot;, &quot;oauth_clients&quot;, &quot;offers&quot;, &quot;openid&quot;, &quot;order&quot;, &quot;orders&quot;, 
    &quot;organizations&quot;, &quot;plans&quot;, &quot;poll&quot;, &quot;polls&quot;, &quot;popular&quot;, &quot;privacy&quot;, 
    &quot;profile&quot;, &quot;profiles&quot;, &quot;projects&quot;, &quot;public&quot;, &quot;put&quot;, &quot;post&quot;, &quot;postmaster&quot;, 
    &quot;rdf&quot;, &quot;recruitment&quot;, &quot;register&quot;, &quot;remove&quot;, &quot;replies&quot;, &quot;root&quot;, &quot;rss&quot;, 
    &quot;sales&quot;, &quot;save&quot;, &quot;script&quot;, &quot;scripts&quot;, &quot;search&quot;, &quot;security&quot;, &quot;sessions&quot;, 
    &quot;settings&quot;, &quot;shop&quot;, &quot;signup&quot;, &quot;sitemap&quot;, &quot;space&quot;, &quot;spaces&quot;, &quot;ssl&quot;, 
    &quot;ssladmin&quot;, &quot;ssladministrator&quot;, &quot;sslwebmaster&quot;, &quot;stat&quot;, &quot;stats&quot;, 
    &quot;statistics&quot;, &quot;status&quot;, &quot;story&quot;, &quot;stories&quot;, &quot;styleguide&quot;, &quot;subscribe&quot;, 
    &quot;subscriptions&quot;, &quot;support&quot;, &quot;survey&quot;, &quot;surveys&quot;, &quot;sysadmin&quot;,
    &quot;sysadministrator&quot;, &quot;template&quot;, &quot;templates&quot;, &quot;terms&quot;, &quot;theme&quot;, &quot;themes&quot;, 
    &quot;tour&quot;, &quot;translations&quot;, &quot;trends&quot;, &quot;tutorial&quot;, &quot;tutorials&quot;, &quot;twitter&quot;, 
    &quot;twittr&quot;, &quot;update&quot;, &quot;unfollow&quot;, &quot;unsubscribe&quot;, &quot;upload&quot;, &quot;uploads&quot;, &quot;url&quot;, 
    &quot;user&quot;,&quot;users&quot;, &quot;username&quot;, &quot;weather&quot;, &quot;webmaster&quot;, &quot;widget&quot;, &quot;widgets&quot;, 
    &quot;wiki&quot;, &quot;ww&quot;, &quot;www&quot;, &quot;wwww&quot;, &quot;xfn&quot;, &quot;xml&quot;, &quot;xmpp&quot;, &quot;yml&quot;, &quot;yaml&quot;]"
2013-07-24T09:03:57.000Z,The sad story of Facebook Platform,"My experience with building an alternative Android Facebook client (which naturally uses almost every part of the API):<p>1) Just keeping up with documented and undocumented breaking changes is probably a full time job.<p>2) Expect that some feature of the API breaks every 2 weeks, especially login on their Android SDKs cannot be relied upon.(reliable for me is the industry standard for server uptime usually advertised - 99.99999%) If your application just uses few parts of the API it probably once every 1 or 2 months.<p>3) Substract 0.5 to 1.0 points from the rating of your app in the Android or iOS app store, depending on how heavy you rely on Facebook, because of the instability of their APIs.<p>4) Expect to spend at least a day per month writing bug reports. (Or just give up like I did)<p>5) You will do lots of reverse engineering to work around the bugs which they are constantly creating at a mind blowing rate.<p>My final conclusion after almost 2 years of working with their APIs (as a good actor) for my app (link: <a href=""https://play.google.com/store/apps/details?id=com.flipster&amp;hl=en"" rel=""nofollow"">https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.flipster&amp;h...</a>) is that I will never ever ever build again something that relies that much on Facebook.<p>If I need a friends list in a future project, I&#x27;ll just use the users telephone book, like I already did on a VoIP&#x2F;Messaging app for mobile that I built for the company I work for.<p>If I need private messaging I&#x27;ll just set up my own XMPP server.<p>If I need login, I will sure as hell save myself the headache of using their fucked up (and even when it is working - bad converting) login, and build one myself!"
2013-07-24T04:05:01.000Z,The sad story of Facebook Platform,"A very well-written and judicious obituary of Facebook Platform. I started building for it shortly after it launched, in late 2007. I had high hopes for it; I felt I was at the forefront of &#x27;the next big thing,&#x27; like others, so I invested a lot of my time into it. I made apps that served millions of people, one of which reached #1 in DAU at one point among all apps (back when they ranked apps by DAU).<p>As a lone developer keeping up with the changes and additions wasn&#x27;t easy - I literally ran the gamut - from FBML to FBJS to FQL to xd_receiver.htm to the JS SDK to FB Credits to Graph API. Initially I cut them some slack - it was a new platform, and we all make mistakes.<p>But things never really got better. I couldn&#x27;t tell you how many times I came across 4, 5, 6 different ways to do the same (seemingly simple) interaction with the platform, only one of which worked, and of course not the officially documented method. Or inaccurate or nonexistent API docs. Or how many times my app would suddenly break without pushing any changes - I became accustomed to just waiting it out until Facebook would release a patch for whatever they broke, and have to tell my users to just wait it out. This would usually occur Tuesday night&#x2F;Wednesday if I remember correctly.<p>Solutions to problems would usually lie in an obscure forum post after about 10 minutes of googling, posted by another friendly developer who probably tore his hair out looking for a solution. Ah, the camaraderie. Here&#x27;s a recent one I just came across (and they&#x27;re not hard to find) <a href=""http://stackoverflow.com/questions/16649634/ios-url-scheme-fb-event-llu-no-longer-working-in-6-1-1"" rel=""nofollow"">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;16649634&#x2F;ios-url-scheme-f...</a>\nAccepted answers that start with &quot;Facebook seems to have...&quot; and end with &quot;change or remove them completely at will&quot; tend to give developers more than a few gray hairs.<p>It also doesn&#x27;t help that Facebook tends to treat developers like sheep. At first this didn&#x27;t bother me - after all, they weren&#x27;t forcing me to build apps for them, and I was free to leave at any time. In the early days I&#x27;d contact developer support (I don&#x27;t think there&#x27;s a published number) to report bugs&#x2F;issues, suggest improvements, or genuinely ask for help with a problem. I never got a single non-automated response. Not once. So I stopped wasting my time and just became more and more bitter with every breaking change.<p>The 30% credits tax was the inflection point of the downfall. IMHO, that was a &quot;me too&quot; response to Apple&#x27;s iOS platform (coincidence that they came up with the same fee structure?) and was, for me, the tell-tale sign that they were no longer interested in their developers&#x27; well being. Yes, I understand they need to make money. I am all for ringing the cash register. But Apple and Facebook are different platforms. Apple has a highly trafficked worldwide app store. They let me put my app icon on my users&#x27; home screens (that&#x27;s valuable real estate), and I could push out unlimited notifications to my users&#x27; devices to keep them engaged and coming back with one click, among other things. Facebook has no such equivalents. I guess you could argue you&#x27;re paying for the viral distribution, but after they&#x27;ve heavily curtailed their viral channels and people have become more and more immune to app invites, there&#x27;s really no way to get free distribution anymore from Facebook. You still need to be buying ads, mostly from them.<p>If they wanted to make money and curtail spam, all they had to do was charge developers by each notification, invite, or newsfeed post they&#x27;d send out. Set a fixed price per message, or use a competitive auctioning system like adwords. The crapplications would never be able to afford their own spam.<p>I&#x27;ve since migrated my apps away from Facebook, either to mobile or on standalone web sites. Needless to say, my life as a developer has gotten a lot easier, and since I have more time to focus on improving my apps rather than keeping up with breaking changes, I&#x27;m doing better than I ever have before."
2013-07-23T23:21:11.000Z,The sad story of Facebook Platform,"Admittedly I did not make it through the whole article, but the comparison to iOS early on is laughable.  The difference is A) access to a social graph of your friends and their trivial online activities vs B) a powerful touch screen computer in your pocket.<p>The Facebook API did not have some incredible mishandled potential.  Instead, it was a very cool and forward-thinking API that had to constantly be modified to fight spam and keep up with Facebook&#x27;s rapidly evolving product (which is a couple orders of magnitude more engaging now than it was in 2007 I might add).<p>Sure the Facebook API could have been better managed.  Documentation and stability could have been better for sure.   Maybe even the features could have been better.  But the Facebook API is not a world changer.  The Twitter API is more along the lines of a world changer, but they decided they needed to build the most profitable business possible and being plumbing was not in the cards.  The Facebook API is a way to bolster the core Facebook product (which is amazing, probably the most engaging product ever created in human history short of addictive substances).  This idea that if they just did right by developers it could have been so much more amazing is just a cyberpunk fantasy.  The Facebook API could never be more than a reflection of a product.<p>Looking back on the mashup era, the future is not going to be from the goodwill of corporations to provide amazing APIs.  Rather it will be open source, open protocols and open data that allow for true advancement in the state of the art."
2013-07-23T19:16:30.000Z,The sad story of Facebook Platform,"Agreed. I&#x27;ve been working with their API for the last 2 years. When it does break it can take forever to get a response. I work for a Facebook preferred developer so we have an extra channel for getting bug feedback. If we weren&#x27;t a preferred developer, we would have had API bugs go unaddressed for months. Sure there were warnings about some changes, but sometimes major changes occurred that we did not see coming and had to scramble to figure out workarounds."
2013-07-23T18:24:40.000Z,The sad story of Facebook Platform,"2008-2009 I dealt with the Facebook API and they often broke things. The breaking changes notifications have improved things, but they still break things. Their insight analytics was broken for about a year. They just don&#x27;t seem to care about their API."
2013-07-23T18:16:46.000Z,The sad story of Facebook Platform,"This is ridiculous. Facebook is the de facto identity provider for a large fraction of mobile and web. If Facebook had let their platform continue in the original direction it was going, it would&#x27;ve choked off their core value prop (social networking) with spam.<p>And the Facebook Platform has provided significant value for non-games, too. Spotify, for instance, is only as popular as it is because of its early integration with Facebook.<p>Could FB have handled their platform better? Yes absolutely. The constant API changes and failures caused no end of headaches for developers and significantly reduced their platform&#x27;s value. But, I think the claims in this article are ridiculous."
2013-06-20T13:39:49.000Z,PHP 5.5,"The PHP team does take speed seriously and just about every minor release gets a little bit faster, sometimes alot, like 20% faster. I&#x27;m not even including stuff like the opcode caches that are built in now like APC or Zend Optimizer+. Lots of times, minor releases also get more efficient with memory usage too. If you are not happy with the speed, PHP is an open source project and you can contribute patches to speed it up.<p>Documentation gets fixed all the time. PHP has been historically known as having one of the best docs and the docs have contributed to its success. As with the source code, the docs are open to contributions if you feel the need to modify or add something.<p>That&#x27;s funny you say PHP can&#x27;t scale. Facebook, Yahoo, Etsy and a whole lot of other big PHP shops get more traffic than most of us will ever see in a few life times. So, PHP scales. Even pre-Hiphop Facebook got more traffic than most of us will will ever see. Many times scaling is more about architecture design&#x2F;implementation than language. App Engine is all about scaling and PHP runs on it. Oh by the way, at scale, every language is a data center toaster oven.<p>PHP people aren&#x27;t mad that people are leaving. They are happy that it is still the #1 language used for web development.<p>The only valid argument you have is the mixed methods and stuff. It would be cool to fix, but it would mean seriously breaking the API and would cause a lot of confusion. Every minor release breaks the API a little bit and people are unhappy. So, this might never change. I don&#x27;t see it as a big deal because if you are a great programmer, you know the quirks of your language and they don&#x27;t throw you off. Also, there is auto-completion and docs for you to look up things if you don&#x27;t know stuff off the top of your head.<p>It is true that lots of developers have left PHP, but it is a falsehood that everybody is moving away from PHP. If that was the case, PHP wouldn&#x27;t be running on 75% of the public facing web hosts out there. There would be a business incentive (because they are using another language) to get PHP off their box. They could devote those resources to the new language they are using. The 75% number shows that their is no mass exodus, but definitely evidence not everybody is using PHP.<p>Oh, by the way, PHP is open source so you can help contribute to its continued success if you like. If somehow you have already contributed, don&#x27;t stop till the work is done."
2013-06-06T13:44:04.000Z,Here's Why Google Reader Really Got the Axe,"MONOLITH VIEW, Silicone Valley, Thursday (NTN)  Were in a new world of computing. You need personal, social and on the go. So search will join the social on Google Plus.<p>We know Search has a devoted following who will be very sad to see it go. Were sad too. There are two simple reasons for this: usage of Google Plus^W^WSearch has declined, and as a company were pouring all of our energy into fewer products. We think that kind of focus will make for a better  and more sociable  user experience.<p>Its been a long time since weve had this rate of change  it probably hasnt happened since the birth of social media in July 2011, with our superior social media platform, Google Plus. So today were officially folding a number of other products into Google Plus:<p>* YouTube will become Google Plus Video. Your YouTube will be just the same, youll just need a username you have government ID for. Dont worry  you can trust us with it.<p>* Google Maps API will become Google Plus Maps. Youll need to add your house, your workplace, your favourite retail experiences and your credit card number to your circles, then you can look up any place you want. You can opt out to Apple Maps any time you like.<p>* Google Docs got absorbed by Google Drive, which will become Google SUM(). Imagine the social of your spreadsheets being rated by all your friends! Once again, users who opt out are free to revel in the joys of Office 365.<p>* Google Voice App for BlackBerry will be discontinued once weve found both remaining BlackBerry users and notified them.<p>* Orkut, of course, is being kept.<p>We know youll be delighted with the Google Plus experience, with hundreds of millions of people every month delighted to be using Google Plus! Or products that require a profile on it. Its like Facebook without all the annoying people on it. Or any people. But the people on it love it with huge enthusiasm, just like the ones who loved Google Buzz before we shot that through the head too. Come onto Plus, or Vic will cry. You dont want to see Vic crying, do you? Asshole. You probably hurt puppies, too.<p>To ensure a smooth transition, were providing a three-month sunset period so you have sufficient time to find an alternate web-searching solution. Good luck on that one. Because, and you know it in your heart, Google Plus as a search engine still sucks less than Bing.<p><a href=""http://newstechnica.com/2013/03/14/spring-clean-google-search-now-part-of-google-plus/"" rel=""nofollow"">http://newstechnica.com/2013/03/14/spring-clean-google-searc...</a>"
2013-06-05T14:25:11.000Z,Evidence of Turkish state violence in pictures,"Because current government tries to change how we live.<p>I think government's job is just trying to boost the economy, trying to not get into any war, paying the debts to IMF and etc.<p>But current ruling party forces our life styles into a shape which they draw.<p>Just one example:<p>- Taksim Square is a famous tourist attraction centers of Istanbul.\n- Government first said to bars (pubs): ""you can't put stalls on front of your bar."" People protested just on facebook and twitter.\n- They said: ""you can't sell alcohol after 10pm but you can sell other things"". Nothing happened. Just some protests but our PM labeled protesters as ""alcoholics"".\n- After that they said: ""Nope! No alcohol after 10 PM even for stores. You can't go to pubs, you can't buy from stores."" People protested but PM said ""So, you wanna raise your children as alcoholics?! We can't let this happen!""<p>You smell where these is going? Current ruling party tries to divide Turkey in two sides. ""Religious good citizens"" vs ""atheists, lgbts, alcoholics, left-wings"" etc.<p>Someone had to tell them ""just because you are ruling party, you can't make everything you want"". and we are trying to tell them this.<p>by the way, sorry for my english again."
2013-05-11T01:30:56.000Z,Learn You a Haskell for Great Good,"You don't need it. If you are a Junior developer (or aiming at being one) Haskell is a language you most definitely don't need.<p>Now, once you have your feet wet, it's worth learning. Here's why:<p>- Pure(mostly) functional language. This is in opposition to  Java &#38; Ruby, which while having functional aspects are OO (Object Oriented).
- It's okay not to know what a functional language is. It's making functions first-class citizens, such that a function becomes a value like any other.
- Separates IO from computation. IO is inherently impure and unreliable, so functions are generally pure and instead wrap IO in containers. Obviously, programs would be less useful (still use in the compiler running!) without IO.
- All of these concepts (and more) will change how you think about programming and make you a better programmer in all languages.<p>Haskell can be found in some backend stacks, the more notable examples I can think of are Mailrank (acquihired by Facebook) and Bump.<p>Personally, I've only done a limited number of projects with Haskell (a Postgres-backed beer API &#38; IRC bot) but I've grown to respect it as a language and through limited exposure has made me love FP."
2013-05-07T00:31:41.000Z,Live Tweets of Girl:Guy Ratios in San Francisco,"Interesting idea, and one I've seen before, but there's little incentive to contribute to this system. Reminds me of gasbuddy. In order for this to be crowdsourced, there would have to be an incentive to input quality data (see <a href=""http://www.factual.com/"" rel=""nofollow"">http://www.factual.com/</a> a local data API that gives you credits for uploading quality data).<p>A better system might be to scrape foursquare, twitter, facebook checkins, and just measure the ratios. It would be more automatic (no behavior change required), but would also be skewed (say, for example, women tweet more than men do)."
2013-05-05T01:52:59.000Z,Facebook Blocks Paths Find Friends Access Following Spam Controversy,"I think the statement ""if you're building your platform on another platform; you're at the mercy of the underlying platform"" is more accurate.<p>Facebook and Twitter have changed their Terms of Services/APIs multiple times which has resulted in bad times for Facebook applications like Vintage Camera and MessageMe[1] and Twitter services like Flattr[2].<p>However, Tapbots has been successful in adapting its Tweetbot client to comply with Twitter's API changes[3]. While the API changes cost Tapbots extra development time to bring Tweetbot up to snuff, their core business was not adversely affected. I don't think Tapbots has a bad time because they make Twitter clients that rely on third-party API access, but they are at the mercy of Twitter continuing to allow third-party API access.<p>[1] <a href=""http://online.wsj.com/article/SB10001424127887324392804578363033497647670.html"" rel=""nofollow"">http://online.wsj.com/article/SB1000142412788732439280457836...</a><p>[2] <a href=""http://thenextweb.com/insider/2013/04/16/flattr-twitter-payments-ban/"" rel=""nofollow"">http://thenextweb.com/insider/2013/04/16/flattr-twitter-paym...</a><p>[3] <a href=""http://tapbots.com/blog/news/dont-panic"" rel=""nofollow"">http://tapbots.com/blog/news/dont-panic</a>"
2013-04-27T23:36:38.000Z,Facebook Tells Parse Developers No Plans To Change How App Data Is Used,"&#62; Meanwhile, to calm fears about Facebook spying on Parse developer data, the company issued the statement We currently have no plans to make any changes to how Parse app data is used.<p>Keyword: currently<p>So yeah, we all rag on Facebook pretty hard here. What I'm most interested in is, if the uptick in adoption for Parse is true, why do developers feel more comfortable now that Facebook owns the product/company? Given the general pessimism about Facebook's fostering of their own API, and their laughable advocacy of privacy this whole article smacks of PR.<p>In my mind the whole modus operandi of companies like Facebook and Google is to absorb and mine as much information as possible. So if they <i>aren't</i> going to peek and analyze did they really just buy Parse for the API expertise?"
2013-04-26T06:24:56.000Z,Facebook buys Parse,"I'm in the same boat - was planning on using Parse and no longer think I will. Core issue: complete lack of trust that Facebook won't screw things up as they have so many times in the past (frequent breaking changes to their API, etc.).<p>Also, complete lack of trust in Facebook due to their lack of understanding of the need for privacy as opposed to pseudo-social ... ""stuff""."
2013-04-26T00:11:58.000Z,Facebook buys Parse,"I'm really sorry you've had bad experiences with the API. :/ I'm not sure how much consolation it will be to you, but we've gotten a lot better about this, even in the last year, increasing platform stability, improving our documentation, adding guides and Developers Live, giving 90+ day heads ups for breaking changes that you can opt-in to.<p>Facebook's definitely not going to stop changing and sit on its laurels; our Platform is going to evolve as well. I know this means work for developers but we'd like to do so hand-in-hand with our community, working together to build a better future. We're learning how to do that. We've made mistakes. But we're here for you and are trying every day to give you more.<p>Email me at dew@fb.com if you prefer to rant in a private forum, or here and I'll respond."
2013-04-26T00:01:30.000Z,Facebook buys Parse,"As someone in a similar situation: I don't like tie ins with huge companies.  My experience with the Facebook API has been horrible in the past (constantly changing, poor documentation).<p>In short, I don't want FB/Goog/Apple/etc. to keep buying up the independent operators that I know and love.  In a similar way, I prefer to frequent my local coffee shack over a Starbucks.  Nothing Starbucks could do would really change my mind.<p>There's not really anything facebook could do other than not being facebook.  Sorry."
2013-04-22T17:34:13.000Z,Why developers are leaving the Facebook platform,"I've personally experienced that, even with extremely minor integration. I wanted for people to ""like"" my blog posts on my scratch-built blog. There had been an outstanding style issue with their buttons a year before I implemented it. Finally, after my last round of trying to fix it(after having my blog just look subpar for 2 years), I checked the bug. Apparently they ""fixed"" it, followed by tons of people commenting and say nothing was changed.<p>So, I switched to twitter ""tweet"" buttons. Integration took my about 30 minutes. No style issues either. I'm not saying I trust Twitter more, they've had some crap API problems recently as well... but I'm just saying I don't trust Facebook, not for a second."
2013-04-14T22:00:32.000Z,"Updated Facebook for Android requires ""Retrieve Running Apps"" permission","As a full time Android developer, I can tell you that wouldn't be a burden.<p>First off, there are already lots of places you have to handle compatibility based on the version of the phone, intents available from other apps installed on the phone, or capabilities (even something as basic as a phone can't be guaranteed if you support tablets).<p>Obviously you can turn small things on and off in a block of code with if statements, but you can handle major changes with the Fragment model. If you have a drastically different UI due to a missing intent/permission/API feature you can actually ship the app with 2 different Fragments and decide which one to show at runtime.<p>As an aside, I turned off auto-updating for Facebook and will not upgrade from here. Too many permissions, too intrusive to the UI. I have deleted Facebook from my phone before and I'm fine without it now."
2013-04-12T20:37:01.000Z,"You know, Google, the web already had this feature","It's not Google's problem, or Facebook's or Microsoft's or anyone else's. The problem is architectural. With NAT and firewalls we have created a net that does not permit <i>easy</i> lateral communication. As a result, all communication must go through something in the ""cloud"" -- some third party. This is inherently favorable to monopolies for several reasons.<p>IPv6 and killing the in-network firewall would change things immensely."
2013-03-29T02:43:39.000Z,Facebook smartphone with HTC launching soon,"They can't sell devices that use an android-derived OS that isn't android compatible.  As long as the phone could still run arbitrary APKs without modification, they're still within the terms of the OHA, and HTC can continue to sell official android devices.  You can skin it up so it is unrecognizable, and you can lock it down so it only runs your App Store, you just can't change the fundamentals.<p>The trouble aliyun/acer ran into a while back was because aliyun actually changed the API, so that it couldn't run android apps.  I can't imagine why Ali would have done that, and I can't imagine any reason why Facebook would purposefully cut themselves off from the android ecosystem.  I'm sure HTC won't be running afoul of the OHA with this."
2013-03-28T10:09:55.000Z,The Positive Programmer,"Slashdot's current state really breaks my heart. Even with the occasional drive-by troll or the ""apk"" lunatic (what's his deal anyway?) things were tolerable, but lately it seems some of the older posters have lost interest and moved on (maybe to HN? Ha!) or have reverted to petty squabbling and deliberate obtuseness. I mostly go there to read comments from the veterans who've stuck around over the years and only recently bothered with creating an account. Thankfully there are still nuggets of gold among the threads.<p>There's a tricky Goldilocks zone when it comes to any forum and the biggest challenge is not treating it as a personal blog. You share ideas, yes, but the very platform demands you give up some control. Of how your ideas are perceived, what feedback you get and even weather those ideas are welcome in the first place. And all communities change... away from a <i>Beowulf cluster of X</i> and into the cloud, I suppose.<p>Trying too hard to hold new members to the light of older burning candles will cause them to flicker out or if you just let them burn willy-nilly, you risk starting a fire.<p>I'm hopeful we're not all doomed to walled gardens the likes of Twitter and Facebook just to avoid negativity raining on our parade (of course even they're not devoid of doom and gloom either, but ""blocks"" do give you an umbrella of sorts)."
2013-03-22T10:06:14.000Z,Users don't like social login,"""Sorry"", but you just moved the centralized identity to a different location, you aren't magically removing it: in fact, you <i>can't</i> magically remove it, because there is no such thing as a universal canonical form of identity. If there was, we would just use that instead of all of these more complex forms of identity we build up.<p>In the case of the e-mail address, you are moving it to the person providing the domain name the e-mail address is on; this is thereby explicitly why I brought up OpenID--which you seem to have totally ignored--as it is also a distributed system but yet it doesn't <i>force</i> the incorrect assumption that Persona does (specifically, that e-mail addresses are canonical identification mechanisms for users, and so nigh-unto encourages opaque tokens to be returned).<p>Let's put this another way: you seem to believe that there is a way to assign a token to a user in a way that works for them no matter where they are. I believe that that entire concept is a fantasy. In particular, I believe the one that Persona chose, which you seem to want to defend, only works for a very weird subset of users that are technical enough to understand that others make this incorrect assumption, and then organize their lives around it.<p>In comparison, once you assume that there is no such identifier, you start asking how you federate the choice, and you end up with the idea of ""identity providers"". However, you now have no stable way of holding on to identity as you change providers. I maintain that is an unsolvable problem, and it should be treated as an unsolvable problem: the concept of an identifier that can cross multiple identity providers is, again, a fantasy.<p>So the result is that you now have to ask the question of what identifier is used within an identity provider. I maintain that e-mail addresses are a horrible horrible choice, as they are known to be something that the people who provide them are known to reuse, and they are things many users want to be able to change often. Instead, it should be encouraged to make the token entirely opaque, with a requirement in the spec that ""this token will never get reused by any other user using your identification provider ever in the future"". AFAIK, OpenID states exactly this.<p>And yet, when I go to log in to a website using OpenID, I can select Google as my authentication provider, and then log in with my e-mail address. Later, when my e-mail address changes, I'll be able to log in with a different e-mail address, and Google will assign me the same OpenID identifier for my federated login with other websites. You end up in a similar boat if you use the various OAuth flows that other companies use, such as with Facebook, then using an API to get the stable identifier (which for Facebook is a number).<p>Look: I maintain a website with tens of millions of worldwide users, and I <i>only</i> have federated login. I deal with the issues of federated login day in and day out. I deal with users from very diverse user communities, and I see how they treat their e-mail addresses (as sadly, Google will not let you change your Gmail address without getting a new account, so a lot of users are forced into situations where their identification changes when there was no real reason why it should have been required). When I look at Persona, all I see is a support nightmare due to a fundamentally invalid assumption."
2013-03-21T20:01:09.000Z,"Show HN: A single, searchable API for all social networks, news, and blogs","You lost me here: ""We think that formats like RSS don't make sense for today's internet"".<p>And honestly.. another API? So it only works as long as you are in business (which is based on what by the way?) or decide to kill or change it? And also posting to my social media will be going through your machines? Seriously?<p>If you'd offer me an opensource script that I could call like ""localhost/post?message=""hello""&#38;where=""twitter,blog,facebook"".. that would be different story. But hey, good luck locking others in your new service."
2013-03-21T19:28:07.000Z,Im done with the web,"(Apologies for the big rant, these are some ideas that have been rattling about in my head recently and your post made some things clearer in my mind. It's not meant to be a post of factual 'truths', but an explanation for my (and perhaps others) reaction against the web as the one platform to rule them all. So it's as much an emotional gut reaction as a logical one. )<p>I think this (desire for ubiquity/multi-platform) is the main reason I don't see eye-to-eye with the people who are pushing for web apps for everything. Web apps everywhere is great for large corporations that want to provide their service on as many platforms as possible. It's great for venture capital funded startups where the name of the game is to get as many users as possible and get bought out before your money runs out.<p>I'm a small indie dev though, I produce software (not software as a front end to a non-software business), and I'm not looking to become a billionaire (really!). I want to develop software because I enjoy it: to solve problems for real people, to solve my own problems. So really I don't care too much about being able to target every platform at once. I want to target the platforms I like, using the tools that I like, and as long as the platform has enough users to make it viable then I can do that with native software on open platforms (the latter is important and why I don't write iOS software, for example). There is the risk that the platform I target gets killed, but if a lot of people use it then that's generally going to be a slow process, and there is plenty of churn in web tech and standards anyway so it's not like it provides immunity to technological change. Additionally, I just have a hard time working with web technologies. I find them much harder to use, to the extent that if using html/css was the only way to write software I wouldn't be writing software at all and I'd go stack shelves in the supermarket instead. Maybe I'm just not smart enough to use them effectively, I don't know.<p>I guess this is partly the old 'software as craft'/'lifestyle business' argument, but it saddens me slightly that the big industry players are moving us away from the kind of industry where you can write software that interacts with some arbitrary bit of hardware in unsupported or unintended ways towards a much more controlled and profit orientated one (i.e. your software running everywhere being the most important criterion of all). Web people are not the only offenders here of course, but arguments against things like iOS have been well explored over the years.<p>Some people seem to view the web as some kind of beacon of freedom, the little guy fighting the big bad industry giants of Microsoft, Apple, Adobe and so on. But from where I am, the web <i>is</i> the big bad industry giants. Writing web software means being restricted to a very limited sandbox. The APIs available to me are decided by what a small cabal of powerful companies (Apple, Microsoft, Google, Mozilla, Nokia and maybe a few others) can agree on. None of their interests align with mine (why would they?).<p>If Gopher had taken off and supplanted native development to the extent that people were using platforms that could only run Gopher apps, would the current web even exist? All user facing software being written to a single standard and API has good things about it, but it also limits new ideas tremendously (""sure you can add X feature you just need to get it through this committee of industry heavyweights first and get them all to agree, and then wait for them to ship it"").<p>What is important to me is that data uses open standards, whether at rest or in motion. If people control their data, and it is in open formats, then there is little companies can do to lock them in. Which is good for me as a dev since I can write software to help users work with that data. Web technologies don't do much to help me there, in-fact for the most part they have made it easier for companies to keep users data locked away on their server in unknown formats or behind proprietary APIs that I don't feel confident building software against. More concisely: email good, Facebook bad; FLAC good, Spotify bad.<p>I'm not arguing against all web sites/apps (or any hypothetical tech stack that offers a similar standard sandboxed environment). For some things it can be appropriate: wikipedia or hacker news or other inherently networked activities for example.  I'd prefer something less byzantine of course, but I expect that if the web apps model does take off then ways of targeting it that mean you don't have to think about CSS or Javascript will get more traction, in the same way that I can write native code without having to worry about assembly (most of the time). Javascript as a compilation target will become ""fast enough"" on most hardware for general purpose things (not for absolutely everything, but that is just another manifestation of the problem of not being able to break outside the sandbox when needed). So the technical issues of css/javascript being horrible are not the main problem.<p>I come from a social science background, which perhaps taints my view here. I look for the power dynamics that limit my real world ability to do things, and don't really care so much about theoretical ideas about a perfect world where everybody works together in harmony to make the web a platform that does everything you could ever need in a timely way. My issue is about power: who controls the APIs that ultimately lets software control your hardware and data? With open native platforms the answer to that is anybody. With the web it's the tech giants alone."
2013-03-16T08:36:07.000Z,Facebook Cuts Off MessageMes Access To Its Social Graph,"Your argument would be valid, but the scenarios you cite are totally orthogonal. Here's why:<p>1) You don't pay Facebook for their API. If something isn't working, you can't question anyone, nor are they liable to answer you. In short, they are doing you a favor by letting you use their API free of cost.<p>2) A credit card processor like Visa/Mastercard takes your money, and returns you a service instead. IF something isn't working as it should, you can call them and ask them what's wrong and they are liable to answer you, you can even request a refund, failing to provide which you could possibly drag them to a court, which isn't the case with an free API provider like Facebook/Twitter.<p>3) When you integrate the Facebook platform as an additional feature to your site, it's totally fine as long as it doesn't affect the core business model, because even if something gets screwed, users will not worry about a tiny missing feature. But when you build a business on top of someone else's API, be it Twitter or Facebook, it's like building a sand castle at the scale of a real world house and expecting it to be there forever. That's how vulnerable your business model becomes, because there is SO much that you have no control over. In the case of a credit card processor, they don't control your business model, they just do you a service in exchange for money, which is totally different, and you can change providers at a later stage if you find them unsatisfactory, which isn't the case with building something on top of an API like that of Facebook's/Twitter's."
2013-03-16T01:52:52.000Z,Facebook allegedly skirts Google Play store with latest update,"Sadly, this is sucky on both ends of the equation.<p>When I interned at Facebook two years ago, it was a PITA to change the API to work around bugs that were fixed in old versions of FB4A because people wouldn't upgrade -- whereas the vast majority of iOS users upgraded the Facebook app within days of a new release showing up in the App Store. The addition of non-Play devices makes this even worse.<p>Granted, I had my own reasons for not wanting to upgrade, so I can sympathize with users, too. (Facebook was pre-installed on my device, and upgrading caused it to take up space in the 180 MB volatile/userdata partition on my Nexus One. I eventually solved the issue by buying a Galaxy Nexus, but I recognize not everyone can buy new phones that frequently.)"
2013-03-16T00:26:44.000Z,Google is about to learn a tough lesson,&#62;     When I suggest that Twitter/Facebook is the new RSS<p>please explain how twitter and facebook are open protocols so i can suscribe facebook or twitter feeds on the long run without my facebook/twitter reader client breaking because of changes in the api or without having to create an account on their plateform.<p>RSS exists because it allows free flow of information. I dont recall facebook or twitter being open plateforms that promote interoperability.
2013-03-09T17:28:44.000Z,Netflix no longer issuing new API keys,"Don't build a business on an API whose backend you cannot change at will.<p>Same goes for protocols (Facebook Login vs OpenID), format (DOC vs ODT) and data sources (Gracenote vs MusicBrainz). If you cannot replace a service that is behind an API with your own implementation, you must be ready to fold your business the day your provider changes the service terms."
2013-03-06T12:18:36.000Z,Why The Web Will Win,"<i>The last several years have been about the disruptive transformation of hardware devices that have changed the way people consume information and go about their daily lives. This is all about to change. Why? Because in the next decade these technologies, operating systems and hardware devices that are currently being built by the aforementioned brands, will be so similar to each other, the consumer will care less about the actual design of the hardware or its brand. People will just demand a pane of glass, more or less. Glass will just be glass. The wow factor will wear off after awhile.</i><p>Having developed quite a few apps and websites I find myself agreeing with this thesis - the web will win in the end, not because of any inherent technical advantage (in some ways it's behind mobile apps in terms of performance, look and feel etc), but because the open web has so many advantages for developers and users that in the end it will overcome its disadvantages, and it is of course improving all the time as browsers improve, so the performance gap is narrowing constantly. At some point the performance won't matter, and the advantages of the open web will come to the fore.<p>The contrast between deploying a few fixes a day to a website, and churning out new app versions only to have them rejected by someone at Apple, often for inscrutable and unjustified reasons, then waiting days or weeks for approval, could not be more marked.<p>And as a user, the advantages of the open web (i.e. not walled gardens like Facebook) will I think have an irresistible pull - advantages like linkable, shareable content, content on any device even unforeseen ones, not having to rebuy apps but just subscribing once and using anywhere. The fact that web dev imposes so many limitations is actually a strength, as it means it can be deployed almost anywhere, and give at least some value to users for decades and over any new devices which come out, as opposed to the binaries being created for current mobile platforms, which in a decade will be forgotten.<p>I almost wish Apple had stuck with their first solution of asking developers to use a webkit API on iOS. It would be fascinating to know just exactly how surprised Apple were by the reaction to their suggestion that app developers develop using webkit, and whether they always planned to have a native SDK. At first it certainly seemed like a rushed decision and something they had to scramble to keep up with, and if they'd stuck to HTML it would be interesting to see how the landscape would differ now - perhaps we'd have interoperable apps between mobile devices, rather than the silos we have at present."
2013-03-05T10:41:03.000Z,Dalvik patch for Facebook for Android,"Parallels?<p>&#62; I had the WordPerfect engineer on the phone. He had given me access to the WordPerfect source code, but <i>I couldnt give him access to the Windows code</i>. So we were each stepping through WordPerfect in the debugger, him in Utah and me in Bellevue. I could see what his code was doing and what Windows was doing, but <i>he could only see disassembly for Windows</i>.<p>FTA: Instead, we needed to inject our secondary dex files directly into the system class loader. This isn't normally possible, but <i>we examined the Android source code</i> and used Java reflection to directly modify some of its internal structures. We were <i>certainly glad and grateful that Android is open source</i> otherwise, this change wouldnt have been possible.<p>Facebook are not saying that Android/Dalvik has a broken API. They are saying that that due to the size of their app they hit an interna limit, this buffer limit increased between platform versions and they needed to create a robust hack to get their code working on older platforms, They were able to do this by taking advantage of the open-source nature of the platform and they did not need a Google engineer on hand to help them though they did get to use a Google test lab (which is not fair on smaller companies). Also Google have not inserted code into Android/Dalvik to deal with the Facebook trickery."
2013-02-08T00:34:25.000Z,Why all my iOS Apps are on hold - or iCloud sucks Part II,"iCloud in general ""just works"". It was pretty terrible from the get-go, from reliability to really egregious bugs in the OS, but at this point is pretty stable.<p>The real problem here is the combination of iCloud and Core Data (for non-Apple folks, the built-in persistence/object model framework).<p>In a somewhat simplified way, Core Data is a data store most commonly backed by SQLite. It's used everywhere from your mail app to the Facebook app. It's handy and convenient when it isn't trying to kill you - it's one of the more complex frameworks that Apple ships, and the documentation is <i>extremely</i> poor for it. It also doesn't help that there is a <i>lot</i> of quirky behavior that's more or less tribal knowledge to long-time Apple devs and WWDC attendees, and is has enough concurrency gotchas to fill a container ship.<p>So, Core Data is not the simplest piece of code to work with from the get-go, and then you pile iCloud on top.<p>iCloud is conceptually pretty simple - there's a directory on your file system that is replicated to Apple's servers, and back down to each one of your devices. When files change the OS sends notifications to your app informing you of such. If you're using iCloud as a distributed file system (a la Dropbox), it's easy to integrate.<p>The trouble with this model is that Core Data stores can be in fact quite large. If you have a 30MB database of, say, recipes on your disk, you really don't want to resend the whole thing every time your user alters a row. Apple special-cases Core Data stores in iCloud by sending only deltas, but the implementation is utterly broken:<p>- There is no baseline state(s). The database is literally the playback of every delta, with no canonical snapshots. Ever.<p>- iCloud is really bad at sequencing the deltas, especially if (somewhat) concurrent changes are happening. Core Data is also <i>terrifyingly bad</i> at conflict resolution when deltas from different devices don't line up.<p>- The above points means that it's <i>trivially easy</i> to break your entire database, as your deltas no longer play back to a sane database file. When this occurs there is no way to roll back your database, since there is no concept of a snapshot or last known good state.<p>- This is compounded by some really horrible API design on Apple's part. When your iCloud database becomes corrupt <i>it fails silently</i>, with absolutely <i>no</i> API that allows one to determine said broken state. Your app literally stops working with none of the OS making a single peep, and no way for you to proactively check your database's state. iCloud seems to print some debug things into your console indicating this failure, but neither your app nor your users have access to it. This manifests in your app (and in tech support requests) as ""iCloud just stopped syncing"" - your device stops transmitting deltas and simply works off of the last locally-cached good state, all without telling the dev or the user.<p>- This is further compounded by the fact that the entirety of Core Data+iCloud was rushed out the door. Documentation was non-existent even up to the day the new version of iOS went out to the public. There was literally only one source of information: a thread on the Apple dev forums that Apple engineers would sometimes pop into.<p>- This is further compounded by the fact that even the Apple engineers themselves seemed to have no idea how to implement an app with iCloud + Core Data. The example code (provided deep, deep within aforementioned thread) made 90 degree turns seemingly every few days. The same sample would have <i>dramatically</i> changing implementations from week to week. The Apple engineers in the thread seemed as mystified as the people trying to use the framework.<p>- The poor documentation and poor state of sample code, as well as what is IMO a fundamentally broken architecture means that iCloud + Core Data remains a complete nightmare to this day. I think the poor architecture is really the core of this here - while Apple could have provided better docs and better support, I believe the fundamental architecture choices made here means Core Data + iCloud would never have been workable.<p>- The icing on top of the cake was an extremely egregious bug that existed at launch (unsure now, you couldn't pay me enough money to work with that API ever again). ""Okay, so our deltas are completely fucked"" you say, ""Why don't we just delete the app's entire iCloud bucket and start over?""<p>A jolly good idea until you realize that a bug in iOS/iCloud means that <i>when you delete an app's iCloud storage ""bin"", it cannot be recreated by that app, ever again</i>."
2013-02-06T14:59:02.000Z,Facebook breaks logins,"I was having lunch recently with a few developers, and the topic of ""What is the worst API you ever had to work with"" came up.  The unanimous answer was immediately ""Facebook"".  Everything from the documentation, to multiple ways to do similar things (each of them incompletely documented), to deprecations that never actually go away, to arbitrary breaking changes."
2013-02-06T14:58:31.000Z,Facebook breaks logins,"I think all the points you make are obvious. If you rely on something that you have no control over, you're liable to get burned if you don't pay attention to API changes or if Facebook doesn't keep it's contracts from an architectural standpoint.<p>But it's also the price you pay if you want to tap into their user base. So it is what it is. You just have to keep your head on a swivel. <i>shrugs</i>"
2013-02-06T09:26:39.000Z,Facebook breaks logins,"Remember when they changed everyones default email to be username@facebook.com? Yeah, thats pretty much all you're going to get from the API."
2013-02-06T06:33:20.000Z,Facebook breaks logins,"This is a good time to remind ourselves: Facebook's API is a service and can be a single point of failure for your business. Unlike AWS, you don't even pay for it and it has a history of being problematic[1].<p>Allowing users to log in to your application using Facebook is quite common. It can be easier for users. It can give you access to demographic data with less work. But the API can die, change, or act generally unpredictable. And you have zero control over it.<p>This particular issue is impacting 9gag, Pinterest and others. Whilst many of these sites support user logins without Facebook, just as many of them don't. Imagine if tomorrow Facebook charge to connect to their API or there's some extreme exploit. How much damage would your application face?<p>[1]: <a href=""http://techcrunch.com/2011/08/11/facebook-wins-worst-api-in-developer-survey/"" rel=""nofollow"">http://techcrunch.com/2011/08/11/facebook-wins-worst-api-in-...</a>"
2013-01-31T16:18:28.000Z,Funding agencies urged to check for duplicate grants,"Research scientists will soon encounter similar pressures to entrepreneurs who negotiate the Medicare system. The scenario outlined in the article is similar to many of the prosecutions for ""Medicare fraud"".<p>Briefly, Medicare fraud is alleged whenever a business charges a lot to Medicare. This could be due to rapid growth or due to actual fraud, but it's immaterial. And often rapid growth happens due to exploitation of a previously unseen gray area (e.g. Facebook News Feed for Zynga) so regulators usually have an excuse to allege fraud. Unlike FB, they don't just block your API calls; the consequence of a new name appearing at the top of a ""biggest earner list"" is often a meteoric descent from a fast growing business into a federal prosecution.<p>NIH is much nicer than other HHS agencies, as its primary duty is to hand out money rather than enforce regulations. But what happened here is similar. Someone ran analytics to try and figure out which scientists were getting the most money from NIH, and to put some blocks on that in a time of scarce funds. In this case, the issue is that scientists naturally want to avoid duplication of work, and some projects require more funding than the limits of one grant. So they package up the same papers for different agencies with a different spin (bio-terrorism for DoD and bio-remediation for DoE). That's natural and good: leverage your existing work to get more money for the same amount of input. Put another way, this is like selling the same product (your research output) in multiple distribution channels.<p>However, problems arise with third party payment. I don't mind that you got a ""duplicate"" can of Coca Cola, or that the Coke company amortized labor across two different cans. But the government is ostensibly paying on behalf of the public for this work, and its incentives are more to keep scientists employed and to appear egalitarian than to maximize scientific productivity <i>per se</i>. It also wants to award less in grants while seeming ""fair"".<p>In any case, while nothing criminal/civil is being alleged now, I anticipate that grant agencies will make use of software that checks for duplicates in a way to reduce the outflow of money and make it harder for scientists to leverage the same work in multiple channels. The only silver lining here is that some scientists may start to explore non-governmental channels for funding, like patrons in the technology sector, or Kickstarters, or MOOCs, or other vehicles. Another response will be predator/prey like evasions by scientists, to set up grant collaboratives of K people in which the senior author is changed for each application. This will mean no individual scientist appears at the top of a list of ""biggest earners"", and is not targeted for duplication-based denials."
2013-01-30T08:21:36.000Z,Ask HN: Facebook Ads price charts?,"The best way would be to have access to Facebook Ads API. That would make everything really simple.<p>However keep in mind that you could only get a generail indication of the price through time for your given target. The real CPC Facebook apply to your ads change every minute and it's highly influenced by the quality of your ad.<p>The better your CTR is, the lower the CPC goes. Another factor that influence the CPC is how wide is your target. Usually targeting a small segment is more expensive than a broad target.<p>Anyhow, you can probably gather some useful data on CPC for your market from Optimal Social: <a href=""http://www.optimalsocial.com/"" rel=""nofollow"">http://www.optimalsocial.com/</a>"
2013-01-28T13:18:09.000Z,30 pounds in 30 days,"His quote does seem a bit high. In my experience (Rails and iOS developer) if your back end is mostly RESTful resources and a simple data structure, and your front end is standard iOS components like simple tableviews and a NavigationController, you can get an MVP done in the $5k-$10k range in a week or two.<p>HOWEVER: everybody has a different opinion of what is meant by ""Minimum"", ""Viable"", and ""Product"". $5k gets you only bog-standard UI components and a simple data model. Animations? Fancy graphics? Optimized performance? Search? Custom UI? Graceful error handling? Localization/Internationalization/Translation? Integrating with Facebook and dealing with their constant poorly-documented changes to their API? These tend to be little bullet points in the spec, but each on their own can take as much work as the MVP does.<p>With modern tools it's pretty easy to build a basic version of an app quite quickly. But it turns out that most people don't actually want a basic version. Often they have to see the basic version first to realize that, though.<p>So the question ends up being: how important is schedule/cost to you compared with details/performance?<p>To be honest, though, most people who come to me wanting a simple iOS app are better off with a mobile-optimized webapp instead. Much quicker to build, already cross-platform, and no deployment delays while waiting for App Store approval. Mobile apps might not be as sexy as a native app, but saving lots of money is also pretty sexy."
2013-01-24T00:12:47.000Z,Personal Analytics for Facebook,"I'd be delighted to answer your questions:<p>1. I don't believe that the two documents are in conflict. Our privacy policy states:<p>""When you use any Wolfram|Alpha application associated with a Third-Party Site (""TPS""), including but not limited to social networking sites such as Facebook, we may collect personally identifiable information about you from the profile you have established at the TPS.""<p>When you use Wolfram|Alpha Personal Analytics for Facebook, we do access your Facebook data, which you have to authorize through Facebook. That data does contain personally identifiable information. That isn't in conflict with the FAQ. The FAQ states (apologies if this is repetitive):<p>""In order to do analysis on your Facebook data, it is necessary to cache it temporarily on our servers. We acquire the data through the Wolfram Connection app using the Facebook API, respecting whatever privacy settings you and your friends have given to Facebook. Our system is set up to cache your data on our servers for one hour, which allows you to perform queries efficiently. The default behavior is to delete personally identifiable data after one hour.""<p>We do collect personally identifiable data from Facebook, but we don't save this data for more than an hour (unless you specifically enable Historical Analytics which tracks changes to your Facebook over time).<p>2. There shouldn't be any conflict between the FAQ and the Privacy Policy, the FAQ is specific to Wolfram|Alpha Personal Analytics for Facebook whereas the Privacy Policy is global to all of Wolfram|Alpha. As far as my being pseudonymous, my name is John Burnham and the above link is to my blog post. Send me an email at johnb@wolfram.com if you like.<p>3. &#38; 4. Yes, the privacy policy is subject to change, which is standard for many TOS's. I'd like to point out though, that our Privacy Policy also states at the bottom of the page that we haven't changed it since March 2009. If we do change it, you can refresh the page at any time and check the bottom of the page for the date of previous change. What's currently on the web is the current legal document.<p>Links:
FAQ <a href=""http://www.wolframalpha.com/fbfaqs.html"" rel=""nofollow"">http://www.wolframalpha.com/fbfaqs.html</a>
Privacy Policy <a href=""http://www.wolframalpha.com/privacypolicy.html"" rel=""nofollow"">http://www.wolframalpha.com/privacypolicy.html</a>"
2013-01-09T20:12:20.000Z,"Codecademy introduces API lessons with YouTube, SoundCloud, Parse, and more","The fastest way to annoy someone is for the docs/examples to be out of date.<p>Previously Facebook has introduced API breaking changes pretty regularly, so it would be challenging at best. They've made a commitment for 2013 that breaks will only happen quarterly so it should be safer for Codecademy to commit soon."
2012-12-01T22:04:27.000Z,Zynga Stock Dives as Facebook Keeps Backing Away,"Not really. Zynga isn't failing because they were screwed by a Facebook policy change or really anything Facebook themselves are doing (unlike, say, Twitter's recent API brouhaha), but because of their business model. AznHisoka in this thread said it better than I can; they have nothing to build a business on."
2012-11-12T09:53:10.000Z,Watch Mitt Romney's Facebook Likes Decrease in Real Time,"<i>""I find it an extremely good example of the new types of data historians will get to use in the future.""</i><p>Potentially, but I have two concerns about this. First, I'm not familiar with the facebook api, but does it does it provide a way to determine an account's like count retrospectively? Or does this kind of analysis rely on scraping pages over the time-period of the analysis? Put it another way, could a historian in twenty years time reproduce this data, or does it have to be collected now because no historically useful record is kept? I suspect that online sources actually leave much less historically useful data than, say, newspapers on microfiche, despite online data being much easier to analyse.<p>And secondly, what happens to the data if/when facebook or twitter or google disappear or merge or change massively. As commercial entities, none of them are in the historical data business for anything other than short-term commercial gain. They have no obligation to the more distant future.<p>I wonder what historians think about everything going digital?"
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
2012-04-26T13:55:35.000Z,RSS will never die,"One point I am missing on the whole ""RSS is dead, long live Twitter"" topic are their differences on the technological and on the legal side.<p>RSS is an open protocol, free for everyone to implement either way, producing or consuming, filtering or aggregating. Twitter and Facebook offer access to their feeds via their API, which you can only use when you agree to their terms of service. And they retain the right to change the API any time or to restrict access at their own sole disgression.<p>RSS is free as in freedom, Twitter and Facebook are not. And that alone is a good reason to keep RSS around."
2012-04-25T23:31:03.000Z,"Introducing Google Drive... yes, really","What you are referring to isn't part of the OAuth spec, as far as I know, is it something particular to Google's API?<p>The cached access token could also be considered a factor, although it depends on the token expiry policy. If the token doesn't require a refresh using a refresh token (which must prompt a password) often enough its security is compromised.<p>I don't know what kind of expiry Google's OAuth token has, but last time I tested this, it was a very long time. I believe Twitter's live forever. Facebook's offline access scope (which you will need for a normal app) lives forever until the user changes his/her password (see <a href=""http://developers.facebook.com/blog/post/2011/05/13/how-to--handle-expired-access-tokens/"" rel=""nofollow"">http://developers.facebook.com/blog/post/2011/05/13/how-to--...</a>)."
2012-04-22T18:55:08.000Z,Facebook Scripting Language - A really rough idea,"This is what I always have thought to be a huge problem in RESTful API design of all major companies like Twitter, Facebook, Google etc. It is mainly pull-technology. One has to ask the Facebook-server all the time: get a list of friends, get a list of friends, get a list of friends.<p>I'd love to see an API model based on events and callback URL's.<p>pseudo, but you'll get the idea:<p><a href=""http://api.facebook.com/event/on-friend-connect?callback=http://myserver.com/event/friend-connected"" rel=""nofollow"">http://api.facebook.com/event/on-friend-connect?callback=htt...</a><p>IMHO, WebServices should communicate in an evented fashion. If I want to draw an umbrella on myserver if it is going to rain in The Netherlands, I don't want to ask the weather server every X minutes: is it going to rain? is it going to rain? is it going to rain?<p>No, I want:<p><a href=""http://api.weeronline.nl/event/on-weather-change?location=Utrecht,NL&#38;callback=http://myserver/event/weather-changed"" rel=""nofollow"">http://api.weeronline.nl/event/on-weather-change?location=Ut...</a><p>pubhubsubbub solves this issue for RSS feeds, but pubhubsubbub is way too narrow to me. I hope evented API's will become the next big thing, enabling developers to create a whole new bunch of awesome products."
2012-04-18T23:47:55.000Z,Don't Build APIs,"My biggest issue with web APIs is the speed at which they change means you often get a lack of maintenance of documentation. The speed of change compounds the effects, the discussions you find on the API usage only months old have lost relevance in non obvious ways.<p>Facebook and Paypal are or have been guilty of this in the past though Facebook is a lot better than it was."
2012-04-18T23:41:00.000Z,Don't Build APIs,"I'm actually quite fond of the way Microsoft historically bent over backwards for backward compatibility, but OTOH Facebook is also very successful and has a very successful ecosystem of third-party users of their APIs.  Facebook is like the anti-Microsoft in that they randomly change and break their APIs at such an alarming rate that you have to wonder if they are intentionally fucking with you if you code against their APIs.<p>Obviously the needs for a web API and the needs for an API with a specific binary ABI on a local OS are quite different but I think for either environment, most API developers can comfortably fit somewhere between those two extremes where they don't continue to support inherently unsupported API usage, but they don't break something randomly every week."
2012-04-18T10:17:38.000Z,Sergey Brin's Clarification On Guardian article,"Sorry, I don't get your point.<p>You can be successful with your product on the WWW without employing any Google services, being totally independent. If people and other sites like you and link back to you your traffic will quickly skyrocket<i>which feels natural.</i> You are not obliged to use any Google service like GA. Just use the Internet and its open standards and you are ready to go because Google left the Internet's core like it is and didn't build a walled garden around it. That's the great thing about the web: it's decentralized and everybody can contribute, Google haven't tried to change this. That's why I don't like the native app trend with the appstore, all the innovation the Internet brought us are vanished by one central and strict entity and nobody cares, Android at least tries to emulate some parts of the net (i.e. by using intents, allowing multiple appstores, with the open nature of Android, etc.), Google is regarding their marketplace Play much more relaxed than Apple.<p>Looking at the Appstore or the Facebook API, there are so many rules which don't follow any of the core principles of the Internet. You have to play by these rules otherwise you are banned or completely and utterly dependent of one single entities. Moreover, if you then play by Apple's or Facebook's rules you still do not get the impact as from Google traffic-wise.<p>Ultimately, Google haven't entered the Chinese Market which shows the company's values. Every larger western corporation have build joint venture based branches in Chinaevery corporation, except Googleand that's distinguishes Google."
2012-04-16T08:39:49.000Z,Sergey Brin: Facebook and Apple a threat to Internet freedom,"Google could also be more open:<p>- They introduced 'rel author' HTML attribute to assign authors to web-content. Despite being an OpenID provider, they only allow you to 'verify' with a Google+ profile. This doesn't feel much like the 'open web'.<p>- Google+ isn't crawlable from the outside. (just like Facebook isn't).<p>- The Facebook API allow a user to 'connect' with a site so they can pass data back and forth. Google+ does not.<p>- Google search now strips your search term from the referrer header so webmasters cannot analyse the data. They state privacy as the reason, yet will sell you the data if you pay via Adsense!<p>Google are great company, who have done some awesome stuff and been a positive force for the internet. However, since Page took the helm they seem to have changed direction somewhat."
2012-04-12T01:18:22.000Z,Google+ Thank you Google for breaking all my apps and extensions,"&#62; Facebook never did stuff like this, never forced us to change layouts like this. They have given the users a transition period to use the new layout.<p>This is total bullshit. That's a fairly recent change for Facebook. For a long time they rolled out changes to the UI without warning. Hell, they'd even break <i>documented APIs</i> frequently. Even ""breaking"" API changes only get 30 days warning, and that 30 day minimum window was set in <i>2011</i> after developer complaints!<p>Extensions based on specific HTML structure in a third-party service will often break, and spectacularly so. It's not as if Google+ broke APIs without warning - they redesigned a site. Google never asked anyone to write extensions that change the look/function of Google+, and having done so doesn't mean they owe you a thing."
2012-03-31T17:06:57.000Z,Charlie Stross on Girls Around Me,"Tangential to the actual topic of discussion:<p>what exactly has changed in Facebook's developer/app policies that an app like this is possible today, while a year ago something like Breakup Notifier was blocked from Facebook's API? Was it just that Girls Near Me hadn't gotten noticed yet?<p>(I see that Foursquare blocked Girls Near Me from their API, but I haven't seen a response from Facebook yet.)"
2012-03-14T03:13:39.000Z,Why I Left Google,"An observation from the inside of what I've been seeing/feeling from the outside.<p>When Google started killing the ""cool"" stuff, I perceived (rightly or wrongly) the writing on the wall as far as attracting and retaining top talent.  And they lost my semi-hesitant... ""devotion"".  I wanted to believe they really did care about e.g. next generation energy sources, at a time when even our lame-ass federal government can't get its act together on that front.  And Earth, Maps, various API's (Translate, for example), and the like produced fundamental changes in various environments and endeavors, both professional and hobbyist.<p>Now, sliding into ""corporate"", lame-ass Google.  So sad.  Perhaps inevitable; nonetheless, if so, then ""just another"".<p>P.S.  As I reflect a bit more, I still have more respect for them than e.g. Facebook (manipulation) or Microsoft (domineering, monopolistic, and (perhaps resultantly) now fumbling senior management).  But I fear the arrow is pointing in the wrong direction.<p>And yeah, this is just one random guy's observation.  I guess I've added it because in the past Googlers (and ""Google"") seem to have occasionally observed and perhaps absorbed some of the collection sentiment expressed on HN."
2012-03-01T11:46:56.000Z,Making of an iPhone app design (Sharypic),"The sidebar isn't a stock Apple API. Before implementing it, I've been benchmarking a few frameworks on github, none of them being appropriate for the app needs. I wanted the facebook sidebar-like menu but being able to use a standard UINavigationController for the rest of the navigation in the app. In the Facebook app, they've implemented their own view navigation system.<p>So in the sharypic app, it's a custom implementation where the sidebar view is added directly to the main UIWindow, but below the rootViewController. Tapping the menu button triggers an animation to move the whole rootViewController's view left/right.<p>It's not ideal because the sidebar view controller doesn't get the orientation change info anymore and making all the views stay in place requires an important amount of hacks (for instance presenting a modal view controller while the rootViewController is shifted on the right causes the rootViewController to be placed back to its original position).
The code actually can't be exposed as a reusable framework because of all the hacks implemented here and there.<p>Since then, I stumbled upon <a href=""https://github.com/edgecase/ECSlidingViewController"" rel=""nofollow"">https://github.com/edgecase/ECSlidingViewController</a>, which can be a good candidate for a sidebar implementation, and I might switch to it for the future of the sharypic app.<p>Romain, developer of the sharypic app"
2012-02-29T16:56:55.000Z,Windows 8 Consumer Preview released.,"Heh. I think they are going the right way, too, but they're up against the types of those who think Facebook or YouTube should <i>never</i> change the UI and leave it alone forever.<p>Apple is slowly converging OSX and iOS into one platform, ""inspired by iPad"", etc. Microsoft isn't doing that. They are smashing the two together at once, when they should really have created an OS that ran alongside the PC market until the proverbial train tracks merged. This way, everyone melds into a comfort zone rather than being shoved into it (not comfy).<p>I don't know if Apple initially figured this out intentionally but they are surely proud of it today, because people <i>want</i> iOS features on OSX  least to a degree. Apple incentivized the experience through the needs created by developers. Microsoft is not answering these needs (API) directly, instead, just supposing they should exist and that will translate into useful applications."
2012-02-28T16:41:21.000Z,"Ask HN: Customer facing API, how would you do it?","To answer these questions ourselves:<p>1. We plan to include the documentation for the API at the root of the API i.e. <a href=""https://api.verelo.com"" rel=""nofollow"">https://api.verelo.com</a> will serve up the API spec.<p>2. One thing that I want to ensure we avoid is simply having return values that are not explained anywhere in the documentation, Facebook drives me nuts for this reason.<p>3. The main API i've worked with recently has been Facebook. I love how much info it exposes, but i hate how much it changes and the lack of documentation. There are also a bunch of surprise functions in there, very frustrating.<p>4. We use a lot of Zend functions today, the Zend framework is my initial thought..."
2012-02-28T02:16:07.000Z,"Dear Github, please fix the Watch-Button","<i>Really, the issue is that the news feed is broken.</i><p>Absolutely. I coded up a replacement using the GitHub API:<p><a href=""http://gilesbowkett.blogspot.com/2010/10/node-miniapp-minimal-github-dashboard.html"" rel=""nofollow"">http://gilesbowkett.blogspot.com/2010/10/node-miniapp-minima...</a><p>It broke when they changed the API, but by then I had found <a href=""http://defunkt.io/dotjs"" rel=""nofollow"">http://defunkt.io/dotjs</a>, which allows you to execute any code in a ~/.js file for a given domain.<p>So I put $(""div.news"").hide(); in my github.com.js and instantly had a more relaxing, comfortable life.<p>I completely disagree with this part of your post:<p><i>Facebook has done a really good job solving the problems of information overload and would provide a good model.</i><p>But I do agree with these:<p><i>The most important step is to group updates from each project. Right now half of my news feed is comments on a single repository. Those should take up only one or two slots.
The next step is to filter according to some metric of ""interestingness.""</i><p>My advice is do it and share the hack. I think the best way to find trouble spots in your UI is to find out what people are writing hacks to work around."
2012-02-24T16:45:05.000Z,Went Off The Rails: Why I'm Rebuilding Archaeopteryx In CoffeeScript,"Has anyone made a comprehensive comparison of the top web frameworks and how mature the libraries/plug-ins/services around them are?<p>Frankly, Rails and Node.js seem to have much more in common than apart.  Both are based around relatively inconsistent languages (though conforming to some BDD or Good Parts style can help), both have deeply flawed runtimes in terms of performance and especially parallelism, and they seem to have extremely high overlap in the people who program in both frameworks.<p>What I care about is libraries, plug-ins, and services.  Specifically, if I have some new web task, what I care about is that there is some library/plug-in/service that exists to perform that task (e.g., user auth, Facebook API, exception logging, Heroku, resque, state machines), that the library/plug-in/service is mature enough that I can pretend it works, and that it has enough of a community around it that it won't break in the future.<p>Is there some comprehensive list of use cases, plug-ins/libraries/services, and relative maturity of those plug-ins/libraries/services across web frameworks?  For example, the maturity of the various ORMs across frameworks, or the various testing tools, or the various Facebook libraries.  It would be great to see it change over time, and to know when to jump ship to the next flawed language/runtime that has good plug-ins/libraries/services."
2012-02-04T01:49:24.000Z,Facebook hit git performance issue on large repository,"Three big problems with a split up codebase:<p>1) Instead of doing one large release every week (which facebook does: <a href=""http://www.facebook.com/video/video.php?v=10100259101684977"" rel=""nofollow"">http://www.facebook.com/video/video.php?v=10100259101684977</a>) you now have dozens or hundreds of smaller releases, a lot more heterogeneity to test for.<p>2) If you have inter-dependencies on modules you have to grapple with the ""diamond dependency"" problem. Say module A depends on module B and C, and suppose that module B also depends on C. However, module B depends on C v2.0 but A depends on C v1.0. If they're all split across repositories it's not possible to update a core API in an atomic commit.<p>3) Now you rely on changes being merged ""up"" to the root and then you have to merge it ""down"" to your project. This is one of the reasons Vista was such a slow motion train wreck: <a href=""http://moishelettvin.blogspot.com/2006/11/windows-shutdown-crapfest.html"" rel=""nofollow"">http://moishelettvin.blogspot.com/2006/11/windows-shutdown-c...</a> -- kernel changes had to \nbe merged up to the root, then down to the UI, requiring months of very slow iterations to get it right."
2012-02-04T01:26:12.000Z,Facebook hit git performance issue on large repository,"There're costs and benefits both ways.  AFAIK, Microsoft and Amazon both use the separate repositories model, and Google and Facebook use a single large repository.  Most people I know that have worked at both of these styles prefer the Google/Facebook style.<p>The biggest advantage of a single repository is pretty intangible - it's cultural.  When anyone can change anything or can use any code, people feel like the <i>whole company</i> belongs to them, and they're responsible for Google/Facebook's success as a whole.  People will spontaneously come together to accomplish some user need, and they can refactor to simplify things across component boundaries, and you don't get the sort of political infighting that tends to plague large organizations where people in subprojects never interact with each other.<p>I think if it were my company, I'd want the single repository model, but there need to be tools and practices to manage API complexity.  I dunno what those tools &#38; practices would look like; there are some very smart people in Google that are grappling with this problem though."
2012-01-29T17:07:06.000Z,How Should Facebook Use $10 Billion in IPO Cash?,"Doing nothing is not an option. I don't even know why that was mentioned. You can't sit on money like that. However, they probably will let the dust settle for a few weeks or few months before spending their cash. At least I hope so.<p>They aren't going to pull a Microsoft and purchase a search company. Google is not as much of a threat really. Search isn't Facebook's expertise <i>and</i> it isn't their market. They would be happy letting Google continue to drive people around for answers on the web, while Facebook will continue to entertain and be friendship/family/work/etc. communication/community focused.<p>So what <i>should</i> they do with it? Focus on communication, community/community needs, and gaming. They need to ensure that they keep the attention of their existing community.<p>As for what to do with the cash:<p>1. Hire some awesome user experience/interface people. And those people need to work on timeline/profile view. The only reason people aren't complaining more about it is that FB like Google does not really provide a customer support experience that makes you feel like they actually care about your opinion individually. If you've ever submitted a bug to FB, you know what I mean. As for the interface, alternating left and right updates on the timeline makes it tougher to read and find things. And the whole feed thing on the right needs to go away. There should be a single feed page and a single profile page with controls to change filtering on posts. That is so obvious and ubiquitous elsewhere, so failing to provide a good interface for status updates when that is basically the point is ridiculous.<p>2. Hire some better folks to lead up API development. It is a huge mess right now. Too many APIs that don't all do the same thing, and breaking Javascript API with changes. Not cool.<p>3. For M&#38;A, focus on bringing resources onboard for community, ratings and reviews, e-commerce focus. They could easily compete with Amazon and/or eBay within the existing social/community framework and it is a better idea for business than simply referrals, advertising, and selling imaginary sheep for people's imaginary farms."
2012-01-10T03:15:42.000Z,Twitter’s poor API documentation practices,"I don't know, Twitter API at least works in consistent manner.<p>If you ever tried Facebook API ... People complain that there are no examples for Facebook API: the problem is that they cannot keep up with example to work with constant changes, so they just gave up on examples."
2012-01-09T23:03:05.000Z,Twitter’s poor API documentation practices,"Facebook API had so many breaking changes happening all the time that they decided, as a ""benefit"" to developers, that they would stack them all up to occur on the first of each month.  This is in the name of BS called ""operation developer love"".  And this is only for the breaking changes that get announced. The much more common scenario that ComputerGuru mentions is where stuff gets broken, acknowledged as a bug Facebook, and then never fixed.   If you read the stats they publish in their blog posts, 2-3x the number of bugs get accepted than the number that get fixed, EVERY SINGLE week."
2011-12-27T19:39:54.000Z,Facebook deleted their Python SDK repository without warning,"There are literally 240 forks of this essentially abandoned and/or poorly maintained Python SDK since May 2010 I think, and I think they just put it back with a notice to say it's deprecated. To be honest, I think people just fork the hell out of it, improve on it and find a common location for merges until Facebook releases a new one. If they don't, the community should just hack up a new one. The Facebook API changes every week and breaks every other week in 1 thing or another anyway. The community would probably respond faster and better to these changes than Facebook. It would be best if we could just agree on a central location for fork merges.<p>I personally just keep a modified version of this fork in my repository.<p><a href=""https://github.com/liorsion/python-sdk/"" rel=""nofollow"">https://github.com/liorsion/python-sdk/</a><p>A note on DjangoPyPI and PyPI in general. I think it's about time we have a feature complete, stable, alternate PyPI implementation now. I tried virtually all the PyPI implementations out there a couple months ago and eventually had to settle with DjangoPyPI very reluctantly. It has trouble sitting behind a proxy and deleting things. In short, it's a mess, but it's the best in terms of features supported out there right now. It's a sad state of affairs, but Python should, and can do better than this. There's no way we can't have something like Maven or RubyGems."
2011-12-03T20:04:46.000Z,Personal bulletin boards won't return without a good reason,"I disagree.<p>Methinks the general public is capable of running their own server. Also, I predict a backlash against the hosted-at-X paradigm. Open source doesn't know it, but the battle for freedom ""in the cloud"" is just about to begin.<p>Option 1: Use fb, dbox, and gmail for all your shit.<p>Option 2: Start the ""blog"", ""sshd"" and ""mail"" daeemon-apps on your own server, which in turn could be hosted anywhere.<p>The big selling(freeing?) point of an FOSS and self-administered facebook is privacy. 
Right now, people dont seem to care about privacy all that much, and I can't blame them.
Every time the privacy debate comes up in relation to google or facebook the conversation is steered towards the following assumptions:<p><pre><code>  - The attacker is another member of the website or an anonymous web user.
  - The platform (gmail or facebook) is a trusted third party.
</code></pre>
This is not the debate I want to be having. I don't agree with the second assumption. Any privacy policy I can fill out for my data will not prevent the company from accessing my data. They own the database and the file servers and even have authority over my login credentials for that website.<p>What about the privacy in the following paradigm:<p><pre><code>   - The attacker can be any person or company on the internet.
   - Your server is a VM in a distributed platform of hosts.
   - You have a special credential (id-rsa), which is used to change settings on the VM.  
   - Host can be trusted most of the time, but sometimes (prob=0.2) they are malicious.

</code></pre>
If we ensure there is a big ecosystem of hosting companies with a compatible API, then individual users could constantly migrate their hosting plans and change companies every month, or even every week. Thus in the worst case, a ""cloud host"" could eavesdrop on you just for one week. If you constantly change hosts, you will get a guaranteed 80% privacy, which is much better than 0% privacy.<p>Anyone who has lots of servers on their hands and wants to start a hosting company -- I say you get the whole ""my home in the cloud"" app hosting business started:
<a href=""http://ivan.unixdaemons.com/blog/?p=513"" rel=""nofollow"">http://ivan.unixdaemons.com/blog/?p=513</a><p>Eben Moglen talks to the troops: 
<a href=""http://isoc-ny.org/?p=1338"" rel=""nofollow"">http://isoc-ny.org/?p=1338</a>"
2011-11-21T23:30:13.000Z,The Facebook Phone: It's Finally Real and Its Name is Buffy,"Does Facebook have the ability to produce software with the required level of quality necessary to ship in consumer hardware devices?<p>I've worked with their API's, which are core to their business, and they tend to be inconsistently implemented, changed at will and have high rates of failure.<p>The existing culture of 'whatever, just ship it' would never produce a phone that is bug free enough to ship."
2011-11-15T05:49:23.000Z,Modern Web Applications are Here,"We are a startup called Glancee. We build a mobile app (iphone version + android version) that finds people in your area with friends or interests in common with you. The apps are native objective-c and java apps, and the backend is a mix of python, mondodb, and a bit of erlang.<p>A month ago we decided to build a facebook app to reach users that don't have a smartphone. We chose not to change one bit of code in the backend, and we were able to build the web app in 3 weeks with backbone, jquery, and websocket-js.<p>You can try it here: <a href=""http://apps.facebook.com/glancee"" rel=""nofollow"">http://apps.facebook.com/glancee</a><p>The app is just one 40-line html page, the rest is javascript (and templates embedded in js). You never refresh the page when clicking a link, which gives you the feeling of using something as fast and robust as gmail.<p>CSS files and JS files are compressed with requirejs before being deployed, so to load the page you need three requests (plus images). Right now our biggest bottleneck is the facebook api, which is tremendously slow."
2011-11-12T19:57:50.000Z,Flash is dead. Long live the internet.,"I felt the exact same way for a very, very long time. A few things changed my mind.<p>The first was the realization that Adobe wasn't going to make any more cool fun stuff for me. I feel like they've just lost their way with all that and now that I look back on it, it seems like Macromedia actually made all the aspects of Flash that I enjoy. The most recent thing Adobe has done for me is Stage3D but even that is so technical that they're relying on 3rd parties like Away3D to build the friendly API on top of it.<p>The second was doing a project that was as close to an art piece as I've ever come doing ad agency work that was entirely in HTML/CSS3 and JS. It was actually this project if you want to see some pictures: <a href=""http://inchwormstudio.com/?portfolio=samsung-coast-to-coast-photo-post"" rel=""nofollow"">http://inchwormstudio.com/?portfolio=samsung-coast-to-coast-...</a>
What I found while I was doing that project was that the web has changed a lot while I've been doing Flash and I didn't realize how much annoying obtuse boilerplate I had to write in AS3 that just becomes total cake when you're using HTML for markup, CSS for style and JS for slick transitions and communication. My main love affair is with HTML and JS, I still think CSS is...CSS. With HTML I'm getting all the great structural stuff that Flex devs love, without the mind numblingly elaborate class structures they have to deal with. With good JS libraries like jQuery I'm getting the cross browser DOM support that I need because I just don't have those sea legs yet. And when you combine it all you can work really, really fast. I spent the whole first half of that project cursing JavaScript up and down the office. I would make little examples showing how setInterval loses scope and demo it for my team and be like ""look! this stuff is retarded! I want AS3 back!"" Then one day I had to build this twitter widget, and I sat down and I just cranked it out in no time. And I thought, 'You know, if I had been doing this in Flash I would have spent so much time dealing with URLLoaders and cross policy files and coreLib for JSON parsing...' It just felt like things had gone smoother because I wasn't fighting against the web to make it fit inside my Flash app. And that was about the time that I felt like I got over the hump, and from there it was all downhill.<p>It totally had warts and I got stung by IE transparency bugs but in the end we sorted it all out and now I know how to deal with those issues. And to be honest, they were pretty minimal. The Facebook API was far worse than the cross browser stuff.<p>If you're making the transition then read this: <a href=""http://jqfundamentals.com/"" rel=""nofollow"">http://jqfundamentals.com/</a>
I read it start to finish and it made things so much easier for me. Then once you're comfortable with jQuery, leave it behind and try the other stuff. It feels like there is SO much more to experiment with in the JS world than the AS world and I think that's largely because the community is exponentially larger. Hope that's helpful."
2011-10-19T02:04:39.000Z,Mailgun API 2.0: forget MIME,"Love the changes.  Whether or not there's a lack of a good mime library in any given language it's always good to go from something that focuses on a standard based file not everyone is familiar with to a simple list of parameters.<p>It's also always great to work with companies with such nice api documentation.  It's so easy to do the facebook thing and have incomplete, unclear documentation and no real way of getting answers about it."
2011-09-23T18:42:44.000Z,The Facebook Timeline is creepy as hell,"You are assuming that only people that you have friended will be able to see your stuff. How long before facebook changes their polices again, so that all information is viewable by default to the public?  Or before they sell it all to markters?  Or before another app developer finds an exploit in the API to let them access anyone's information?  When beacon came out, the outcry was loud enough to make Facebook back off.  But that doesn't mean they won't try something similarly bold again."
2011-09-23T17:12:20.000Z,I was once a Facebook fool,Not at all. Sharecroppers are typically protected by contract law; landlords can't just arbitrarily evict them in the middle of the growing season. By contrast Facebook can change their API or terms of service at any time. Facebook developers have no way to seek redress (except the court of public opinion).
2011-08-24T18:31:38.000Z,Facebook Partners with Stack Overflow,"I don't see the stack overflow model as being a great fit for what facebook api developers need.  The main problem I saw with facebook api was that the right way to do things kept changing, and the docs and forum didn't keep up well.  You basically needed to begin facebook API work by reading the entire blog in chronological order and then keep on scanning the dev blog daily, which may work ok if you're a fulltime facebook API developer but it is not a good fit for contract or part-time or hobby development.<p>I think changing APIs is begging for a wiki much more than a Q&#38;A site.  Facebook used to have a wiki for their api, but they went and deleted it, which I considered basically unforgiveable and proceeded to do my best to avoid having to touch the API after that.<p>In short, bringing back <a href=""http://wiki.developers.facebook.com/"" rel=""nofollow"">http://wiki.developers.facebook.com/</a> and focusing on keeping it current would be a much better start than a Q&#38;A site, even a really good Q&#38;A site.  You'd still have the need-to-keep-with-changes problem, but at least you'd have somewhere to start from, and wouldn't keep getting referred to out of date information when googling answers.<p>Yes I know Stack Overflow has community editable wiki question styles, but then you just compound the problem and now need to update 100 different 'how do I [x]' questions every time the API changes."
2011-08-11T18:11:44.000Z,Show HN: 1-click opt-out from websites selling your personal information,"That looks pretty great. I love the look of your front page - the only thing that doesn't fit is the line of social network buttons, but those are easily forgiven. Your privacy policy is very much to-the-point, which is nice, but (as a geek), it would be nice to know what you're doing to keep the information protected. Your Terms of Service are using the same style as the privacy policy, which squeezes it down and makes it much harder to read (no, I wasn't reading through all of it, I was just looking at that page), so you might want to change that.<p>Anyways, moving on to actually trying the service. Using Facebook login, it works pretty well, though slowly - graph.facebook.com hangs for quite a while. It would be nice if you could pull more information than my email address from Facebook, since all of the other things you ask for could be present in that profile. Not sure if their API allows that, though. And I continue to love the visual style.<p>The electronic opt-outs are completely painless, which is awesome.<p>So yeah; great service, completely painless, one that I will probably recommend to anyone who wants to opt-out from marketing."
2011-08-08T21:18:27.000Z,"Mug-Shot Industry Will Dig Up Your Past, Charge You to Bury It Again","I had a similar idea - searching for your classmates' criminal records. Couple it with facebook, etc., etc.<p>What stopped me was exactly what the site pointed out - everything is extremely fragmented, and of course there's no API. I didn't want to run a project where every day I'd have to check and make certain that none of the sites changed their markup, or URL structure, or anything else."
2011-07-31T15:09:37.000Z,Show HN: Online Privacy through Client-side Encryption,"Link and a bit more technical details:<p><a href=""https://www.socialfortress.com/"" rel=""nofollow"">https://www.socialfortress.com/</a><p>Social Fortress currently provides transparent client-side encryption and decryption within Facebook, Google+, Thunderbird and Outlook for your messages and photos.<p>When you download and install Social Fortress your plugin is customized to sync with just your account and the key management server. This unique plugin is authorized to request keys for messages for your Trusted Contacts and generate new keys associated with your account.<p>The keys are generated in parallel on the client and on the key management server. They are always rolling forward and are synced with the key management server in real-time utilizing a few unique variables within your custom plugin and a few generated randomly each time.<p>No two messages are encrypted with the same key and keys are only stored in memory during the encryption / decryption process. Every time a message or photo that has been protected is viewed, either by yourself or others, authorization to that messages key is requested from the key management server.<p>Your Trusted Contact list is managed globally by connecting with other users through Social Fortress. Within Facebook all of your friends are initially treated as Trusted Contacts and you can easily remove individuals from this list with the click of a button.<p>Social Fortress uses AES-256 CTR for the encryption and communicates over a 256 SSL stream from your device to the key management server. The data in this stream is also encrypted using aspects of your customized installation.<p>The technology for web services (Facebook, Google+) operates as browser plugin for Firefox, Chrome and Internet Explorer[1] and independent of any service's API.<p>The technology for Thunderbird and Outlook is a separate plugin which requires installation.<p>We integrate transparently into the products we support so the user experience is exactly the same. No extra clicks, no confusing decisions and nothing extra to learn. We designed Social Fortress to be used by individuals who don't even know what the word encryption is.<p>Within every environment you have the ability to enable / disable Social Fortress protection with the click of a button or using a keyboard shortcut (CTRL+Q). This only disables the encryption functions. The reader is always on so messages and photos protected by your friends appear normal without you having to protect your own. It's like having Flash or PDF Reader once it is installed you don't ever have to do anything again.<p>If your device becomes compromised / lost / whatever you can login to the site and disable all active installations in two clicks and this will not affect previously encrypted messages as we just disable authorization access to your old plugins and have no need to change any previously generated keys.<p>We also support other services but have yet to make them live:<p>Skype Chat<p>Twitter<p>mail.yahoo.com<p>Gmail.com<p>Chatter.com<p>Yammer.com<p>Blackberry Native Email support<p>[1] The IE Plugin is not currently part of the public beta."
2011-07-12T19:27:25.000Z,Did Facebook hijack a developers app for its own purposes?,"When you're building on someone else's platform, you're subject to their whims, whether you like it or not. Facebook can delete your app for no reason, so can Apple and Google and Microsoft. If you're building a Netflix or Twitter app and they change their API (or terms of service) to disable your app, you don't really have any legal recourse. Yeah it sucks, but it's a pitfall of doing business on someone else's platform, and one that developers should be keenly aware of before they start."
2011-05-27T12:05:02.000Z,Google Announces APIs Scheduled for Shutdown,"Perhaps there's a SaaS opportunity to build an intermediary API for these other services.  It would present a single, sensible, unified API to developers, and would negotiate all of the crappy APIs of other services on the other side.<p>Facebook changes their API?  No problem, API Intermediary simply updates its Facebook API calls once, maintaining the same developer-facing API as before.  Google Translate gets deprecated?  No problem, API Intermediary just switches translation providers to Microsoft.<p>Of course this would be a ton of work to build and maintain, but therein lies the value to others.  Because of that, it probably couldn't be free (who would want that headache for nothing?) and it would probably not always offer the full range of capabilities that direct API access would, but it may still be profitable."
2011-05-15T10:32:15.000Z,Why We are Moving Away from Facebook as a Platform,"I agree. The Facebook API is a mess. It is too costly for developers to chase the changes and the API itself is too restrictive. It's like AppleScript, a great idea, pity you cannot do much with it."
2011-05-11T15:45:09.000Z,Please review my weekend project. 100% client side webapp. Scales infinitely,"YouTube comments are inane.  TechCrunch has shown that photo-attached Facebook comments significantly increase the quality of comments.  TVDinnr shows YouTube videos with Facebook comments for more interesting discussions.<p>There are a few known issues that I have to finish, listed at the bottom.  Nevertheless, it is functional and fun to use.<p>I created this as an experiment in Facebook comments and one-page JS webapps.<p>I know that many of you don't use Facebook, and neither did I, but the Facebook comment system has a lot of intelligence in its social sorting algorithm and it is very viral.<p>The whole app code is one index.html.  I minified and compress the css/js into one file on deploy.  All data and functionality come from js apis.<p>It scales infinitely because I can host the file on S3 and point the DNS at it.<p>Working on this made me realize that the world needs a front-end-based javascript web framework.<p>There are a number of backend js frameworks including ones that bridge to ajax on frontend, but none focus on making purely JS apps (with JS, GWT uses java) on one page using hashes and/or history.  jQuery does a lot of stuff, but webapps need a little glue.<p>We need a full client-side JS app framework, with an URL Router, Templates, Controllers, Models, and plugins. It should be able to wrap json api interfaces easily, and it should handle all the page changes that need to happen when it's all just js changes.<p>TODO:
* Needs real, accurate logo; using a placeholder for now
* Orange share button broken
* Video duration not shown; descriptions not shown
* No category browse feature
* No About page, FAQ, Press, etc
* Search should have instant suggestions
* Design could be prettier<p><i></i>* The Facebook status message is generic not video specific because facebook's server side crawler does not execute js.   I might make a small server side component using Go on GAE later to fix this."
2011-04-20T11:55:51.000Z,The Dangers of Relying on Facebook,"Facebook API client author here (<a href=""http://restfb.com"" rel=""nofollow"">http://restfb.com</a>).  In my experience, you've got to be extremely careful/defensive when relying on anything from FB.  Undocumented breaking changes are commonplace and no one on the FB side seems to care very much, possibly because they've got a de facto monopoly for the time being, or possibly because community notifications/documentation/etc. are boring next to sexy engineering problems.<p>Parroting the article, I know: unless your entire app is Facebook-centric, be careful of tightly locking it to FB.  If you must tie yourself to FB, think long and hard about doing so first and if you proceed make sure you've got a mitigation plan in place if things go south."
2011-04-19T08:21:37.000Z,Ask HN: good/bad experiences with Facebook Credits?,"The rules around Credits, virtual currency, and the platform in general are still changing and it seems sometimes that Facebook is still learning what it needs to do to run a serious and dependable payments system.<p>Until very recently, Credits have not really been supported beyond the level of an experiment. That's starting to change, but a lot of functionality and support is still missing. The phase-out of free promotional credits (for which developers were not paid), which was originally slated to occur on February 15th, is ongoing. A functional reporting and management interface for Credits partners would be very welcome - currently this consists of an incomplete API and two .tsv files (a detailed list and a digest of transactions for the previous day) automatically emailed to publishers nightly. These emails started being sent about six weeks ago. There is currently no mechanism for responding to disputed payments or fraud claims but they say they're working on it.<p>There are positive aspects to Credits though. We see decent adoption but still process many more transactions and many more dollars (at a much lower fee, it's worth reiterating!) through Paypal. The checkout flow is pretty good, and while some people are less trusting of Facebook, some already regard them as a trustworthy steward of CC info, and the latter group is probably more closely aligned with target audiences than the former.<p>I'd say that right now (and at least until off-site, FB Connect implementations of Credits has been in use for months), it's a question of whether your project requires the other benefits of building on Facebook - user data, social hooks, etc - to the extent that it's worth swallowing the fee &#38; quirks of the platform. Then again, isn't that true of projects built on any proprietary platform, especially one that's still maturing?"
2011-04-01T22:10:36.000Z,How does an API become a platform?,"Unfortunately, noone who was trying to answer the question, seems to know what really platform is. People like to shrug off Microsoft as an old borg who lost its way in innovation, but these guys are the ones who actually know what platform is and what does it takes to keep 20+ years of backwards compatibility and workarounds for buggy clients in the code. Spolski was complaining that Microsoft invents too much new frameworks, but the truth is that even though there're 10s new frameworks, the old ones are still there and they will work if you need to use them in your rusty old LoB application. I can hardly imagine Microsoft doing with their API the same thing Twitter or Facebook does with theirs. Platforms can't change overnight because the owner is in search for monetization, otherwise it's not a platform, but a joke."
2011-03-21T18:42:49.000Z,From 0 to 100k users in 72 hours: the full story behind Breakup Notifier,"I spent a whole 8 hours this weekend playing with the Facebook Graph API for iPhone. Half of that was with no progress. The documentation sucks. The forums are barren. I've read post after post about breaking changes. What am I getting myself into.<p>I've spent over 5 hours trying to access my friends relationship status and cant get it to work. If anyone can help I would really appreciate it. Here is a Stackoverflow question I made: <a href=""http://stackoverflow.com/questions/5373077/access-friends-full-user-object-on-facebook-graph-api-for-iphone"" rel=""nofollow"">http://stackoverflow.com/questions/5373077/access-friends-fu...</a>"
2011-02-23T18:06:51.000Z,"One long, intimate month with the Facebook API","We just work with the API within the usual scope (fb connect, etc) but it breaks regularly and things sometimes change without notice. It's really a joke for a company of that size. It has become kind of a running gag in the office (like: ""Skip the tests, just release it. Today we do it facebook-style"")"
2011-02-21T04:32:13.000Z,Show HN: Breakup Notifier,"I built a Facebook app that does this for personal use. It's broken now since they released API changes, but it's pretty easy to do. Maybe I should go back and fix it and open source it.<p>Not sure what Facebook's policies say about these sort of notifications though."
2011-02-21T00:27:16.000Z,Show HN: Breakup Notifier,"A few days ago, my fiancee and her mom were talking about setting up a nice guy with my fiancee's sister. Unfortunately, said guy is in a relationship. My mother-in-law to be suggested it would be nice to know when the relationship was over (jokingly). I blurted out that I could make something that could do that in a couple of hours. By then, I knew I had to do it.<p>The application was built on Google Appengine, Django, and the Facebook Graph API. I'm checking for status changes every 24 hours, and am using the Appengine mail service to send emails whenever I notice that a relationship status has changed.<p>Seriously, this is mostly a joke. But enjoy, if you do choose to use it for real."
2011-02-09T03:14:13.000Z,Rate my startup: Adore.ly,"Hey,<p>Initially, we had a ""wall posting"" feature. User signs up via facebook and it will give them an option to post on their wall. However, I realized that if we require wall posting permission right up the front, that would really put off a lot of people. You see facebook doesn't allow us to change permission half way and this is one of the drawbacks of the facebook API (even if you like it, you can't force a permission change)."
2011-02-01T22:29:54.000Z,Why Stack Overflow Sucks and Participating There is Impossible,"A casual user should at the very least be able to flag an answer for review by a more senior user (and earn rep).
For example, fixing broken links, or Facebook API changes that make old answers invalid."
2011-01-06T22:42:15.000Z,We are in the AOL days of social networking,"First would be an API to export <i>all</i> of a user's data in a common format.  The current solution, where you email a large file in HTML format is not an acceptable solution.  Good for archiving, bad for data portability.<p>Most importantly, though, a clear change (or clear guidelines) to the Terms Of Service which would guarantee that moving your data to a competing service would not result in cancellation of the account or deletion of the new service's API key.<p>As for a distributed protocol, take a look at the functionality in Appleseed's QuickSocial and StatusNet for an idea of what a distributed protocol entails.  I should be able to login to facebook with an external identity, and add someone as a friend on facebook, without having an actual facebook account.<p>If Facebook is interested in these things, you can have some representatives join the Federated Social Web mailing list, and you can support the W3C working group on federated social networking, as well as supporting the Data Portability Project."
2010-12-10T01:50:32.000Z,Ask HN: Examples of great start-up job adverts?,"I have no idea if this is a good ad, but I got a good response and hired a great developer from the following ad:<p>Ruby on Rails Developer<p>We’re a funded, for-profit startup located in the Greenville area looking for a back-end web developer. We are developing a web-based application that will 1) help non-profit organizations establish a strong, easily-promotable web presence, and 2) simplify administration and marketing.<p>The person in this position will carry out all of the server-side coding for the company and be responsible for developing the back-end architecture so that we can scale effectively. We are starting with a small team consisting of 1) a back-end developer 2) a front-end developer and designer 3) a business developer 4) a very productive ant farm.<p>Our Ideal Developer Will Be/Have:
- Expert-level Rails knowledge
- Knowledge of JSON format (or similar)
- Working knowledge of developing e-commerce systems
- Excellent Object-Oriented Application Design skills
- Ability to utilize and implement functionality of Facebook's Open Graph API
- Working knowledge of HTML/CSS
- Experience in building Software-as-a-Service web apps<p>And They Will Show These Qualities:
- Integrity is at your core
- Wicked smart
- Clean code makes you smile
- Knowing that the end user is happy makes you smile even more
- Working with the flexibility, speed, and change of a small team makes you giddy
- Fast
- Very independent
- You both can and want to learn new skills quickly
- Voracious appetite for everything new in IT
- Excellent writing skills<p>Bonuses:
- Experience with Paypal, Twitter, Facebook Connect/OpenGraph APIs
- Social media excites you
- Good database design skills<p>This is an on-site salaried position. We will not accept applicants who 1) wish to work off-site 2) are contract workers 3) are outside companies. Salary will be determined based on your knowledge, experience, quality of your previous work, and fluidity of your hip-hop dancing skills.<p>If this sounds like it might be your cup of tea, go ahead and email your resume, examples of your work, and salary requirement."
2010-11-07T21:40:21.000Z,"Enabling Offline ""Facebook Likes"" Via QR Codes For Your Brand","My project ties QR codes to Twitter, Foursquare, and Facebook profiles: <a href=""http://www.getaquirk.com/"" rel=""nofollow"">http://www.getaquirk.com/</a>  So you can scan a QR and easily follow, check-in, etc.<p>Currently debugging a change in the FB API that broke something.  But still something to check out if you're into QR uses."
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
,,
